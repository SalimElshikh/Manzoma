<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.Entity">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.Entity.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Data.Objects.DataClasses">
      <topicdata group="api" />
      <apidata name="System.Data.Objects.DataClasses" group="namespace" />
      <elements>
        <element api="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" />
        <element api="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />
        <element api="T:System.Data.Objects.DataClasses.IEntityWithKey" />
        <element api="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />
        <element api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" />
        <element api="T:System.Data.Objects.DataClasses.ComplexObject" />
        <element api="T:System.Data.Objects.DataClasses.EntityObject" />
        <element api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
        <element api="T:System.Data.Objects.DataClasses.EntityReference" />
        <element api="T:System.Data.Objects.DataClasses.EntityReference`1" />
        <element api="T:System.Data.Objects.DataClasses.RelationshipManager" />
        <element api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />
        <element api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />
        <element api="T:System.Data.Objects.DataClasses.IRelatedEnd" />
        <element api="T:System.Data.Objects.DataClasses.RelatedEnd" />
        <element api="T:System.Data.Objects.DataClasses.RelationshipKind" />
        <element api="T:System.Data.Objects.DataClasses.StructuralObject" />
        <element api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />
      </elements>
    </api>
    <api id="T:System.Data.Objects.DataClasses.ComplexObject">
      <topicdata group="api" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
        <element api="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="IsReference">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.ComplexObject" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.ComplexObject" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.ComplexObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute">
      <topicdata group="api" />
      <apidata name="EdmComplexPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute">
      <topicdata name="EdmComplexPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />
      <apidata name="EdmComplexPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute">
      <topicdata name="EdmComplexPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />
      <apidata name="EdmComplexPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute">
      <topicdata group="api" />
      <apidata name="EdmComplexTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute">
      <topicdata name="EdmComplexTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />
      <apidata name="EdmComplexTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute">
      <topicdata name="EdmComplexTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />
      <apidata name="EdmComplexTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmComplexTypeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute">
      <topicdata group="api" />
      <apidata name="EdmEntityTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute">
      <topicdata name="EdmEntityTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />
      <apidata name="EdmEntityTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute">
      <topicdata name="EdmEntityTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />
      <apidata name="EdmEntityTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmEntityTypeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute">
      <topicdata group="api" />
      <apidata name="EdmEnumTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Enum" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute">
      <topicdata name="EdmEnumTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" />
      <apidata name="EdmEnumTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute">
      <topicdata name="EdmEnumTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" />
      <apidata name="EdmEnumTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmEnumTypeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmFunctionAttribute">
      <topicdata group="api" />
      <apidata name="EdmFunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmFunctionAttribute.#ctor(System.String,System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName" />
        <element api="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmFunctionAttribute">
      <topicdata name="EdmFunctionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />
      <apidata name="EdmFunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmFunctionAttribute">
      <topicdata name="EdmFunctionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />
      <apidata name="EdmFunctionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName" />
        <element api="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmFunctionAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="functionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.FunctionName">
      <topicdata group="api" />
      <apidata name="FunctionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FunctionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmFunctionAttribute.NamespaceName">
      <topicdata group="api" />
      <apidata name="NamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmFunctionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmPropertyAttribute">
      <topicdata group="api" />
      <apidata name="EdmPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Objects.DataClasses.EdmComplexPropertyAttribute" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmPropertyAttribute">
      <topicdata name="EdmPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" />
      <apidata name="EdmPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmPropertyAttribute">
      <topicdata name="EdmPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" />
      <apidata name="EdmPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute">
      <topicdata group="api" />
      <apidata name="EdmRelationshipAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor">
          <element api="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)" />
          <element api="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmRelationshipAttribute">
      <topicdata name="EdmRelationshipAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
      <apidata name="EdmRelationshipAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmRelationshipAttribute">
      <topicdata name="EdmRelationshipAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
      <apidata name="EdmRelationshipAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)" />
        <element api="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor" />
      <parameters>
        <parameter name="relationshipNamespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role1Name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role1Multiplicity">
          <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
        </parameter>
        <parameter name="role1Type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role2Name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role2Multiplicity">
          <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
        </parameter>
        <parameter name="role2Type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Type,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Objects.DataClasses.EdmRelationshipAttribute.#ctor" />
      <parameters>
        <parameter name="relationshipNamespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role1Name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role1Multiplicity">
          <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
        </parameter>
        <parameter name="role1Type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="role2Name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="role2Multiplicity">
          <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
        </parameter>
        <parameter name="role2Type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="isForeignKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.IsForeignKey">
      <topicdata group="api" />
      <apidata name="IsForeignKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsForeignKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipName">
      <topicdata group="api" />
      <apidata name="RelationshipName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelationshipName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.RelationshipNamespaceName">
      <topicdata group="api" />
      <apidata name="RelationshipNamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelationshipNamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Multiplicity">
      <topicdata group="api" />
      <apidata name="Role1Multiplicity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role1Multiplicity" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Name">
      <topicdata group="api" />
      <apidata name="Role1Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role1Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role1Type">
      <topicdata group="api" />
      <apidata name="Role1Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role1Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Multiplicity">
      <topicdata group="api" />
      <apidata name="Role2Multiplicity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role2Multiplicity" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipMultiplicity" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Name">
      <topicdata group="api" />
      <apidata name="Role2Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role2Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipAttribute.Role2Type">
      <topicdata group="api" />
      <apidata name="Role2Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Role2Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute">
      <topicdata group="api" />
      <apidata name="EdmRelationshipNavigationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute">
      <topicdata name="EdmRelationshipNavigationPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />
      <apidata name="EdmRelationshipNavigationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute">
      <topicdata name="EdmRelationshipNavigationPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />
      <apidata name="EdmRelationshipNavigationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceName" />
        <element api="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="relationshipNamespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetRoleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipName">
      <topicdata group="api" />
      <apidata name="RelationshipName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelationshipName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.RelationshipNamespaceName">
      <topicdata group="api" />
      <apidata name="RelationshipNamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RelationshipNamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute.TargetRoleName">
      <topicdata group="api" />
      <apidata name="TargetRoleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetRoleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmRelationshipNavigationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute">
      <topicdata group="api" />
      <apidata name="EdmScalarPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EdmPropertyAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.EntityKeyProperty" />
        <element api="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.IsNullable" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute">
      <topicdata name="EdmScalarPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />
      <apidata name="EdmScalarPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute">
      <topicdata name="EdmScalarPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />
      <apidata name="EdmScalarPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.EntityKeyProperty" />
        <element api="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.IsNullable" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.EntityKeyProperty">
      <topicdata group="api" />
      <apidata name="EntityKeyProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKeyProperty" />
      <setter name="set_EntityKeyProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute.IsNullable">
      <topicdata group="api" />
      <apidata name="IsNullable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsNullable" />
      <setter name="set_IsNullable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmScalarPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmSchemaAttribute">
      <topicdata group="api" />
      <apidata name="EdmSchemaAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor">
          <element api="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
          <element api="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmSchemaAttribute">
      <topicdata name="EdmSchemaAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />
      <apidata name="EdmSchemaAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmSchemaAttribute">
      <topicdata name="EdmSchemaAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />
      <apidata name="EdmSchemaAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor" />
      <parameters>
        <parameter name="assemblyGuid">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmSchemaAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EdmTypeAttribute">
      <topicdata group="api" />
      <apidata name="EdmTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Objects.DataClasses.EdmEnumTypeAttribute" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EdmEntityTypeAttribute" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EdmComplexTypeAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EdmTypeAttribute">
      <topicdata name="EdmTypeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EdmTypeAttribute" />
      <apidata name="EdmTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EdmTypeAttribute">
      <topicdata name="EdmTypeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EdmTypeAttribute" />
      <apidata name="EdmTypeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name" />
        <element api="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmTypeAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EdmTypeAttribute.NamespaceName">
      <topicdata group="api" />
      <apidata name="NamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NamespaceName" />
      <setter name="set_NamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EdmTypeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EntityCollection`1">
      <topicdata group="api" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.IListSource" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach">
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.Count" />
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly" />
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="element">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach">
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityCollection`1.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.Count" />
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly" />
        <element api="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach">
      <topicdata name="Attach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Attach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
        <element api="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entities">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Attach" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
      <topicdata group="api" />
      <apidata name="CreateSourceQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Objects.ObjectQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.EntityCollection`1.Load" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)">
          <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="mergeOption">
          <type api="T:System.Data.Objects.MergeOption" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
      <topicdata group="api" eiiName="IListSource.ContainsListCollection" />
      <apidata name="ContainsListCollection" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IListSource.ContainsListCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IListSource.ContainsListCollection">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
      <topicdata group="api" eiiName="IListSource.GetList" />
      <apidata name="GetList" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.IListSource.GetList">
          <type api="T:System.ComponentModel.IListSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EntityObject">
      <topicdata group="api" />
      <apidata name="EntityObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Data.Objects.DataClasses.IEntityWithKey" ref="true" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" ref="true" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Objects.DataClasses.EntityObject.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.EntityObject.EntityState" />
        <element api="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="IsReference">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EntityObject">
      <topicdata name="EntityObject" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EntityObject" />
      <apidata name="EntityObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EntityObject">
      <topicdata name="EntityObject" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EntityObject" />
      <apidata name="EntityObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.EntityObject.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.EntityObject.EntityState" />
        <element api="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.EntityObject">
      <topicdata name="EntityObject" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.EntityObject" />
      <apidata name="EntityObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityObject.EntityKey">
      <topicdata group="api" />
      <apidata name="EntityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKey" />
      <setter name="set_EntityKey" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithKey" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityObject.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityState" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityObject.ReportPropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
          <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithChangeTracker#SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
      <topicdata group="api" eiiName="IEntityWithChangeTracker.SetChangeTracker" />
      <apidata name="SetChangeTracker" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="changeTracker">
          <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
      <topicdata group="api" eiiName="IEntityWithRelationships.RelationshipManager" />
      <apidata name="RelationshipManager" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager" />
      <returns>
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EntityReference">
      <topicdata group="api" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Objects.DataClasses.EntityReference.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EntityReference">
      <topicdata name="EntityReference" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EntityReference">
      <topicdata name="EntityReference" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.EntityReference.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.EntityReference">
      <topicdata name="EntityReference" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityReference.EntityKey">
      <topicdata group="api" />
      <apidata name="EntityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKey" />
      <setter name="set_EntityKey" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Objects.DataClasses.EntityReference`1">
      <topicdata group="api" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Data.Objects.DataClasses.EntityReference" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Objects.DataClasses.EntityReference.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.EntityReference`1">
      <topicdata name="EntityReference" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference`1" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.EntityReference`1.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.EntityReference`1">
      <topicdata name="EntityReference" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference`1" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.Data.Objects.DataClasses.EntityReference.EntityKey" />
        <element api="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.EntityReference`1">
      <topicdata name="EntityReference" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.EntityReference`1" />
      <apidata name="EntityReference" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.EntityReference`1.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
        <element api="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityReference`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery">
      <topicdata group="api" />
      <apidata name="CreateSourceQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Data.Objects.ObjectQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityReference`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.EntityReference`1.Load" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)">
          <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="mergeOption">
          <type api="T:System.Data.Objects.MergeOption" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.EntityReference`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="TEntity" index="0" api="T:System.Data.Objects.DataClasses.EntityReference`1" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Objects.DataClasses.IEntityChangeTracker">
      <topicdata group="api" />
      <apidata name="IEntityChangeTracker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.ObjectStateEntry" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(System.String,System.Object,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(System.String,System.Object,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(System.String)" />
        <element api="P:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.IEntityChangeTracker">
      <topicdata name="IEntityChangeTracker" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />
      <apidata name="IEntityChangeTracker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(System.String,System.Object,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(System.String,System.Object,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.IEntityChangeTracker">
      <topicdata name="IEntityChangeTracker" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />
      <apidata name="IEntityChangeTracker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityState" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged(System.String,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="EntityComplexMemberChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entityMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="complexObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="complexObjectMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging(System.String,System.Object,System.String)">
      <topicdata group="api" />
      <apidata name="EntityComplexMemberChanging" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entityMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="complexObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="complexObjectMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanged(System.String)">
      <topicdata group="api" />
      <apidata name="EntityMemberChanged" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entityMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityMemberChanging(System.String)">
      <topicdata group="api" />
      <apidata name="EntityMemberChanging" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entityMemberName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_EntityState" />
      <returns>
        <type api="T:System.Data.EntityState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker">
      <topicdata group="api" />
      <apidata name="IEntityWithChangeTracker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.IEntityWithChangeTracker">
      <topicdata name="IEntityWithChangeTracker" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />
      <apidata name="IEntityWithChangeTracker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IEntityWithChangeTracker.SetChangeTracker(System.Data.Objects.DataClasses.IEntityChangeTracker)">
      <topicdata group="api" />
      <apidata name="SetChangeTracker" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="changeTracker">
          <type api="T:System.Data.Objects.DataClasses.IEntityChangeTracker" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithChangeTracker" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.IEntityWithKey">
      <topicdata group="api" />
      <apidata name="IEntityWithKey" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.IEntityWithKey">
      <topicdata name="IEntityWithKey" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.IEntityWithKey" />
      <apidata name="IEntityWithKey" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithKey" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IEntityWithKey.EntityKey">
      <topicdata group="api" />
      <apidata name="EntityKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityKey" />
      <setter name="set_EntityKey" />
      <returns>
        <type api="T:System.Data.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithKey" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.IEntityWithRelationships">
      <topicdata group="api" />
      <apidata name="IEntityWithRelationships" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.IEntityWithRelationships">
      <topicdata name="IEntityWithRelationships" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />
      <apidata name="IEntityWithRelationships" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager">
      <topicdata group="api" />
      <apidata name="RelationshipManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelationshipManager" />
      <returns>
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.IRelatedEnd">
      <topicdata group="api" />
      <apidata name="IRelatedEnd" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Add">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Attach">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Load">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Remove">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)" />
        </element>
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.IRelatedEnd">
      <topicdata name="IRelatedEnd" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.IRelatedEnd" />
      <apidata name="IRelatedEnd" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Add">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Attach">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Load">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Remove">
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.IRelatedEnd">
      <topicdata name="IRelatedEnd" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.IRelatedEnd" />
      <apidata name="IRelatedEnd" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Attach">
      <topicdata name="Attach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Attach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Add" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Attach" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Attach" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
      <topicdata group="api" />
      <apidata name="CreateSourceQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded">
      <topicdata group="api" />
      <apidata name="IsLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Load">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Load" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mergeOption">
          <type api="T:System.Data.Objects.MergeOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName">
      <topicdata group="api" />
      <apidata name="RelationshipName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelationshipName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet">
      <topicdata group="api" />
      <apidata name="RelationshipSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RelationshipSet" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Remove" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.IRelatedEnd.Remove" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName">
      <topicdata group="api" />
      <apidata name="SourceRoleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SourceRoleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName">
      <topicdata group="api" />
      <apidata name="TargetRoleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TargetRoleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.RelatedEnd">
      <topicdata group="api" />
      <apidata name="RelatedEnd" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EntityReference" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.RelatedEnd">
      <topicdata name="RelatedEnd" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.RelatedEnd" />
      <apidata name="RelatedEnd" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator" />
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
        </element>
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery" />
        <element api="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
          <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" />
      </containers>
    </api>
    <api id="Properties.T:System.Data.Objects.DataClasses.RelatedEnd">
      <topicdata name="RelatedEnd" group="list" subgroup="Properties" typeTopicId="T:System.Data.Objects.DataClasses.RelatedEnd" />
      <apidata name="RelatedEnd" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName" />
        <element api="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.RelatedEnd">
      <topicdata name="RelatedEnd" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.RelatedEnd" />
      <apidata name="RelatedEnd" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach">
      <topicdata name="Attach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Attach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Objects.DataClasses.RelatedEnd.AssociationChanged">
      <topicdata group="api" />
      <apidata name="AssociationChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AssociationChanged" />
      <remover name="remove_AssociationChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.CollectionChangeEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.GetEnumerator">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded">
      <topicdata group="api" />
      <apidata name="IsLoaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsLoaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IRelatedEnd.IsLoaded">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.Load">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.Load(System.Data.Objects.MergeOption)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.Load" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="mergeOption">
          <type api="T:System.Data.Objects.MergeOption" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Load(System.Data.Objects.MergeOption)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipName">
      <topicdata group="api" />
      <apidata name="RelationshipName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RelationshipName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipName">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Objects.DataClasses.RelatedEnd.RelationshipSet">
      <topicdata group="api" />
      <apidata name="RelationshipSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RelationshipSet" />
      <returns>
        <type api="T:System.Data.Metadata.Edm.RelationshipSet" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IRelatedEnd.RelationshipSet">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Data.Objects.DataClasses.RelatedEnd.SourceRoleName">
      <topicdata group="api" />
      <apidata name="SourceRoleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SourceRoleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IRelatedEnd.SourceRoleName">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" eiiName="IRelatedEnd.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Object)">
      <topicdata group="api" eiiName="IRelatedEnd.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Add(System.Object)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" eiiName="IRelatedEnd.Attach" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Data.Objects.DataClasses.IEntityWithRelationships)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach(System.Object)">
      <topicdata group="api" eiiName="IRelatedEnd.Attach" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Attach" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Attach(System.Object)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
      <topicdata group="api" eiiName="IRelatedEnd.CreateSourceQuery" />
      <apidata name="CreateSourceQuery" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.CreateSourceQuery">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" eiiName="IRelatedEnd.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Object)">
      <topicdata group="api" eiiName="IRelatedEnd.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Data.Objects.DataClasses.IRelatedEnd.Remove(System.Object)">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
    </api>
    <api id="P:System.Data.Objects.DataClasses.RelatedEnd.TargetRoleName">
      <topicdata group="api" />
      <apidata name="TargetRoleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_TargetRoleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Data.Objects.DataClasses.IRelatedEnd.TargetRoleName">
          <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelatedEnd" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.SoapIgnoreAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlIgnoreAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Data.Objects.DataClasses.RelationshipKind">
      <topicdata group="api" />
      <apidata name="RelationshipKind" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Data.Objects.DataClasses.RelationshipKind.Association" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="F:System.Data.Objects.DataClasses.RelationshipKind.Association">
      <topicdata group="api" notopic="" />
      <apidata name="Association" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Data.Objects.DataClasses.RelationshipKind" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipKind" ref="false" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.RelationshipManager">
      <topicdata group="api" />
      <apidata name="RelationshipManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.RelationshipManager">
      <topicdata name="RelationshipManager" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.RelationshipManager" />
      <apidata name="RelationshipManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.Data.Objects.DataClasses.IEntityWithRelationships" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds">
      <topicdata group="api" />
      <apidata name="GetAllRelatedEnds" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetRelatedCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TTargetEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetRoleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Objects.DataClasses.EntityCollection`1" ref="true">
          <specialization>
            <template name="TTargetEntity" index="0" api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetRelatedEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetRoleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Objects.DataClasses.IRelatedEnd" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetRelatedReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TTargetEntity">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="relationshipName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetRoleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Objects.DataClasses.EntityReference`1" ref="true">
          <specialization>
            <template name="TTargetEntity" index="0" api="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.RelationshipManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Data.Objects.DataClasses.StructuralObject">
      <topicdata group="api" />
      <apidata name="StructuralObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
          <type api="T:System.Data.Objects.DataClasses.EntityObject" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanging" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
        <element api="F:System.Data.Objects.DataClasses.StructuralObject.EntityKeyPropertyName" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.#ctor" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.BinaryEquals(System.Byte[],System.Byte[])" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.DefaultDateTimeValue" />
        <element api="Overload:System.Data.Objects.DataClasses.StructuralObject.GetValidValue">
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)" />
        <element api="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue">
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="IsReference">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Data.Objects.DataClasses.StructuralObject">
      <topicdata name="StructuralObject" group="list" subgroup="Methods" typeTopicId="T:System.Data.Objects.DataClasses.StructuralObject" />
      <apidata name="StructuralObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.BinaryEquals(System.Byte[],System.Byte[])" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.DefaultDateTimeValue" />
        <element api="Overload:System.Data.Objects.DataClasses.StructuralObject.GetValidValue">
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)" />
        <element api="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue">
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)" />
          <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        </element>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" />
      </containers>
    </api>
    <api id="Events.T:System.Data.Objects.DataClasses.StructuralObject">
      <topicdata name="StructuralObject" group="list" subgroup="Events" typeTopicId="T:System.Data.Objects.DataClasses.StructuralObject" />
      <apidata name="StructuralObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged" />
        <element api="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" />
      </containers>
    </api>
    <api id="Fields.T:System.Data.Objects.DataClasses.StructuralObject">
      <topicdata name="StructuralObject" group="list" subgroup="Fields" typeTopicId="T:System.Data.Objects.DataClasses.StructuralObject" />
      <apidata name="StructuralObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="F:System.Data.Objects.DataClasses.StructuralObject.EntityKeyPropertyName" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.StructuralObject.GetValidValue">
      <topicdata name="GetValidValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValidValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue">
      <topicdata name="SetValidValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)" />
        <element api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.BinaryEquals(System.Byte[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="BinaryEquals" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="first">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="second">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.DefaultDateTimeValue">
      <topicdata group="api" />
      <apidata name="DefaultDateTimeValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="F:System.Data.Objects.DataClasses.StructuralObject.EntityKeyPropertyName">
      <topicdata group="api" />
      <apidata name="EntityKeyPropertyName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue(System.Byte[])">
      <topicdata group="api" />
      <apidata name="GetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.GetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="currentValue">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.GetValidValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="currentValue">
          <template name="T" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
        </parameter>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isInitialized">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.GetValidValue``1(``0,System.String,System.Boolean,System.Boolean)" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.OnPropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="E:System.Data.Objects.DataClasses.StructuralObject.PropertyChanging">
      <topicdata group="api" />
      <apidata name="PropertyChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanging" />
      <remover name="remove_PropertyChanging" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangingEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging">
          <type api="T:System.ComponentModel.INotifyPropertyChanging" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
      <topicdata group="api" />
      <apidata name="ReportPropertyChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Byte[],System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Spatial.DbGeography" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Spatial.DbGeography" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeography,System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Spatial.DbGeography" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Spatial.DbGeography" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Spatial.DbGeometry" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Spatial.DbGeometry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Data.Spatial.DbGeometry,System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Data.Spatial.DbGeometry" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Data.Spatial.DbGeometry" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTime,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.DateTimeOffset,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTimeOffset" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Decimal,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Double,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int16,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Int64,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTime" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTimeOffset" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.DateTimeOffset" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Decimal" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Double" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int16" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int16" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.SByte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.SByte" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Single" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.TimeSpan" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt16" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt16" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64},System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.SByte,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Single,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isNullable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.TimeSpan,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt16,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt32,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.UInt64,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)">
      <topicdata group="api" />
      <apidata name="SetValidValue" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Data.Objects.DataClasses.StructuralObject.SetValidValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="oldValue">
          <template name="T" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        </parameter>
        <parameter name="newValue">
          <template name="T" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
        </parameter>
        <parameter name="property">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)">
      <topicdata group="api" />
      <apidata name="VerifyComplexObjectIsNotNull" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TComplex">
          <constrained>
            <type api="T:System.Data.Objects.DataClasses.ComplexObject" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="complexObject">
          <template name="TComplex" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TComplex" index="0" api="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)" />
      </returns>
      <containers>
        <library assembly="System.Data.Entity" module="System.Data.Entity" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Data.Objects.DataClasses" />
        <type api="T:System.Data.Objects.DataClasses.StructuralObject" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>