<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.VisualBasic">
      <assemblydata version="10.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualBasic.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualBasic.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualBasic.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Visual Studio® 12 CTP</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\\dd\\tools\\devdiv\\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.VisualBasic.FileIO">
      <topicdata group="api" />
      <apidata name="Microsoft.VisualBasic.FileIO" group="namespace" />
      <elements>
        <element api="T:Microsoft.VisualBasic.FileIO.FileSystem" />
        <element api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
        <element api="T:Microsoft.VisualBasic.FileIO.RecycleOption" />
        <element api="T:Microsoft.VisualBasic.FileIO.SearchOption" />
        <element api="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <element api="T:Microsoft.VisualBasic.FileIO.UIOption" />
        <element api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
        <element api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
        <element api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
        <element api="T:Microsoft.VisualBasic.FileIO.FieldType" />
      </elements>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
      <topicdata group="api" />
      <apidata name="DeleteDirectoryOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty" />
        <element api="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents">
      <topicdata group="api" notopic="" />
      <apidata name="DeleteAllContents" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty">
      <topicdata group="api" notopic="" />
      <apidata name="ThrowIfDirectoryNonEmpty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.FieldType">
      <topicdata group="api" />
      <apidata name="FieldType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited" />
        <element api="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.FieldType.Delimited">
      <topicdata group="api" notopic="" />
      <apidata name="Delimited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.FieldType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FieldType" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.FieldType.FixedWidth">
      <topicdata group="api" notopic="" />
      <apidata name="FixedWidth" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.FieldType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FieldType" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.FileSystem">
      <topicdata group="api" />
      <apidata name="FileSystem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
        <element api="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Resources">
            <type api="T:System.Security.Permissions.HostProtectionResource" ref="false" />
            <enumValue>
              <field name="ExternalProcessMgmt" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.VisualBasic.FileIO.FileSystem">
      <topicdata name="FileSystem" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      <apidata name="FileSystem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)" />
        </element>
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText">
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.VisualBasic.FileIO.FileSystem">
      <topicdata name="FileSystem" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      <apidata name="FileSystem" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor" />
      <elements>
        <element api="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory" />
        <element api="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory">
      <topicdata name="CopyDirectory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyDirectory" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile">
      <topicdata name="CopyFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CopyFile" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory">
      <topicdata name="DeleteDirectory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile">
      <topicdata name="DeleteFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles">
      <topicdata name="FindInFiles" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FindInFiles" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories">
      <topicdata name="GetDirectories" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetDirectories" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles">
      <topicdata name="GetFiles" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetFiles" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory">
      <topicdata name="MoveDirectory" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="MoveDirectory" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile">
      <topicdata name="MoveFile" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="MoveFile" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser">
      <topicdata name="OpenTextFieldParser" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenTextFieldParser" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader">
      <topicdata name="OpenTextFileReader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenTextFileReader" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter">
      <topicdata name="OpenTextFileWriter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenTextFileWriter" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText">
      <topicdata name="ReadAllText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ReadAllText" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText">
      <topicdata name="WriteAllText" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WriteAllText" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CombinePath(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CombinePath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="relativePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CopyDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <topicdata group="api" />
      <apidata name="CopyDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="CopyDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CopyDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <topicdata group="api" />
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CopyFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.CopyFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.CreateDirectory(System.String)">
      <topicdata group="api" />
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.FileSystem.CurrentDirectory">
      <topicdata group="api" />
      <apidata name="CurrentDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentDirectory" />
      <setter name="set_CurrentDirectory" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)">
      <topicdata group="api" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="onDirectoryNotEmpty">
          <type api="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <topicdata group="api" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="recycle">
          <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="recycle">
          <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="recycle">
          <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.DeleteFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="recycle">
          <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.DirectoryExists(System.String)">
      <topicdata group="api" />
      <apidata name="DirectoryExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.FileSystem.Drives">
      <topicdata group="api" />
      <apidata name="Drives" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Drives" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IO.DriveInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.FileExists(System.String)">
      <topicdata group="api" />
      <apidata name="FileExists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)">
      <topicdata group="api" />
      <apidata name="FindInFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="containsText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="searchType">
          <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <topicdata group="api" />
      <apidata name="FindInFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.FindInFiles" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="containsText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ignoreCase">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="searchType">
          <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
        </parameter>
        <parameter name="fileWildcards" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String)">
      <topicdata group="api" />
      <apidata name="GetDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <topicdata group="api" />
      <apidata name="GetDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectories" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchType">
          <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
        </parameter>
        <parameter name="wildcards" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDirectoryInfo(System.String)">
      <topicdata group="api" />
      <apidata name="GetDirectoryInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.DirectoryInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetDriveInfo(System.String)">
      <topicdata group="api" />
      <apidata name="GetDriveInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="drive">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.DriveInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFileInfo(System.String)">
      <topicdata group="api" />
      <apidata name="GetFileInfo" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.FileInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String)">
      <topicdata group="api" />
      <apidata name="GetFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])">
      <topicdata group="api" />
      <apidata name="GetFiles" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.GetFiles" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchType">
          <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
        </parameter>
        <parameter name="wildcards" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetName(System.String)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetParentPath(System.String)">
      <topicdata group="api" />
      <apidata name="GetParentPath" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.GetTempFileName">
      <topicdata group="api" />
      <apidata name="GetTempFileName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MoveDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <topicdata group="api" />
      <apidata name="MoveDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="MoveDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="MoveDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveDirectory" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationDirectoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)">
      <topicdata group="api" />
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)">
      <topicdata group="api" />
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="showUI">
          <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
        </parameter>
        <parameter name="onUserCancel">
          <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="MoveFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.MoveFile" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourceFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="overwrite">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String)">
      <topicdata group="api" />
      <apidata name="OpenTextFieldParser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.Int32[])">
      <topicdata group="api" />
      <apidata name="OpenTextFieldParser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fieldWidths" params="true">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name="OpenTextFieldParser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFieldParser" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="delimiters" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String)">
      <topicdata group="api" />
      <apidata name="OpenTextFileReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="OpenTextFileReader" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileReader" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="OpenTextFileWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="append">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="OpenTextFileWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.OpenTextFileWriter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="append">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllBytes(System.String)">
      <topicdata group="api" />
      <apidata name="ReadAllBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String)">
      <topicdata group="api" />
      <apidata name="ReadAllText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="ReadAllText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.ReadAllText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameDirectory(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RenameDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.RenameFile(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RenameFile" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllBytes(System.String,System.Byte[],System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteAllBytes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="append">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteAllText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="append">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name="WriteAllText" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.VisualBasic.FileIO.FileSystem.WriteAllText" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="file">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="append">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.FileSystem" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <topicdata group="api" />
      <apidata name="MalformedLineException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)" />
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)" />
          <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <topicdata name="MalformedLineException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      <apidata name="MalformedLineException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <topicdata name="MalformedLineException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      <apidata name="MalformedLineException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <elements>
        <element api="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      </containers>
    </api>
    <api id="Events.T:Microsoft.VisualBasic.FileIO.MalformedLineException">
      <topicdata name="MalformedLineException" group="list" subgroup="Events" typeTopicId="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      <apidata name="MalformedLineException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)" />
        <element api="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lineNumber">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor(System.String,System.Int64,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.MalformedLineException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lineNumber">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.MalformedLineException.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LineNumber" />
      <setter name="set_LineNumber" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Always" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.MalformedLineException.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.ToString">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.MalformedLineException" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.RecycleOption">
      <topicdata group="api" />
      <apidata name="RecycleOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently" />
        <element api="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.RecycleOption.DeletePermanently">
      <topicdata group="api" notopic="" />
      <apidata name="DeletePermanently" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.RecycleOption.SendToRecycleBin">
      <topicdata group="api" notopic="" />
      <apidata name="SendToRecycleBin" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.RecycleOption" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.SearchOption">
      <topicdata group="api" />
      <apidata name="SearchOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly" />
        <element api="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchAllSubDirectories">
      <topicdata group="api" notopic="" />
      <apidata name="SearchAllSubDirectories" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.SearchOption.SearchTopLevelOnly">
      <topicdata group="api" notopic="" />
      <apidata name="SearchTopLevelOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SearchOption" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <topicdata group="api" />
      <apidata name="SpecialDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Resources">
            <type api="T:System.Security.Permissions.HostProtectionResource" ref="false" />
            <enumValue>
              <field name="ExternalProcessMgmt" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <topicdata name="SpecialDirectories" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
      <apidata name="SpecialDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.VisualBasic.FileIO.SpecialDirectories">
      <topicdata name="SpecialDirectories" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
      <apidata name="SpecialDirectories" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor" />
      <elements>
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs" />
        <element api="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.SpecialDirectories.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.AllUsersApplicationData">
      <topicdata group="api" />
      <apidata name="AllUsersApplicationData" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllUsersApplicationData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.CurrentUserApplicationData">
      <topicdata group="api" />
      <apidata name="CurrentUserApplicationData" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentUserApplicationData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Desktop">
      <topicdata group="api" />
      <apidata name="Desktop" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Desktop" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyDocuments">
      <topicdata group="api" />
      <apidata name="MyDocuments" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MyDocuments" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyMusic">
      <topicdata group="api" />
      <apidata name="MyMusic" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MyMusic" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.MyPictures">
      <topicdata group="api" />
      <apidata name="MyPictures" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MyPictures" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.ProgramFiles">
      <topicdata group="api" />
      <apidata name="ProgramFiles" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProgramFiles" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Programs">
      <topicdata group="api" />
      <apidata name="Programs" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Programs" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.SpecialDirectories.Temp">
      <topicdata group="api" />
      <apidata name="Temp" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Temp" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.SpecialDirectories" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <topicdata group="api" />
      <apidata name="TextFieldParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor">
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="Methods.T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <topicdata name="TextFieldParser" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      <apidata name="TextFieldParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close" />
        <element api="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
          <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </containers>
    </api>
    <api id="Properties.T:Microsoft.VisualBasic.FileIO.TextFieldParser">
      <topicdata name="TextFieldParser" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      <apidata name="TextFieldParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType" />
        <element api="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
        <element api="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="defaultEncoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="defaultEncoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="detectEncoding">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="defaultEncoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="detectEncoding">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="leaveOpen">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.IO.TextReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultEncoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultEncoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="detectEncoding">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.CommentTokens">
      <topicdata group="api" />
      <apidata name="CommentTokens" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CommentTokens" />
      <setter name="set_CommentTokens" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.Delimiters">
      <topicdata group="api" />
      <apidata name="Delimiters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Delimiters" />
      <setter name="set_Delimiters" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualBasic.FileIO.TextFieldParser.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.EndOfData">
      <topicdata group="api" />
      <apidata name="EndOfData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndOfData" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine">
      <topicdata group="api" />
      <apidata name="ErrorLine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorLine" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLineNumber">
      <topicdata group="api" />
      <apidata name="ErrorLineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorLineNumber" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.FieldWidths">
      <topicdata group="api" />
      <apidata name="FieldWidths" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FieldWidths" />
      <setter name="set_FieldWidths" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.HasFieldsEnclosedInQuotes">
      <topicdata group="api" />
      <apidata name="HasFieldsEnclosedInQuotes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HasFieldsEnclosedInQuotes" />
      <setter name="set_HasFieldsEnclosedInQuotes" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.PeekChars(System.Int32)">
      <topicdata group="api" />
      <apidata name="PeekChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="numberOfChars">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadFields">
      <topicdata group="api" />
      <apidata name="ReadFields" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadLine">
      <topicdata group="api" />
      <apidata name="ReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.ReadToEnd">
      <topicdata group="api" />
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetDelimiters(System.String[])">
      <topicdata group="api" />
      <apidata name="SetDelimiters" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delimiters" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="M:Microsoft.VisualBasic.FileIO.TextFieldParser.SetFieldWidths(System.Int32[])">
      <topicdata group="api" />
      <apidata name="SetFieldWidths" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldWidths" params="true">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TextFieldType">
      <topicdata group="api" />
      <apidata name="TextFieldType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TextFieldType" />
      <setter name="set_TextFieldType" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.FieldType" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="P:Microsoft.VisualBasic.FileIO.TextFieldParser.TrimWhiteSpace">
      <topicdata group="api" />
      <apidata name="TrimWhiteSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TrimWhiteSpace" />
      <setter name="set_TrimWhiteSpace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.TextFieldParser" ref="true" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.UICancelOption">
      <topicdata group="api" />
      <apidata name="UICancelOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing" />
        <element api="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.UICancelOption.DoNothing">
      <topicdata group="api" notopic="" />
      <apidata name="DoNothing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException">
      <topicdata group="api" notopic="" />
      <apidata name="ThrowException" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.UICancelOption" ref="false" />
      </containers>
    </api>
    <api id="T:Microsoft.VisualBasic.FileIO.UIOption">
      <topicdata group="api" />
      <apidata name="UIOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs" />
        <element api="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.UIOption.AllDialogs">
      <topicdata group="api" notopic="" />
      <apidata name="AllDialogs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
      </containers>
    </api>
    <api id="F:Microsoft.VisualBasic.FileIO.UIOption.OnlyErrorDialogs">
      <topicdata group="api" notopic="" />
      <apidata name="OnlyErrorDialogs" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Microsoft.VisualBasic" module="Microsoft.VisualBasic" kind="DynamicallyLinkedLibrary">
          <assemblydata version="10.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualBasic.FileIO" />
        <type api="T:Microsoft.VisualBasic.FileIO.UIOption" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>