<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Configuration">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Configuration.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Configuration">
      <topicdata group="api" />
      <apidata name="System.Configuration" group="namespace" />
      <elements>
        <element api="T:System.Configuration.SchemeSettingElement" />
        <element api="T:System.Configuration.SchemeSettingElementCollection" />
        <element api="T:System.Configuration.UriSection" />
        <element api="T:System.Configuration.IriParsingElement" />
        <element api="T:System.Configuration.IdnElement" />
        <element api="T:System.Configuration.ApplicationSettingsBase" />
        <element api="T:System.Configuration.SettingsLoadedEventHandler" />
        <element api="T:System.Configuration.SettingsSavingEventHandler" />
        <element api="T:System.Configuration.SettingChangingEventHandler" />
        <element api="T:System.Configuration.SettingChangingEventArgs" />
        <element api="T:System.Configuration.SettingsLoadedEventArgs" />
        <element api="T:System.Configuration.ConfigurationException" />
        <element api="T:System.Configuration.ConfigurationSettings" />
        <element api="T:System.Configuration.ConfigXmlDocument" />
        <element api="T:System.Configuration.DictionarySectionHandler" />
        <element api="T:System.Configuration.IApplicationSettingsProvider" />
        <element api="T:System.Configuration.IConfigurationSectionHandler" />
        <element api="T:System.Configuration.IConfigurationSystem" />
        <element api="T:System.Configuration.IgnoreSectionHandler" />
        <element api="T:System.Configuration.IPersistComponentSettings" />
        <element api="T:System.Configuration.ISettingsProviderService" />
        <element api="T:System.Configuration.LocalFileSettingsProvider" />
        <element api="T:System.Configuration.NameValueFileSectionHandler" />
        <element api="T:System.Configuration.NameValueSectionHandler" />
        <element api="T:System.Configuration.SettingsAttributeDictionary" />
        <element api="T:System.Configuration.ApplicationScopedSettingAttribute" />
        <element api="T:System.Configuration.DefaultSettingValueAttribute" />
        <element api="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
        <element api="T:System.Configuration.SettingAttribute" />
        <element api="T:System.Configuration.SettingsDescriptionAttribute" />
        <element api="T:System.Configuration.SettingsGroupDescriptionAttribute" />
        <element api="T:System.Configuration.SettingsGroupNameAttribute" />
        <element api="T:System.Configuration.SettingsManageabilityAttribute" />
        <element api="T:System.Configuration.SettingsProviderAttribute" />
        <element api="T:System.Configuration.SettingsSerializeAsAttribute" />
        <element api="T:System.Configuration.SpecialSettingAttribute" />
        <element api="T:System.Configuration.UserScopedSettingAttribute" />
        <element api="T:System.Configuration.SettingsManageability" />
        <element api="T:System.Configuration.SpecialSetting" />
        <element api="T:System.Configuration.SettingsBase" />
        <element api="T:System.Configuration.SettingsContext" />
        <element api="T:System.Configuration.SettingsProperty" />
        <element api="T:System.Configuration.SettingsPropertyCollection" />
        <element api="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
        <element api="T:System.Configuration.SettingsPropertyNotFoundException" />
        <element api="T:System.Configuration.SettingsPropertyValue" />
        <element api="T:System.Configuration.SettingsPropertyValueCollection" />
        <element api="T:System.Configuration.SettingsPropertyWrongTypeException" />
        <element api="T:System.Configuration.SettingsProvider" />
        <element api="T:System.Configuration.SettingsProviderCollection" />
        <element api="T:System.Configuration.SettingsSerializeAs" />
        <element api="T:System.Configuration.SingleTagSectionHandler" />
        <element api="T:System.Configuration.ApplicationSettingsGroup" />
        <element api="T:System.Configuration.UserSettingsGroup" />
        <element api="T:System.Configuration.ClientSettingsSection" />
        <element api="T:System.Configuration.SettingElementCollection" />
        <element api="T:System.Configuration.SettingElement" />
        <element api="T:System.Configuration.SettingValueElement" />
        <element api="T:System.Configuration.AppSettingsReader" />
        <element api="T:System.Configuration.AppSettingsSection" />
        <element api="T:System.Configuration.CallbackValidator" />
        <element api="T:System.Configuration.CallbackValidatorAttribute" />
        <element api="T:System.Configuration.CommaDelimitedStringCollectionConverter" />
        <element api="T:System.Configuration.Configuration" />
        <element api="T:System.Configuration.ConfigurationAllowDefinition" />
        <element api="T:System.Configuration.ConfigurationAllowExeDefinition" />
        <element api="T:System.Configuration.ConfigurationBuilder" />
        <element api="T:System.Configuration.ConfigurationBuilderCollection" />
        <element api="T:System.Configuration.ConfigurationBuildersSection" />
        <element api="T:System.Configuration.ConfigurationBuilderSettings" />
        <element api="T:System.Configuration.ConfigurationCollectionAttribute" />
        <element api="T:System.Configuration.ConfigurationConverterBase" />
        <element api="T:System.Configuration.ConfigurationElement" />
        <element api="T:System.Configuration.ConfigurationElementCollection" />
        <element api="T:System.Configuration.ConfigurationElementCollectionType" />
        <element api="T:System.Configuration.ConfigurationElementProperty" />
        <element api="T:System.Configuration.ConfigurationErrorsException" />
        <element api="T:System.Configuration.ConfigurationFileMap" />
        <element api="T:System.Configuration.ConfigurationLocation" />
        <element api="T:System.Configuration.ConfigurationLocationCollection" />
        <element api="T:System.Configuration.ConfigurationLockCollection" />
        <element api="T:System.Configuration.ConfigurationManager" />
        <element api="T:System.Configuration.ConfigurationPermissionAttribute" />
        <element api="T:System.Configuration.ConfigurationPermission" />
        <element api="T:System.Configuration.ConfigurationProperty" />
        <element api="T:System.Configuration.ConfigurationPropertyAttribute" />
        <element api="T:System.Configuration.ConfigurationPropertyCollection" />
        <element api="T:System.Configuration.ConfigurationPropertyOptions" />
        <element api="T:System.Configuration.ConfigurationSaveMode" />
        <element api="T:System.Configuration.ConfigurationSection" />
        <element api="T:System.Configuration.ConfigurationSectionCollection" />
        <element api="T:System.Configuration.ConfigurationSectionGroup" />
        <element api="T:System.Configuration.ConfigurationSectionGroupCollection" />
        <element api="T:System.Configuration.ConfigurationUserLevel" />
        <element api="T:System.Configuration.ConfigurationValidatorAttribute" />
        <element api="T:System.Configuration.ConfigurationValidatorBase" />
        <element api="T:System.Configuration.ConnectionStringSettings" />
        <element api="T:System.Configuration.ConnectionStringSettingsCollection" />
        <element api="T:System.Configuration.ConnectionStringsSection" />
        <element api="T:System.Configuration.ContextInformation" />
        <element api="T:System.Configuration.DefaultSection" />
        <element api="T:System.Configuration.DefaultValidator" />
        <element api="T:System.Configuration.DpapiProtectedConfigurationProvider" />
        <element api="T:System.Configuration.ElementInformation" />
        <element api="T:System.Configuration.ExeConfigurationFileMap" />
        <element api="T:System.Configuration.ExeContext" />
        <element api="T:System.Configuration.GenericEnumConverter" />
        <element api="T:System.Configuration.IgnoreSection" />
        <element api="T:System.Configuration.InfiniteIntConverter" />
        <element api="T:System.Configuration.InfiniteTimeSpanConverter" />
        <element api="T:System.Configuration.IntegerValidator" />
        <element api="T:System.Configuration.IntegerValidatorAttribute" />
        <element api="T:System.Configuration.KeyValueConfigurationCollection" />
        <element api="T:System.Configuration.KeyValueConfigurationElement" />
        <element api="T:System.Configuration.LongValidator" />
        <element api="T:System.Configuration.LongValidatorAttribute" />
        <element api="T:System.Configuration.NameValueConfigurationCollection" />
        <element api="T:System.Configuration.NameValueConfigurationElement" />
        <element api="T:System.Configuration.OverrideMode" />
        <element api="T:System.Configuration.PositiveTimeSpanValidator" />
        <element api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />
        <element api="T:System.Configuration.PropertyInformation" />
        <element api="T:System.Configuration.PropertyInformationCollection" />
        <element api="T:System.Configuration.PropertyValueOrigin" />
        <element api="T:System.Configuration.ProtectedConfiguration" />
        <element api="T:System.Configuration.ProtectedConfigurationProvider" />
        <element api="T:System.Configuration.ProtectedConfigurationProviderCollection" />
        <element api="T:System.Configuration.ProtectedConfigurationSection" />
        <element api="T:System.Configuration.ProtectedProviderSettings" />
        <element api="T:System.Configuration.ProviderSettings" />
        <element api="T:System.Configuration.ProviderSettingsCollection" />
        <element api="T:System.Configuration.RegexStringValidator" />
        <element api="T:System.Configuration.RegexStringValidatorAttribute" />
        <element api="T:System.Configuration.RsaProtectedConfigurationProvider" />
        <element api="T:System.Configuration.SectionInformation" />
        <element api="T:System.Configuration.CommaDelimitedStringCollection" />
        <element api="T:System.Configuration.StringValidator" />
        <element api="T:System.Configuration.StringValidatorAttribute" />
        <element api="T:System.Configuration.SubclassTypeValidator" />
        <element api="T:System.Configuration.SubclassTypeValidatorAttribute" />
        <element api="T:System.Configuration.TimeSpanMinutesConverter" />
        <element api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
        <element api="T:System.Configuration.TimeSpanSecondsConverter" />
        <element api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
        <element api="T:System.Configuration.TimeSpanValidator" />
        <element api="T:System.Configuration.TimeSpanValidatorAttribute" />
        <element api="T:System.Configuration.TypeNameConverter" />
        <element api="T:System.Configuration.ValidatorCallback" />
        <element api="T:System.Configuration.WhiteSpaceTrimStringConverter" />
      </elements>
    </api>
    <api id="T:System.Configuration.ApplicationScopedSettingAttribute">
      <topicdata group="api" />
      <apidata name="ApplicationScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.SettingAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ApplicationScopedSettingAttribute">
      <topicdata name="ApplicationScopedSettingAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ApplicationScopedSettingAttribute" />
      <apidata name="ApplicationScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationScopedSettingAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ApplicationScopedSettingAttribute">
      <topicdata name="ApplicationScopedSettingAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ApplicationScopedSettingAttribute" />
      <apidata name="ApplicationScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationScopedSettingAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationScopedSettingAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationScopedSettingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ApplicationSettingsBase">
      <topicdata group="api" />
      <apidata name="ApplicationSettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.SettingsBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
        <element api="Overload:System.Configuration.ApplicationSettingsBase.#ctor">
          <element api="M:System.Configuration.ApplicationSettingsBase.#ctor" />
          <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
          <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
          <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
        </element>
        <element api="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Save" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <element api="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Context" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <element api="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <element api="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <element api="P:System.Configuration.SettingsBase.IsSynchronized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ApplicationSettingsBase">
      <topicdata name="ApplicationSettingsBase" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ApplicationSettingsBase" />
      <apidata name="ApplicationSettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Reload" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Reset" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Save" />
        <element api="M:System.Configuration.ApplicationSettingsBase.Upgrade" />
        <element api="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ApplicationSettingsBase">
      <topicdata name="ApplicationSettingsBase" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ApplicationSettingsBase" />
      <apidata name="ApplicationSettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ApplicationSettingsBase.Context" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Item(System.String)" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Properties" />
        <element api="P:System.Configuration.ApplicationSettingsBase.PropertyValues" />
        <element api="P:System.Configuration.ApplicationSettingsBase.Providers" />
        <element api="P:System.Configuration.ApplicationSettingsBase.SettingsKey" />
        <element api="P:System.Configuration.SettingsBase.IsSynchronized" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.ApplicationSettingsBase">
      <topicdata name="ApplicationSettingsBase" group="list" subgroup="Events" typeTopicId="T:System.Configuration.ApplicationSettingsBase" />
      <apidata name="ApplicationSettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Configuration.ApplicationSettingsBase.PropertyChanged" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingChanging" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded" />
        <element api="E:System.Configuration.ApplicationSettingsBase.SettingsSaving" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ApplicationSettingsBase.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ApplicationSettingsBase.#ctor" />
        <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)" />
        <element api="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ApplicationSettingsBase.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ApplicationSettingsBase.#ctor" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ApplicationSettingsBase.#ctor" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </parameter>
        <parameter name="settingsKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ApplicationSettingsBase.#ctor" />
      <parameters>
        <parameter name="settingsKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsBase.Context">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.Configuration.SettingsContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)">
      <topicdata group="api" />
      <apidata name="GetPreviousVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsBase.Item(System.String)">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSettingChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSettingsLoaded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Configuration.SettingsLoadedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)">
      <topicdata group="api" />
      <apidata name="OnSettingsSaving" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsBase.Properties">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Configuration.ApplicationSettingsBase.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.PropertyValues">
      <topicdata group="api" />
      <apidata name="PropertyValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsBase.PropertyValues">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_PropertyValues" />
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsBase.Providers">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.Reload">
      <topicdata group="api" />
      <apidata name="Reload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.SettingsBase.Save">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="E:System.Configuration.ApplicationSettingsBase.SettingChanging">
      <topicdata group="api" />
      <apidata name="SettingChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SettingChanging" />
      <remover name="remove_SettingChanging" />
      <eventhandler>
        <type api="T:System.Configuration.SettingChangingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ApplicationSettingsBase.SettingsKey">
      <topicdata group="api" />
      <apidata name="SettingsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SettingsKey" />
      <setter name="set_SettingsKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Configuration.ApplicationSettingsBase.SettingsLoaded">
      <topicdata group="api" />
      <apidata name="SettingsLoaded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SettingsLoaded" />
      <remover name="remove_SettingsLoaded" />
      <eventhandler>
        <type api="T:System.Configuration.SettingsLoadedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Configuration.SettingsLoadedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="E:System.Configuration.ApplicationSettingsBase.SettingsSaving">
      <topicdata group="api" />
      <apidata name="SettingsSaving" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SettingsSaving" />
      <remover name="remove_SettingsSaving" />
      <eventhandler>
        <type api="T:System.Configuration.SettingsSavingEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsBase.Upgrade">
      <topicdata group="api" />
      <apidata name="Upgrade" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ApplicationSettingsGroup">
      <topicdata group="api" />
      <apidata name="ApplicationSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationSettingsGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ApplicationSettingsGroup.#ctor" />
        <element api="Overload:System.Configuration.ApplicationSettingsGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ApplicationSettingsGroup">
      <topicdata name="ApplicationSettingsGroup" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ApplicationSettingsGroup" />
      <apidata name="ApplicationSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationSettingsGroup.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.ApplicationSettingsGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ApplicationSettingsGroup">
      <topicdata name="ApplicationSettingsGroup" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ApplicationSettingsGroup" />
      <apidata name="ApplicationSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ApplicationSettingsGroup.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsGroup" />
      </containers>
    </api>
    <api id="M:System.Configuration.ApplicationSettingsGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ApplicationSettingsGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.AppSettingsReader">
      <topicdata group="api" />
      <apidata name="AppSettingsReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.AppSettingsReader.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.AppSettingsReader.#ctor" />
        <element api="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.AppSettingsReader">
      <topicdata name="AppSettingsReader" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.AppSettingsReader" />
      <apidata name="AppSettingsReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.AppSettingsReader.#ctor" />
      <elements>
        <element api="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsReader" />
      </containers>
    </api>
    <api id="M:System.Configuration.AppSettingsReader.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsReader" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.AppSettingsReader.GetValue(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsReader" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.AppSettingsSection">
      <topicdata group="api" />
      <apidata name="AppSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.AppSettingsSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.AppSettingsSection.#ctor" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.AppSettingsSection.File" />
        <element api="P:System.Configuration.AppSettingsSection.Settings" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.AppSettingsSection">
      <topicdata name="AppSettingsSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.AppSettingsSection" />
      <apidata name="AppSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.AppSettingsSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.AppSettingsSection">
      <topicdata name="AppSettingsSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.AppSettingsSection" />
      <apidata name="AppSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.AppSettingsSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.AppSettingsSection.File" />
        <element api="P:System.Configuration.AppSettingsSection.Settings" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.AppSettingsSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.AppSettingsSection.File">
      <topicdata group="api" />
      <apidata name="File" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_File" />
      <setter name="set_File" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>file</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.AppSettingsSection.Settings">
      <topicdata group="api" />
      <apidata name="Settings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Settings" />
      <returns>
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.AppSettingsSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <assignment name="IsDefaultCollection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.CallbackValidator">
      <topicdata group="api" />
      <apidata name="CallbackValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)" />
        <element api="M:System.Configuration.CallbackValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.CallbackValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.CallbackValidator">
      <topicdata name="CallbackValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.CallbackValidator" />
      <apidata name="CallbackValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.CallbackValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.CallbackValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidator" />
      </containers>
    </api>
    <api id="M:System.Configuration.CallbackValidator.#ctor(System.Type,System.Configuration.ValidatorCallback)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Configuration.ValidatorCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CallbackValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CallbackValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.CallbackValidatorAttribute">
      <topicdata group="api" />
      <apidata name="CallbackValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CallbackValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.CallbackValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.Type" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.CallbackValidatorAttribute">
      <topicdata name="CallbackValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.CallbackValidatorAttribute" />
      <apidata name="CallbackValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CallbackValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.CallbackValidatorAttribute">
      <topicdata name="CallbackValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.CallbackValidatorAttribute" />
      <apidata name="CallbackValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CallbackValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.Type" />
        <element api="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.CallbackValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CallbackValidatorAttribute.CallbackMethodName">
      <topicdata group="api" />
      <apidata name="CallbackMethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CallbackMethodName" />
      <setter name="set_CallbackMethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CallbackValidatorAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CallbackValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ClientSettingsSection">
      <topicdata group="api" />
      <apidata name="ClientSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ClientSettingsSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ClientSettingsSection.#ctor" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ClientSettingsSection.Settings" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ClientSettingsSection">
      <topicdata name="ClientSettingsSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ClientSettingsSection" />
      <apidata name="ClientSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ClientSettingsSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ClientSettingsSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ClientSettingsSection">
      <topicdata name="ClientSettingsSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ClientSettingsSection" />
      <apidata name="ClientSettingsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ClientSettingsSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ClientSettingsSection.Settings" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ClientSettingsSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ClientSettingsSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ClientSettingsSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ClientSettingsSection.Settings">
      <topicdata group="api" />
      <apidata name="Settings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Settings" />
      <returns>
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ClientSettingsSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <assignment name="IsDefaultCollection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.CommaDelimitedStringCollection">
      <topicdata group="api" />
      <apidata name="CommaDelimitedStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CommaDelimitedStringCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.StringCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.#ctor" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Clear" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Clone" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Collections.Specialized.StringCollection.Count" />
        <element api="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringCollection.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.IsModified" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.CommaDelimitedStringCollection">
      <topicdata name="CommaDelimitedStringCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.CommaDelimitedStringCollection" />
      <apidata name="CommaDelimitedStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CommaDelimitedStringCollection.#ctor" />
      <elements>
        <element api="M:System.Collections.Specialized.StringCollection.Contains(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.IndexOf(System.String)" />
        <element api="M:System.Collections.Specialized.StringCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Specialized.StringCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Clear" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Clone" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly" />
        <element api="M:System.Configuration.CommaDelimitedStringCollection.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.CommaDelimitedStringCollection">
      <topicdata name="CommaDelimitedStringCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.CommaDelimitedStringCollection" />
      <apidata name="CommaDelimitedStringCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CommaDelimitedStringCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.Specialized.StringCollection.Count" />
        <element api="P:System.Collections.Specialized.StringCollection.IsSynchronized" />
        <element api="P:System.Collections.Specialized.StringCollection.SyncRoot" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Specialized.StringCollection.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.IsModified" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly" />
        <element api="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.AddRange(System.String[])">
      <topicdata group="api" />
      <apidata name="AddRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="range">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.Insert(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CommaDelimitedStringCollection.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsModified" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CommaDelimitedStringCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.CommaDelimitedStringCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.SetReadOnly">
      <topicdata group="api" />
      <apidata name="SetReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollection.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <topicdata group="api" />
      <apidata name="CommaDelimitedStringCollectionConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor" />
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.CommaDelimitedStringCollectionConverter">
      <topicdata name="CommaDelimitedStringCollectionConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.CommaDelimitedStringCollectionConverter" />
      <apidata name="CommaDelimitedStringCollectionConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollectionConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.CommaDelimitedStringCollectionConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.Configuration">
      <topicdata group="api" />
      <apidata name="Configuration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.Configuration.GetSection(System.String)" />
        <element api="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />
        <element api="Overload:System.Configuration.Configuration.Save">
          <element api="M:System.Configuration.Configuration.Save" />
          <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)" />
          <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Configuration.Configuration.SaveAs">
          <element api="M:System.Configuration.Configuration.SaveAs(System.String)" />
          <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)" />
          <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Configuration.AppSettings" />
        <element api="P:System.Configuration.Configuration.AssemblyStringTransformer" />
        <element api="P:System.Configuration.Configuration.ConnectionStrings" />
        <element api="P:System.Configuration.Configuration.EvaluationContext" />
        <element api="P:System.Configuration.Configuration.FilePath" />
        <element api="P:System.Configuration.Configuration.HasFile" />
        <element api="P:System.Configuration.Configuration.Locations" />
        <element api="P:System.Configuration.Configuration.NamespaceDeclared" />
        <element api="P:System.Configuration.Configuration.RootSectionGroup" />
        <element api="P:System.Configuration.Configuration.SectionGroups" />
        <element api="P:System.Configuration.Configuration.Sections" />
        <element api="P:System.Configuration.Configuration.TargetFramework" />
        <element api="P:System.Configuration.Configuration.TypeStringTransformer" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.Configuration">
      <topicdata name="Configuration" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.Configuration" />
      <apidata name="Configuration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.Configuration.GetSection(System.String)" />
        <element api="M:System.Configuration.Configuration.GetSectionGroup(System.String)" />
        <element api="Overload:System.Configuration.Configuration.Save">
          <element api="M:System.Configuration.Configuration.Save" />
          <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)" />
          <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)" />
        </element>
        <element api="Overload:System.Configuration.Configuration.SaveAs">
          <element api="M:System.Configuration.Configuration.SaveAs(System.String)" />
          <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)" />
          <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.Configuration">
      <topicdata name="Configuration" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.Configuration" />
      <apidata name="Configuration" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.Configuration.AppSettings" />
        <element api="P:System.Configuration.Configuration.AssemblyStringTransformer" />
        <element api="P:System.Configuration.Configuration.ConnectionStrings" />
        <element api="P:System.Configuration.Configuration.EvaluationContext" />
        <element api="P:System.Configuration.Configuration.FilePath" />
        <element api="P:System.Configuration.Configuration.HasFile" />
        <element api="P:System.Configuration.Configuration.Locations" />
        <element api="P:System.Configuration.Configuration.NamespaceDeclared" />
        <element api="P:System.Configuration.Configuration.RootSectionGroup" />
        <element api="P:System.Configuration.Configuration.SectionGroups" />
        <element api="P:System.Configuration.Configuration.Sections" />
        <element api="P:System.Configuration.Configuration.TargetFramework" />
        <element api="P:System.Configuration.Configuration.TypeStringTransformer" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.Configuration.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.Configuration.Save" />
        <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.Configuration.SaveAs">
      <topicdata name="SaveAs" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SaveAs" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.Configuration.SaveAs(System.String)" />
        <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.AppSettings">
      <topicdata group="api" />
      <apidata name="AppSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppSettings" />
      <returns>
        <type api="T:System.Configuration.AppSettingsSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.AssemblyStringTransformer">
      <topicdata group="api" />
      <apidata name="AssemblyStringTransformer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyStringTransformer" />
      <setter name="set_AssemblyStringTransformer">
        <attributes>
          <attribute>
            <type api="T:System.Configuration.ConfigurationPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="Demand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.ConnectionStrings">
      <topicdata group="api" />
      <apidata name="ConnectionStrings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectionStrings" />
      <returns>
        <type api="T:System.Configuration.ConnectionStringsSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.EvaluationContext">
      <topicdata group="api" />
      <apidata name="EvaluationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluationContext" />
      <returns>
        <type api="T:System.Configuration.ContextInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.FilePath">
      <topicdata group="api" />
      <apidata name="FilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.GetSection(System.String)">
      <topicdata group="api" />
      <apidata name="GetSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.GetSectionGroup(System.String)">
      <topicdata group="api" />
      <apidata name="GetSectionGroup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionGroupName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.HasFile">
      <topicdata group="api" />
      <apidata name="HasFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasFile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.Locations">
      <topicdata group="api" />
      <apidata name="Locations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Locations" />
      <returns>
        <type api="T:System.Configuration.ConfigurationLocationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.NamespaceDeclared">
      <topicdata group="api" />
      <apidata name="NamespaceDeclared" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NamespaceDeclared" />
      <setter name="set_NamespaceDeclared" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.RootSectionGroup">
      <topicdata group="api" />
      <apidata name="RootSectionGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RootSectionGroup" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.Save" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.Save(System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
        <parameter name="forceSaveAll">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.SaveAs(System.String)">
      <topicdata group="api" />
      <apidata name="SaveAs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.SaveAs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode)">
      <topicdata group="api" />
      <apidata name="SaveAs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.SaveAs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.Configuration.SaveAs(System.String,System.Configuration.ConfigurationSaveMode,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SaveAs" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.Configuration.SaveAs" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
        <parameter name="forceSaveAll">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.SectionGroups">
      <topicdata group="api" />
      <apidata name="SectionGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionGroups" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.Sections">
      <topicdata group="api" />
      <apidata name="Sections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sections" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.TargetFramework">
      <topicdata group="api" />
      <apidata name="TargetFramework" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetFramework" />
      <setter name="set_TargetFramework">
        <attributes>
          <attribute>
            <type api="T:System.Configuration.ConfigurationPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="Demand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.Configuration.TypeStringTransformer">
      <topicdata group="api" />
      <apidata name="TypeStringTransformer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeStringTransformer" />
      <setter name="set_TypeStringTransformer">
        <attributes>
          <attribute>
            <type api="T:System.Configuration.ConfigurationPermissionAttribute" ref="true" />
            <argument>
              <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
              <enumValue>
                <field name="Demand" />
              </enumValue>
            </argument>
            <assignment name="Unrestricted">
              <type api="T:System.Boolean" ref="false" />
              <value>True</value>
            </assignment>
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.Configuration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationAllowDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationAllowDefinition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly" />
        <element api="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot" />
        <element api="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication" />
        <element api="F:System.Configuration.ConfigurationAllowDefinition.Everywhere" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowDefinition.Everywhere">
      <topicdata group="api" notopic="" />
      <apidata name="Everywhere" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </returns>
      <value>300</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowDefinition.MachineOnly">
      <topicdata group="api" notopic="" />
      <apidata name="MachineOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowDefinition.MachineToApplication">
      <topicdata group="api" notopic="" />
      <apidata name="MachineToApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowDefinition.MachineToWebRoot">
      <topicdata group="api" notopic="" />
      <apidata name="MachineToWebRoot" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </returns>
      <value>100</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationAllowExeDefinition">
      <topicdata group="api" />
      <apidata name="ConfigurationAllowExeDefinition" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly" />
        <element api="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication" />
        <element api="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser" />
        <element api="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowExeDefinition.MachineOnly">
      <topicdata group="api" notopic="" />
      <apidata name="MachineOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToApplication">
      <topicdata group="api" notopic="" />
      <apidata name="MachineToApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </returns>
      <value>100</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToLocalUser">
      <topicdata group="api" notopic="" />
      <apidata name="MachineToLocalUser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </returns>
      <value>300</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationAllowExeDefinition.MachineToRoamingUser">
      <topicdata group="api" notopic="" />
      <apidata name="MachineToRoamingUser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </returns>
      <value>200</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationBuilder">
      <topicdata group="api" />
      <apidata name="ConfigurationBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationBuilder.#ctor" />
        <element api="M:System.Configuration.ConfigurationBuilder.ProcessConfigurationSection(System.Configuration.ConfigurationSection)" />
        <element api="M:System.Configuration.ConfigurationBuilder.ProcessRawXml(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationBuilder">
      <topicdata name="ConfigurationBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationBuilder" />
      <apidata name="ConfigurationBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationBuilder.ProcessConfigurationSection(System.Configuration.ConfigurationSection)" />
        <element api="M:System.Configuration.ConfigurationBuilder.ProcessRawXml(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilder" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationBuilder">
      <topicdata name="ConfigurationBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationBuilder" />
      <apidata name="ConfigurationBuilder" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilder" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilder.ProcessConfigurationSection(System.Configuration.ConfigurationSection)">
      <topicdata group="api" />
      <apidata name="ProcessConfigurationSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="configSection">
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilder.ProcessRawXml(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="ProcessRawXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rawXml">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationBuilderCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationBuilderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationBuilderCollection.#ctor" />
        <element api="M:System.Configuration.ConfigurationBuilderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationBuilderCollection.Item(System.String)" />
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationBuilderCollection">
      <topicdata name="ConfigurationBuilderCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationBuilderCollection" />
      <apidata name="ConfigurationBuilderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationBuilderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationBuilderCollection">
      <topicdata name="ConfigurationBuilderCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationBuilderCollection" />
      <apidata name="ConfigurationBuilderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationBuilderCollection.Item(System.String)" />
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilderCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="builder">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationBuilderCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationBuilderSettings">
      <topicdata group="api" />
      <apidata name="ConfigurationBuilderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationBuilderSettings.#ctor" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationBuilderSettings.Builders" />
        <element api="P:System.Configuration.ConfigurationBuilderSettings.Properties" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationBuilderSettings.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationBuilderSettings">
      <topicdata name="ConfigurationBuilderSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationBuilderSettings" />
      <apidata name="ConfigurationBuilderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderSettings.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationBuilderSettings">
      <topicdata name="ConfigurationBuilderSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationBuilderSettings" />
      <apidata name="ConfigurationBuilderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuilderSettings.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationBuilderSettings.Builders" />
        <element api="P:System.Configuration.ConfigurationBuilderSettings.Properties" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationBuilderSettings.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderSettings" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuilderSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationBuilderSettings.Builders">
      <topicdata group="api" />
      <apidata name="Builders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Builders" />
      <returns>
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <assignment name="IsDefaultCollection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsDefaultCollection" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ConfigurationBuilderSettings.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElement.Properties">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuilderSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationBuildersSection">
      <topicdata group="api" />
      <apidata name="ConfigurationBuildersSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuildersSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationBuildersSection.#ctor" />
        <element api="M:System.Configuration.ConfigurationBuildersSection.GetBuilderFromName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationBuildersSection.Builders" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationBuildersSection">
      <topicdata name="ConfigurationBuildersSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationBuildersSection" />
      <apidata name="ConfigurationBuildersSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuildersSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationBuildersSection.GetBuilderFromName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuildersSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationBuildersSection">
      <topicdata name="ConfigurationBuildersSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationBuildersSection" />
      <apidata name="ConfigurationBuildersSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationBuildersSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationBuildersSection.Builders" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuildersSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationBuildersSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuildersSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationBuildersSection.Builders">
      <topicdata group="api" />
      <apidata name="Builders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Builders" />
      <returns>
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuildersSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>builders</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationBuildersSection.GetBuilderFromName(System.String)">
      <topicdata group="api" />
      <apidata name="GetBuilderFromName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builderName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationBuildersSection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationCollectionAttribute">
      <topicdata group="api" />
      <apidata name="ConfigurationCollectionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.ItemType" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationCollectionAttribute">
      <topicdata name="ConfigurationCollectionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationCollectionAttribute" />
      <apidata name="ConfigurationCollectionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationCollectionAttribute">
      <topicdata name="ConfigurationCollectionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationCollectionAttribute" />
      <apidata name="ConfigurationCollectionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.ItemType" />
        <element api="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationCollectionAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="itemType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationCollectionAttribute.AddItemName">
      <topicdata group="api" />
      <apidata name="AddItemName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddItemName" />
      <setter name="set_AddItemName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationCollectionAttribute.ClearItemsName">
      <topicdata group="api" />
      <apidata name="ClearItemsName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClearItemsName" />
      <setter name="set_ClearItemsName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationCollectionAttribute.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CollectionType" />
      <setter name="set_CollectionType" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationCollectionAttribute.ItemType">
      <topicdata group="api" />
      <apidata name="ItemType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ItemType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationCollectionAttribute.RemoveItemName">
      <topicdata group="api" />
      <apidata name="RemoveItemName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveItemName" />
      <setter name="set_RemoveItemName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationConverterBase">
      <topicdata group="api" />
      <apidata name="ConfigurationConverterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.CommaDelimitedStringCollectionConverter" ref="true" />
          <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
          <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
          <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
          <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
          <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
          <type api="T:System.Configuration.TypeNameConverter" ref="true" />
          <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
          <type api="T:System.Web.Configuration.MachineKeyValidationConverter" ref="true" />
          <type api="T:System.Web.UI.MobileControls.MobileTypeNameConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Configuration.ConfigurationConverterBase.#ctor" />
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationConverterBase">
      <topicdata name="ConfigurationConverterBase" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationConverterBase" />
      <apidata name="ConfigurationConverterBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationConverterBase.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationConverterBase.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationConverterBase.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationConverterBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationConverterBase.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationConverterBase.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationElement">
      <topicdata group="api" />
      <apidata name="ConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
          <type api="T:System.Configuration.IriParsingElement" ref="true" />
          <type api="T:System.Configuration.IdnElement" ref="true" />
          <type api="T:System.Configuration.SettingElement" ref="true" />
          <type api="T:System.Configuration.SettingValueElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationBuilderSettings" ref="true" />
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
          <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
          <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ProtectedProviderSettings" ref="true" />
          <type api="T:System.Configuration.ProviderSettings" ref="true" />
          <type api="T:System.Net.Configuration.AuthenticationModuleElement" ref="true" />
          <type api="T:System.Net.Configuration.BypassElement" ref="true" />
          <type api="T:System.Net.Configuration.ConnectionManagementElement" ref="true" />
          <type api="T:System.Net.Configuration.HttpWebRequestElement" ref="true" />
          <type api="T:System.Net.Configuration.HttpListenerElement" ref="true" />
          <type api="T:System.Net.Configuration.HttpListenerTimeoutsElement" ref="true" />
          <type api="T:System.Net.Configuration.HttpCachePolicyElement" ref="true" />
          <type api="T:System.Net.Configuration.FtpCachePolicyElement" ref="true" />
          <type api="T:System.Net.Configuration.Ipv6Element" ref="true" />
          <type api="T:System.Net.Configuration.ModuleElement" ref="true" />
          <type api="T:System.Net.Configuration.PerformanceCountersElement" ref="true" />
          <type api="T:System.Net.Configuration.ProxyElement" ref="true" />
          <type api="T:System.Net.Configuration.ServicePointManagerElement" ref="true" />
          <type api="T:System.Net.Configuration.SmtpNetworkElement" ref="true" />
          <type api="T:System.Net.Configuration.SmtpSpecifiedPickupDirectoryElement" ref="true" />
          <type api="T:System.Net.Configuration.SocketElement" ref="true" />
          <type api="T:System.Net.Configuration.WebProxyScriptElement" ref="true" />
          <type api="T:System.Net.Configuration.WebRequestModuleElement" ref="true" />
          <type api="T:System.Net.Configuration.WebUtilityElement" ref="true" />
          <type api="T:System.Net.Configuration.WindowsAuthenticationElement" ref="true" />
          <type api="T:System.Security.Authentication.ExtendedProtection.Configuration.ExtendedProtectionPolicyElement" ref="true" />
          <type api="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElement" ref="true" />
          <type api="T:System.Data.Services.Configuration.DataServicesReplaceFunctionFeature" ref="true" />
          <type api="T:System.IdentityModel.Configuration.AudienceUriElement" ref="true" />
          <type api="T:System.IdentityModel.Configuration.ConfigurationElementInterceptor" ref="true" />
          <type api="T:System.IdentityModel.Configuration.IdentityConfigurationElement" ref="true" />
          <type api="T:System.IdentityModel.Configuration.IdentityModelCachesElement" ref="true" />
          <type api="T:System.IdentityModel.Configuration.X509CertificateValidationElement" ref="true" />
          <type api="T:System.IdentityModel.Configuration.SecurityTokenHandlerConfigurationElement" ref="true" />
          <type api="T:System.IdentityModel.Configuration.TokenReplayDetectionElement" ref="true" />
          <type api="T:System.IdentityModel.Services.ChunkedCookieHandlerElement" ref="true" />
          <type api="T:System.IdentityModel.Services.CookieHandlerElement" ref="true" />
          <type api="T:System.IdentityModel.Services.ServiceCertificateElement" ref="true" />
          <type api="T:System.IdentityModel.Services.Configuration.FederationConfigurationElement" ref="true" />
          <type api="T:System.IdentityModel.Services.Configuration.WSFederationElement" ref="true" />
          <type api="T:System.Runtime.Caching.Configuration.MemoryCacheElement" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.DeclaredTypeElement" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.ParameterElement" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.TypeElement" ref="true" />
          <type api="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.AllowedAudienceUriElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.AuthorizationPolicyTypeElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.BaseAddressElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.BaseAddressPrefixFilterElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.BindingCollectionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.CertificateElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.CertificateReferenceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ClaimTypeElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.DefaultPortElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.DelegatingHandlerElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.DnsElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.EndToEndTracingElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.HostElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.HostTimeoutsElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.HttpDigestClientElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.HttpMessageHandlerFactoryElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.IdentityElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.IssuedTokenClientElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.IssuedTokenServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.IssuedTokenClientBehaviorsElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.MetadataElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.MessageLoggingElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.PeerCredentialElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.PolicyImporterElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.RsaElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.SecureConversationServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceActivationElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ProtocolMappingElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServicePrincipalNameElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.TransportConfigurationTypeElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.UserPrincipalNameElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.UserNameServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.WindowsClientElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.WindowsServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.WsdlImporterElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.XmlElementElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.XPathMessageFilterElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509CertificateTrustedIssuerElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509ClientCertificateAuthenticationElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509ClientCertificateCredentialsElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509DefaultServiceCertificateElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509InitiatorCertificateClientElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509RecipientCertificateClientElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509InitiatorCertificateServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509RecipientCertificateServiceElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509ScopedServiceCertificateElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509ServiceCertificateAuthenticationElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ComContractElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ComMethodElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ComPersistableTypeElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ComUdtElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509PeerCertificateElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.X509PeerCertificateAuthenticationElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionCollectionElement`1" ref="true" />
          <type api="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationElement" ref="true" />
          <type api="T:System.ServiceModel.Activities.Configuration.FactorySettingsElement" ref="true" />
          <type api="T:System.ServiceModel.Activities.Configuration.ChannelSettingsElement" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
          <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
          <type api="T:System.Web.Configuration.AssemblyInfo" ref="true" />
          <type api="T:System.Web.Configuration.AuthorizationRule" ref="true" />
          <type api="T:System.Web.Configuration.BufferModeSettings" ref="true" />
          <type api="T:System.Web.Configuration.BuildProvider" ref="true" />
          <type api="T:System.Web.Configuration.ClientTarget" ref="true" />
          <type api="T:System.Web.Configuration.CodeSubDirectory" ref="true" />
          <type api="T:System.Web.Configuration.Compiler" ref="true" />
          <type api="T:System.Web.Configuration.CustomError" ref="true" />
          <type api="T:System.Web.Configuration.EventMappingSettings" ref="true" />
          <type api="T:System.Web.Configuration.ExpressionBuilder" ref="true" />
          <type api="T:System.Web.Configuration.FolderLevelBuildProvider" ref="true" />
          <type api="T:System.Web.Configuration.FormsAuthenticationConfiguration" ref="true" />
          <type api="T:System.Web.Configuration.FormsAuthenticationCredentials" ref="true" />
          <type api="T:System.Web.Configuration.FormsAuthenticationUser" ref="true" />
          <type api="T:System.Web.Configuration.FullTrustAssembly" ref="true" />
          <type api="T:System.Web.Configuration.HttpHandlerAction" ref="true" />
          <type api="T:System.Web.Configuration.HttpModuleAction" ref="true" />
          <type api="T:System.Web.Configuration.IgnoreDeviceFilterElement" ref="true" />
          <type api="T:System.Web.Configuration.NamespaceInfo" ref="true" />
          <type api="T:System.Web.Configuration.OutputCacheProfile" ref="true" />
          <type api="T:System.Web.Configuration.PartialTrustVisibleAssembly" ref="true" />
          <type api="T:System.Web.Configuration.PassportAuthentication" ref="true" />
          <type api="T:System.Web.Configuration.ProfileGroupSettings" ref="true" />
          <type api="T:System.Web.Configuration.ProfilePropertySettings" ref="true" />
          <type api="T:System.Web.Configuration.ProfileSettings" ref="true" />
          <type api="T:System.Web.Configuration.ProtocolElement" ref="true" />
          <type api="T:System.Web.Configuration.RuleSettings" ref="true" />
          <type api="T:System.Web.Configuration.SqlCacheDependencyDatabase" ref="true" />
          <type api="T:System.Web.Configuration.TagMapInfo" ref="true" />
          <type api="T:System.Web.Configuration.TagPrefixInfo" ref="true" />
          <type api="T:System.Web.Configuration.TransformerInfo" ref="true" />
          <type api="T:System.Web.Configuration.TrustLevel" ref="true" />
          <type api="T:System.Web.Configuration.UrlMapping" ref="true" />
          <type api="T:System.Web.Configuration.WebPartsPersonalization" ref="true" />
          <type api="T:System.Web.Configuration.WebPartsPersonalizationAuthorization" ref="true" />
          <type api="T:System.Web.Configuration.Converter" ref="true" />
          <type api="T:System.Web.UI.MobileControls.DeviceElement" ref="true" />
          <type api="T:System.Web.UI.MobileControls.ControlElement" ref="true" />
          <type api="T:System.Web.Mobile.DeviceFilterElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.DiagnosticsElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.SoapExtensionTypeElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.TypeElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.WsdlHelpGeneratorElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.ProtocolElement" ref="true" />
          <type api="T:System.Web.Services.Configuration.WsiProfilesElement" ref="true" />
          <type api="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElement" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.#ctor" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationElement">
      <topicdata name="ConfigurationElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationElement" />
      <apidata name="ConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationElement">
      <topicdata name="ConfigurationElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationElement" />
      <apidata name="ConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationElement.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
      <topicdata group="api" />
      <apidata name="CurrentConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentConfiguration" />
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
      <topicdata group="api" />
      <apidata name="DeserializeElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="serializeCollectionKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.ElementInformation">
      <topicdata group="api" />
      <apidata name="ElementInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ElementInformation" />
      <returns>
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.ElementProperty">
      <topicdata group="api" />
      <apidata name="ElementProperty" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ElementProperty" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="compareTo">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.EvaluationContext">
      <topicdata group="api" />
      <apidata name="EvaluationContext" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EvaluationContext" />
      <returns>
        <type api="T:System.Configuration.ContextInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
      <topicdata group="api" />
      <apidata name="GetTransformedAssemblyString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="assemblyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
      <topicdata group="api" />
      <apidata name="GetTransformedTypeString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="typeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.HasContext">
      <topicdata group="api" />
      <apidata name="HasContext" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasContext" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.InitializeDefault">
      <topicdata group="api" />
      <apidata name="InitializeDefault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElement.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElement.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name="ListErrors" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="errorList">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
      <topicdata group="api" />
      <apidata name="LockAllAttributesExcept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LockAllAttributesExcept" />
      <returns>
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
      <topicdata group="api" />
      <apidata name="LockAllElementsExcept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LockAllElementsExcept" />
      <returns>
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.LockAttributes">
      <topicdata group="api" />
      <apidata name="LockAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LockAttributes" />
      <returns>
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.LockElements">
      <topicdata group="api" />
      <apidata name="LockElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LockElements" />
      <returns>
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.LockItem">
      <topicdata group="api" />
      <apidata name="LockItem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LockItem" />
      <setter name="set_LockItem" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="OnDeserializeUnrecognizedAttribute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="OnDeserializeUnrecognizedElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
      <topicdata group="api" />
      <apidata name="OnRequiredPropertyNotFound" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.PostDeserialize">
      <topicdata group="api" />
      <apidata name="PostDeserialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="PreSerialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.ResetModified">
      <topicdata group="api" />
      <apidata name="ResetModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SerializeElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="serializeCollectionKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
      <topicdata group="api" />
      <apidata name="SerializeToXmlElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SetPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prop">
          <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="ignoreLocks">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.SetReadOnly">
      <topicdata group="api" />
      <apidata name="SetReadOnly" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <topicdata group="api" />
      <apidata name="Unmerge" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sourceElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="parentElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationElementCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
          <type api="T:System.Configuration.SettingElementCollection" ref="true" />
          <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
          <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
          <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
          <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
          <type api="T:System.Net.Configuration.AuthenticationModuleElementCollection" ref="true" />
          <type api="T:System.Net.Configuration.BypassElementCollection" ref="true" />
          <type api="T:System.Net.Configuration.ConnectionManagementElementCollection" ref="true" />
          <type api="T:System.Net.Configuration.WebRequestModuleElementCollection" ref="true" />
          <type api="T:System.Security.Authentication.ExtendedProtection.Configuration.ServiceNameElementCollection" ref="true" />
          <type api="T:System.IdentityModel.Configuration.AudienceUriElementCollection" ref="true" />
          <type api="T:System.IdentityModel.Configuration.IdentityConfigurationElementCollection" ref="true" />
          <type api="T:System.IdentityModel.Configuration.SecurityTokenHandlerElementCollection" ref="true" />
          <type api="T:System.IdentityModel.Configuration.SecurityTokenHandlerSetElementCollection" ref="true" />
          <type api="T:System.IdentityModel.Services.Configuration.FederationConfigurationElementCollection" ref="true" />
          <type api="T:System.Runtime.Caching.Configuration.MemoryCacheSettingsCollection" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.DeclaredTypeElementCollection" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.ParameterElementCollection" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.TypeElementCollection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1" ref="true" />
          <type api="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingConfigurationCollection`1" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
          <type api="T:System.Web.Configuration.AssemblyCollection" ref="true" />
          <type api="T:System.Web.Configuration.AuthorizationRuleCollection" ref="true" />
          <type api="T:System.Web.Configuration.BufferModesCollection" ref="true" />
          <type api="T:System.Web.Configuration.BuildProviderCollection" ref="true" />
          <type api="T:System.Web.Configuration.ClientTargetCollection" ref="true" />
          <type api="T:System.Web.Configuration.CodeSubDirectoriesCollection" ref="true" />
          <type api="T:System.Web.Configuration.CompilerCollection" ref="true" />
          <type api="T:System.Web.Configuration.CustomErrorCollection" ref="true" />
          <type api="T:System.Web.Configuration.EventMappingSettingsCollection" ref="true" />
          <type api="T:System.Web.Configuration.ExpressionBuilderCollection" ref="true" />
          <type api="T:System.Web.Configuration.FolderLevelBuildProviderCollection" ref="true" />
          <type api="T:System.Web.Configuration.FormsAuthenticationUserCollection" ref="true" />
          <type api="T:System.Web.Configuration.FullTrustAssemblyCollection" ref="true" />
          <type api="T:System.Web.Configuration.HttpHandlerActionCollection" ref="true" />
          <type api="T:System.Web.Configuration.HttpModuleActionCollection" ref="true" />
          <type api="T:System.Web.Configuration.IgnoreDeviceFilterElementCollection" ref="true" />
          <type api="T:System.Web.Configuration.NamespaceCollection" ref="true" />
          <type api="T:System.Web.Configuration.OutputCacheProfileCollection" ref="true" />
          <type api="T:System.Web.Configuration.PartialTrustVisibleAssemblyCollection" ref="true" />
          <type api="T:System.Web.Configuration.ProfileGroupSettingsCollection" ref="true" />
          <type api="T:System.Web.Configuration.ProfilePropertySettingsCollection" ref="true" />
          <type api="T:System.Web.Configuration.ProfileSettingsCollection" ref="true" />
          <type api="T:System.Web.Configuration.ProtocolCollection" ref="true" />
          <type api="T:System.Web.Configuration.RuleSettingsCollection" ref="true" />
          <type api="T:System.Web.Configuration.SqlCacheDependencyDatabaseCollection" ref="true" />
          <type api="T:System.Web.Configuration.TagMapCollection" ref="true" />
          <type api="T:System.Web.Configuration.TagPrefixCollection" ref="true" />
          <type api="T:System.Web.Configuration.TransformerInfoCollection" ref="true" />
          <type api="T:System.Web.Configuration.TrustLevelCollection" ref="true" />
          <type api="T:System.Web.Configuration.UrlMappingCollection" ref="true" />
          <type api="T:System.Web.Configuration.ConvertersCollection" ref="true" />
          <type api="T:System.Web.UI.MobileControls.DeviceElementCollection" ref="true" />
          <type api="T:System.Web.UI.MobileControls.ControlElementCollection" ref="true" />
          <type api="T:System.Web.Mobile.DeviceFilterElementCollection" ref="true" />
          <type api="T:System.Web.Services.Configuration.SoapExtensionTypeElementCollection" ref="true" />
          <type api="T:System.Web.Services.Configuration.TypeElementCollection" ref="true" />
          <type api="T:System.Web.Services.Configuration.ProtocolElementCollection" ref="true" />
          <type api="T:System.Web.Services.Configuration.WsiProfilesElementCollection" ref="true" />
          <type api="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElementCollection" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionElementCollection" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.#ctor">
          <element api="M:System.Configuration.ConfigurationElementCollection.#ctor" />
          <element api="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationElementCollection">
      <topicdata name="ConfigurationElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationElementCollection" />
      <apidata name="ConfigurationElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationElementCollection">
      <topicdata name="ConfigurationElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationElementCollection" />
      <apidata name="ConfigurationElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationElementCollection.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.#ctor" />
        <element api="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd">
      <topicdata name="BaseAdd" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BaseAdd" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationElementCollection.BaseGet">
      <topicdata name="BaseGet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ConfigurationElementCollection.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.#ctor(System.Collections.IComparer)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ConfigurationElementCollection.#ctor" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.AddElementName">
      <topicdata group="api" />
      <apidata name="AddElementName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddElementName" />
      <setter name="set_AddElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="BaseAdd" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)">
      <topicdata group="api" />
      <apidata name="BaseAdd" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="throwIfExists">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="BaseAdd" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.BaseAdd" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseClear">
      <topicdata group="api" />
      <apidata name="BaseClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.BaseGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)">
      <topicdata group="api" />
      <apidata name="BaseGet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.BaseGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys">
      <topicdata group="api" />
      <apidata name="BaseGetAllKeys" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseGetKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="BaseIndexOf" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)">
      <topicdata group="api" />
      <apidata name="BaseIsRemoved" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)">
      <topicdata group="api" />
      <apidata name="BaseRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="BaseRemoveAt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.ClearElementName">
      <topicdata group="api" />
      <apidata name="ClearElementName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClearElementName" />
      <setter name="set_ClearElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CollectionType" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.ConfigurationElementCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.ElementName">
      <topicdata group="api" />
      <apidata name="ElementName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.EmitClear">
      <topicdata group="api" />
      <apidata name="EmitClear" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EmitClear" />
      <setter name="set_EmitClear" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="compareTo">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.GetHashCode">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)">
      <topicdata group="api" />
      <apidata name="IsElementName" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="IsElementRemovable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.IsModified">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.IsReadOnly">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="OnDeserializeUnrecognizedElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.RemoveElementName">
      <topicdata group="api" />
      <apidata name="RemoveElementName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoveElementName" />
      <setter name="set_RemoveElementName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.ResetModified">
      <topicdata group="api" />
      <apidata name="ResetModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.ResetModified">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SerializeElement" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="serializeCollectionKey">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.SetReadOnly">
      <topicdata group="api" />
      <apidata name="SetReadOnly" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.SetReadOnly">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="arr">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
      <topicdata group="api" />
      <apidata name="ThrowOnDuplicate" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ThrowOnDuplicate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
      <topicdata group="api" />
      <apidata name="Unmerge" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="sourceElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="parentElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationElementCollectionType">
      <topicdata group="api" />
      <apidata name="ConfigurationElementCollectionType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationElementCollectionType.BasicMap" />
        <element api="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap" />
        <element api="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate" />
        <element api="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMap">
      <topicdata group="api" notopic="" />
      <apidata name="AddRemoveClearMap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationElementCollectionType.AddRemoveClearMapAlternate">
      <topicdata group="api" notopic="" />
      <apidata name="AddRemoveClearMapAlternate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationElementCollectionType.BasicMap">
      <topicdata group="api" notopic="" />
      <apidata name="BasicMap" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate">
      <topicdata group="api" notopic="" />
      <apidata name="BasicMapAlternate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationElementProperty">
      <topicdata group="api" />
      <apidata name="ConfigurationElementProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElementProperty.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationElementProperty">
      <topicdata name="ConfigurationElementProperty" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationElementProperty" />
      <apidata name="ConfigurationElementProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationElementProperty">
      <topicdata name="ConfigurationElementProperty" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationElementProperty" />
      <apidata name="ConfigurationElementProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElementProperty.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementProperty" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationElementProperty.#ctor(System.Configuration.ConfigurationValidatorBase)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="validator">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationElementProperty.Validator">
      <topicdata group="api" />
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Validator" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationElementProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationErrorsException">
      <topicdata group="api" />
      <apidata name="ConfigurationErrorsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationErrorsException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Configuration.ConfigurationErrorsException.#ctor">
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationErrorsException.GetFilename">
          <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationErrorsException.GetLineNumber">
          <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Configuration.ConfigurationErrorsException.BareMessage" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Errors" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Filename" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Line" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationErrorsException">
      <topicdata name="ConfigurationErrorsException" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationErrorsException" />
      <apidata name="ConfigurationErrorsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationErrorsException.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.ConfigurationErrorsException.GetFilename">
          <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)" />
        </element>
        <element api="Overload:System.Configuration.ConfigurationErrorsException.GetLineNumber">
          <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationErrorsException">
      <topicdata name="ConfigurationErrorsException" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationErrorsException" />
      <apidata name="ConfigurationErrorsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationErrorsException.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationErrorsException.BareMessage" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Errors" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Filename" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Line" />
        <element api="P:System.Configuration.ConfigurationErrorsException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.ConfigurationErrorsException">
      <topicdata name="ConfigurationErrorsException" group="list" subgroup="Events" typeTopicId="T:System.Configuration.ConfigurationErrorsException" />
      <apidata name="ConfigurationErrorsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationErrorsException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationErrorsException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationErrorsException.GetFilename">
      <topicdata name="GetFilename" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetFilename" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationErrorsException.GetLineNumber">
      <topicdata name="GetLineNumber" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetLineNumber" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Exception,System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.#ctor(System.String,System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationErrorsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationErrorsException.BareMessage">
      <topicdata group="api" />
      <apidata name="BareMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationException.BareMessage">
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BareMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationErrorsException.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Errors" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationErrorsException.Filename">
      <topicdata group="api" />
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationException.Filename">
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="GetFilename" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationErrorsException.GetFilename" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.GetFilename(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="GetFilename" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationErrorsException.GetFilename" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="GetLineNumber" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationErrorsException.GetLineNumber" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.GetLineNumber(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="GetLineNumber" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationErrorsException.GetLineNumber" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationErrorsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationErrorsException.Line">
      <topicdata group="api" />
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationException.Line">
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationErrorsException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationException.Message">
          <type api="T:System.Configuration.ConfigurationException" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationException">
      <topicdata group="api" />
      <apidata name="ConfigurationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.ConfigurationErrorsException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Configuration.ConfigurationException.#ctor">
          <element api="M:System.Configuration.ConfigurationException.#ctor" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)" />
          <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)" />
        </element>
        <element api="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Configuration.ConfigurationException.BareMessage" />
        <element api="P:System.Configuration.ConfigurationException.Filename" />
        <element api="P:System.Configuration.ConfigurationException.Line" />
        <element api="P:System.Configuration.ConfigurationException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationException">
      <topicdata name="ConfigurationException" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationException" />
      <apidata name="ConfigurationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationException.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationException">
      <topicdata name="ConfigurationException" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationException" />
      <apidata name="ConfigurationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationException.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationException.BareMessage" />
        <element api="P:System.Configuration.ConfigurationException.Filename" />
        <element api="P:System.Configuration.ConfigurationException.Line" />
        <element api="P:System.Configuration.ConfigurationException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.ConfigurationException">
      <topicdata name="ConfigurationException" group="list" subgroup="Events" typeTopicId="T:System.Configuration.ConfigurationException" />
      <apidata name="ConfigurationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.ConfigurationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationException.#ctor" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Exception,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String,System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="line">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.#ctor(System.String,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, to create a new exception create a System.Configuration!System.Configuration.ConfigurationErrorsException</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ConfigurationException.BareMessage">
      <topicdata group="api" />
      <apidata name="BareMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_BareMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationException.Filename">
      <topicdata group="api" />
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationException.GetXmlNodeFilename(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="GetXmlNodeFilename" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, use System.Configuration!System.Configuration.ConfigurationErrorsException.GetFilename instead</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationException.GetXmlNodeLineNumber(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="GetXmlNodeLineNumber" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This class is obsolete, use System.Configuration!System.Configuration.ConfigurationErrorsException.GetLinenumber instead</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ConfigurationException.Line">
      <topicdata group="api" />
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Line" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationFileMap">
      <topicdata group="api" />
      <apidata name="ConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationFileMap.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
          <type api="T:System.Web.Configuration.WebConfigurationFileMap" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Configuration.ConfigurationFileMap.#ctor">
          <element api="M:System.Configuration.ConfigurationFileMap.#ctor" />
          <element api="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationFileMap.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationFileMap">
      <topicdata name="ConfigurationFileMap" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationFileMap" />
      <apidata name="ConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationFileMap.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationFileMap.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationFileMap">
      <topicdata name="ConfigurationFileMap" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationFileMap" />
      <apidata name="ConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationFileMap.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationFileMap.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationFileMap.#ctor" />
        <element api="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationFileMap.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationFileMap.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationFileMap.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationFileMap.#ctor" />
      <parameters>
        <parameter name="machineConfigFilename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationFileMap.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename">
      <topicdata group="api" />
      <apidata name="MachineConfigFilename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MachineConfigFilename" />
      <setter name="set_MachineConfigFilename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationLocation">
      <topicdata group="api" />
      <apidata name="ConfigurationLocation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationLocation.OpenConfiguration" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationLocation.Path" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationLocation">
      <topicdata name="ConfigurationLocation" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationLocation" />
      <apidata name="ConfigurationLocation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationLocation.OpenConfiguration" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocation" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationLocation">
      <topicdata name="ConfigurationLocation" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationLocation" />
      <apidata name="ConfigurationLocation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationLocation.Path" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocation" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLocation.OpenConfiguration">
      <topicdata group="api" />
      <apidata name="OpenConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLocation.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationLocationCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationLocationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ReadOnlyCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationLocationCollection">
      <topicdata name="ConfigurationLocationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationLocationCollection" />
      <apidata name="ConfigurationLocationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
        <element api="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationLocationCollection">
      <topicdata name="ConfigurationLocationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationLocationCollection" />
      <apidata name="ConfigurationLocationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.ReadOnlyCollectionBase.Count" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocationCollection" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLocationCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationLocation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLocationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationLockCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationLockCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationLockCollection.Add(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationLockCollection.AttributeList" />
        <element api="P:System.Configuration.ConfigurationLockCollection.Count" />
        <element api="P:System.Configuration.ConfigurationLockCollection.HasParentElements" />
        <element api="P:System.Configuration.ConfigurationLockCollection.IsModified" />
        <element api="P:System.Configuration.ConfigurationLockCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationLockCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationLockCollection">
      <topicdata name="ConfigurationLockCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationLockCollection" />
      <apidata name="ConfigurationLockCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationLockCollection.Add(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)" />
        <element api="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationLockCollection">
      <topicdata name="ConfigurationLockCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationLockCollection" />
      <apidata name="ConfigurationLockCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationLockCollection.AttributeList" />
        <element api="P:System.Configuration.ConfigurationLockCollection.Count" />
        <element api="P:System.Configuration.ConfigurationLockCollection.HasParentElements" />
        <element api="P:System.Configuration.ConfigurationLockCollection.IsModified" />
        <element api="P:System.Configuration.ConfigurationLockCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationLockCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.Add(System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.AttributeList">
      <topicdata group="api" />
      <apidata name="AttributeList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeList" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.CopyTo(System.String[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.HasParentElements">
      <topicdata group="api" />
      <apidata name="HasParentElements" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasParentElements" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsModified" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.IsReadOnly(System.String)">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.SetFromList(System.String)">
      <topicdata group="api" />
      <apidata name="SetFromList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeList">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationLockCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationLockCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationManager">
      <topicdata group="api" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
        <element api="Overload:System.Configuration.ConfigurationManager.OpenExeConfiguration">
          <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
          <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
        <element api="Overload:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration">
          <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
          <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
        </element>
        <element api="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
        <element api="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
        <element api="P:System.Configuration.ConfigurationManager.AppSettings" />
        <element api="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationManager">
      <topicdata name="ConfigurationManager" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationManager" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationManager.GetSection(System.String)" />
        <element api="Overload:System.Configuration.ConfigurationManager.OpenExeConfiguration">
          <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
          <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration" />
        <element api="Overload:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration">
          <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
          <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
        </element>
        <element api="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)" />
        <element api="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationManager">
      <topicdata name="ConfigurationManager" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationManager" />
      <apidata name="ConfigurationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationManager.AppSettings" />
        <element api="P:System.Configuration.ConfigurationManager.ConnectionStrings" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationManager.OpenExeConfiguration">
      <topicdata name="OpenExeConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenExeConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)" />
        <element api="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration">
      <topicdata name="OpenMappedExeConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OpenMappedExeConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)" />
        <element api="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationManager.AppSettings">
      <topicdata group="api" />
      <apidata name="AppSettings" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppSettings" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationManager.ConnectionStrings">
      <topicdata group="api" />
      <apidata name="ConnectionStrings" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectionStrings" />
      <returns>
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.GetSection(System.String)">
      <topicdata group="api" />
      <apidata name="GetSection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.Configuration.ConfigurationUserLevel)">
      <topicdata group="api" />
      <apidata name="OpenExeConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationManager.OpenExeConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userLevel">
          <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenExeConfiguration(System.String)">
      <topicdata group="api" />
      <apidata name="OpenExeConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationManager.OpenExeConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenMachineConfiguration">
      <topicdata group="api" />
      <apidata name="OpenMachineConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel)">
      <topicdata group="api" />
      <apidata name="OpenMappedExeConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileMap">
          <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
        </parameter>
        <parameter name="userLevel">
          <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration(System.Configuration.ExeConfigurationFileMap,System.Configuration.ConfigurationUserLevel,System.Boolean)">
      <topicdata group="api" />
      <apidata name="OpenMappedExeConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileMap">
          <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
        </parameter>
        <parameter name="userLevel">
          <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
        </parameter>
        <parameter name="preLoad">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.OpenMappedMachineConfiguration(System.Configuration.ConfigurationFileMap)">
      <topicdata group="api" />
      <apidata name="OpenMappedMachineConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileMap">
          <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.Configuration" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationManager.RefreshSection(System.String)">
      <topicdata group="api" />
      <apidata name="RefreshSection" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationPermission">
      <topicdata group="api" />
      <apidata name="ConfigurationPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Configuration.ConfigurationPermission.Copy" />
        <element api="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Configuration.ConfigurationPermission.IsUnrestricted" />
        <element api="M:System.Configuration.ConfigurationPermission.ToXml" />
        <element api="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationPermission">
      <topicdata name="ConfigurationPermission" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationPermission" />
      <apidata name="ConfigurationPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Configuration.ConfigurationPermission.Copy" />
        <element api="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Configuration.ConfigurationPermission.IsUnrestricted" />
        <element api="M:System.Configuration.ConfigurationPermission.ToXml" />
        <element api="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="securityElement">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermission" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationPermissionAttribute">
      <topicdata group="api" />
      <apidata name="ConfigurationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationPermissionAttribute">
      <topicdata name="ConfigurationPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationPermissionAttribute" />
      <apidata name="ConfigurationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermissionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationPermissionAttribute">
      <topicdata name="ConfigurationPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationPermissionAttribute" />
      <apidata name="ConfigurationPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermissionAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPermissionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationProperty">
      <topicdata group="api" />
      <apidata name="ConfigurationProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.ConfigurationProperty.#ctor">
          <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)" />
          <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)" />
          <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)" />
          <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)" />
          <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationProperty.Converter" />
        <element api="P:System.Configuration.ConfigurationProperty.DefaultValue" />
        <element api="P:System.Configuration.ConfigurationProperty.Description" />
        <element api="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsDefaultCollection" />
        <element api="P:System.Configuration.ConfigurationProperty.IsKey" />
        <element api="P:System.Configuration.ConfigurationProperty.IsRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.Name" />
        <element api="P:System.Configuration.ConfigurationProperty.Type" />
        <element api="P:System.Configuration.ConfigurationProperty.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationProperty">
      <topicdata name="ConfigurationProperty" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationProperty" />
      <apidata name="ConfigurationProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationProperty">
      <topicdata name="ConfigurationProperty" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationProperty" />
      <apidata name="ConfigurationProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationProperty.Converter" />
        <element api="P:System.Configuration.ConfigurationProperty.DefaultValue" />
        <element api="P:System.Configuration.ConfigurationProperty.Description" />
        <element api="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsDefaultCollection" />
        <element api="P:System.Configuration.ConfigurationProperty.IsKey" />
        <element api="P:System.Configuration.ConfigurationProperty.IsRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired" />
        <element api="P:System.Configuration.ConfigurationProperty.Name" />
        <element api="P:System.Configuration.ConfigurationProperty.Type" />
        <element api="P:System.Configuration.ConfigurationProperty.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationProperty.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)" />
        <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)" />
        <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)" />
        <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)" />
        <element api="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="typeConverter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="validator">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.ComponentModel.TypeConverter,System.Configuration.ConfigurationValidatorBase,System.Configuration.ConfigurationPropertyOptions,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="typeConverter">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </parameter>
        <parameter name="validator">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationProperty.#ctor(System.String,System.Type,System.Object,System.Configuration.ConfigurationPropertyOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Converter" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsAssemblyStringTransformationRequired">
      <topicdata group="api" />
      <apidata name="IsAssemblyStringTransformationRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAssemblyStringTransformationRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsDefaultCollection">
      <topicdata group="api" />
      <apidata name="IsDefaultCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDefaultCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsKey">
      <topicdata group="api" />
      <apidata name="IsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsRequired">
      <topicdata group="api" />
      <apidata name="IsRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsTypeStringTransformationRequired">
      <topicdata group="api" />
      <apidata name="IsTypeStringTransformationRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTypeStringTransformationRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.IsVersionCheckRequired">
      <topicdata group="api" />
      <apidata name="IsVersionCheckRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsVersionCheckRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationProperty.Validator">
      <topicdata group="api" />
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Validator" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationPropertyAttribute">
      <topicdata group="api" />
      <apidata name="ConfigurationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsKey" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.Name" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.Options" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationPropertyAttribute">
      <topicdata name="ConfigurationPropertyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationPropertyAttribute" />
      <apidata name="ConfigurationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationPropertyAttribute">
      <topicdata name="ConfigurationPropertyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationPropertyAttribute" />
      <apidata name="ConfigurationPropertyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsKey" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.Name" />
        <element api="P:System.Configuration.ConfigurationPropertyAttribute.Options" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.IsDefaultCollection">
      <topicdata group="api" />
      <apidata name="IsDefaultCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDefaultCollection" />
      <setter name="set_IsDefaultCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.IsKey">
      <topicdata group="api" />
      <apidata name="IsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsKey" />
      <setter name="set_IsKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.IsRequired">
      <topicdata group="api" />
      <apidata name="IsRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRequired" />
      <setter name="set_IsRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyAttribute.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Options" />
      <setter name="set_Options" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationPropertyCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationPropertyCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationPropertyCollection.#ctor" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.Count" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationPropertyCollection">
      <topicdata name="ConfigurationPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationPropertyCollection" />
      <apidata name="ConfigurationPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationPropertyCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationPropertyCollection">
      <topicdata name="ConfigurationPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationPropertyCollection" />
      <apidata name="ConfigurationPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationPropertyCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationPropertyCollection.Count" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)" />
        <element api="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.Add(System.Configuration.ConfigurationProperty)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.CopyTo(System.Configuration.ConfigurationProperty[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationPropertyCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationPropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationPropertyOptions">
      <topicdata group="api" />
      <apidata name="ConfigurationPropertyOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationPropertyOptions.None" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsRequired" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsKey" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired" />
        <element api="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsAssemblyStringTransformationRequired">
      <topicdata group="api" notopic="" />
      <apidata name="IsAssemblyStringTransformationRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsDefaultCollection">
      <topicdata group="api" notopic="" />
      <apidata name="IsDefaultCollection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsKey">
      <topicdata group="api" notopic="" />
      <apidata name="IsKey" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsRequired">
      <topicdata group="api" notopic="" />
      <apidata name="IsRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsTypeStringTransformationRequired">
      <topicdata group="api" notopic="" />
      <apidata name="IsTypeStringTransformationRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.IsVersionCheckRequired">
      <topicdata group="api" notopic="" />
      <apidata name="IsVersionCheckRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationPropertyOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSaveMode">
      <topicdata group="api" />
      <apidata name="ConfigurationSaveMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationSaveMode.Modified" />
        <element api="F:System.Configuration.ConfigurationSaveMode.Minimal" />
        <element api="F:System.Configuration.ConfigurationSaveMode.Full" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationSaveMode.Full">
      <topicdata group="api" notopic="" />
      <apidata name="Full" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationSaveMode.Minimal">
      <topicdata group="api" notopic="" />
      <apidata name="Minimal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationSaveMode.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSection">
      <topicdata group="api" />
      <apidata name="ConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.UriSection" ref="true" />
          <type api="T:System.Configuration.ClientSettingsSection" ref="true" />
          <type api="T:System.Configuration.AppSettingsSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationBuildersSection" ref="true" />
          <type api="T:System.Configuration.ConnectionStringsSection" ref="true" />
          <type api="T:System.Configuration.DefaultSection" ref="true" />
          <type api="T:System.Configuration.IgnoreSection" ref="true" />
          <type api="T:System.Configuration.ProtectedConfigurationSection" ref="true" />
          <type api="T:System.Net.Configuration.AuthenticationModulesSection" ref="true" />
          <type api="T:System.Net.Configuration.ConnectionManagementSection" ref="true" />
          <type api="T:System.Net.Configuration.DefaultProxySection" ref="true" />
          <type api="T:System.Net.Configuration.RequestCachingSection" ref="true" />
          <type api="T:System.Net.Configuration.SettingsSection" ref="true" />
          <type api="T:System.Net.Configuration.SmtpSection" ref="true" />
          <type api="T:System.Net.Configuration.WebRequestModulesSection" ref="true" />
          <type api="T:System.Data.Services.Configuration.DataServicesFeaturesSection" ref="true" />
          <type api="T:System.Windows.Forms.WindowsFormsSection" ref="true" />
          <type api="T:System.Drawing.Configuration.SystemDrawingSection" ref="true" />
          <type api="T:System.IdentityModel.Configuration.SystemIdentityModelSection" ref="true" />
          <type api="T:System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection" ref="true" />
          <type api="T:System.Runtime.Caching.Configuration.MemoryCacheSection" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.NetDataContractSerializerSection" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.DataContractSerializerSection" ref="true" />
          <type api="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" ref="true" />
          <type api="T:System.ServiceModel.Activation.Configuration.NetPipeSection" ref="true" />
          <type api="T:System.ServiceModel.Activation.Configuration.NetTcpSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.BehaviorsSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.BindingsSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ClientSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.CommonBehaviorsSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.DiagnosticSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceHostingEnvironmentSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ProtocolMappingSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ExtensionsSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServicesSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ComContractsSection" ref="true" />
          <type api="T:System.ServiceModel.Configuration.StandardEndpointsSection" ref="true" />
          <type api="T:System.ServiceModel.Activities.Tracking.Configuration.TrackingSection" ref="true" />
          <type api="T:System.ServiceModel.Activities.Configuration.WorkflowHostingOptionsSection" ref="true" />
          <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
          <type api="T:System.Transactions.Configuration.DefaultSettingsSection" ref="true" />
          <type api="T:System.Transactions.Configuration.MachineSettingsSection" ref="true" />
          <type api="T:System.Web.Configuration.AnonymousIdentificationSection" ref="true" />
          <type api="T:System.Web.Configuration.AuthenticationSection" ref="true" />
          <type api="T:System.Web.Configuration.AuthorizationSection" ref="true" />
          <type api="T:System.Web.Configuration.CacheSection" ref="true" />
          <type api="T:System.Web.Configuration.ClientTargetSection" ref="true" />
          <type api="T:System.Web.Configuration.CompilationSection" ref="true" />
          <type api="T:System.Web.Configuration.CustomErrorsSection" ref="true" />
          <type api="T:System.Web.Configuration.DeploymentSection" ref="true" />
          <type api="T:System.Web.Configuration.FullTrustAssembliesSection" ref="true" />
          <type api="T:System.Web.Configuration.GlobalizationSection" ref="true" />
          <type api="T:System.Web.Configuration.HealthMonitoringSection" ref="true" />
          <type api="T:System.Web.Configuration.HostingEnvironmentSection" ref="true" />
          <type api="T:System.Web.Configuration.HttpCookiesSection" ref="true" />
          <type api="T:System.Web.Configuration.HttpHandlersSection" ref="true" />
          <type api="T:System.Web.Configuration.HttpModulesSection" ref="true" />
          <type api="T:System.Web.Configuration.HttpRuntimeSection" ref="true" />
          <type api="T:System.Web.Configuration.IdentitySection" ref="true" />
          <type api="T:System.Web.Configuration.MachineKeySection" ref="true" />
          <type api="T:System.Web.Configuration.MembershipSection" ref="true" />
          <type api="T:System.Web.Configuration.OutputCacheSection" ref="true" />
          <type api="T:System.Web.Configuration.OutputCacheSettingsSection" ref="true" />
          <type api="T:System.Web.Configuration.PagesSection" ref="true" />
          <type api="T:System.Web.Configuration.PartialTrustVisibleAssembliesSection" ref="true" />
          <type api="T:System.Web.Configuration.ProcessModelSection" ref="true" />
          <type api="T:System.Web.Configuration.ProfileSection" ref="true" />
          <type api="T:System.Web.Configuration.ProtocolsSection" ref="true" />
          <type api="T:System.Web.Configuration.RoleManagerSection" ref="true" />
          <type api="T:System.Web.Configuration.SecurityPolicySection" ref="true" />
          <type api="T:System.Web.Configuration.SessionPageStateSection" ref="true" />
          <type api="T:System.Web.Configuration.SessionStateSection" ref="true" />
          <type api="T:System.Web.Configuration.SiteMapSection" ref="true" />
          <type api="T:System.Web.Configuration.SqlCacheDependencySection" ref="true" />
          <type api="T:System.Web.Configuration.TraceSection" ref="true" />
          <type api="T:System.Web.Configuration.TrustSection" ref="true" />
          <type api="T:System.Web.Configuration.UrlMappingsSection" ref="true" />
          <type api="T:System.Web.Configuration.WebControlsSection" ref="true" />
          <type api="T:System.Web.Configuration.WebPartsSection" ref="true" />
          <type api="T:System.Web.Configuration.XhtmlConformanceSection" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingJsonSerializationSection" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingProfileServiceSection" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingRoleServiceSection" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" ref="true" />
          <type api="T:System.Web.UI.MobileControls.MobileControlsSection" ref="true" />
          <type api="T:System.Web.Mobile.DeviceFiltersSection" ref="true" />
          <type api="T:System.Web.Services.Configuration.WebServicesSection" ref="true" />
          <type api="T:System.Workflow.Activities.ExternalDataExchangeServiceSection" ref="true" />
          <type api="T:System.Workflow.Activities.Configuration.ActiveDirectoryRoleFactoryConfiguration" ref="true" />
          <type api="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.DateTimeSerializationSection" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.SchemaImporterExtensionsSection" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.XmlSerializerSection" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.#ctor" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationSection">
      <topicdata name="ConfigurationSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationSection" />
      <apidata name="ConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationSection">
      <topicdata name="ConfigurationSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationSection" />
      <apidata name="ConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ConfigurationSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="DeserializeSection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
      <topicdata group="api" />
      <apidata name="GetRuntimeObject" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.IsModified">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.ResetModified">
      <topicdata group="api" />
      <apidata name="ResetModified" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.ResetModified">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSection.SectionInformation">
      <topicdata group="api" />
      <apidata name="SectionInformation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionInformation" />
      <returns>
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
      <topicdata group="api" />
      <apidata name="SerializeSection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parentElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="saveMode">
          <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeElementInTargetVersion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
        <parameter name="elementName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFramework">
          <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="ShouldSerializePropertyInTargetVersion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="targetFramework">
          <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
        </parameter>
        <parameter name="parentConfigurationElement">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSectionInTargetVersion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetFramework">
          <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSectionCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationSectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationSectionCollection.Get">
          <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationSectionCollection.Count" />
        <element api="Overload:System.Configuration.ConfigurationSectionCollection.Item">
          <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationSectionCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationSectionCollection">
      <topicdata name="ConfigurationSectionCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationSectionCollection" />
      <apidata name="ConfigurationSectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationSectionCollection.Get">
          <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationSectionCollection">
      <topicdata name="ConfigurationSectionCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationSectionCollection" />
      <apidata name="ConfigurationSectionCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationSectionCollection.Count" />
        <element api="Overload:System.Configuration.ConfigurationSectionCollection.Item">
          <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationSectionCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationSectionCollection.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationSectionCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.Add(System.String,System.Configuration.ConfigurationSection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.CopyTo(System.Configuration.ConfigurationSection[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionCollection.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionCollection.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.GetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionCollection.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSectionGroup">
      <topicdata group="api" />
      <apidata name="ConfigurationSectionGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationSectionGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.ApplicationSettingsGroup" ref="true" />
          <type api="T:System.Configuration.UserSettingsGroup" ref="true" />
          <type api="T:System.Net.Configuration.MailSettingsSectionGroup" ref="true" />
          <type api="T:System.Net.Configuration.NetSectionGroup" ref="true" />
          <type api="T:System.Data.Services.Configuration.DataServicesSectionGroup" ref="true" />
          <type api="T:System.Runtime.Caching.Configuration.CachingSectionGroup" ref="true" />
          <type api="T:System.Runtime.Serialization.Configuration.SerializationSectionGroup" ref="true" />
          <type api="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelSectionGroup" ref="true" />
          <type api="T:System.ServiceModel.Activities.Configuration.ServiceModelActivitiesSectionGroup" ref="true" />
          <type api="T:System.Transactions.Configuration.TransactionsSectionGroup" ref="true" />
          <type api="T:System.Web.Configuration.SystemWebCachingSectionGroup" ref="true" />
          <type api="T:System.Web.Configuration.SystemWebSectionGroup" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingSectionGroup" ref="true" />
          <type api="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" ref="true" />
          <type api="T:System.Web.Configuration.SystemWebExtensionsSectionGroup" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.SerializationSectionGroup" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationSectionGroup.#ctor" />
        <element api="Overload:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationSectionGroup">
      <topicdata name="ConfigurationSectionGroup" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationSectionGroup" />
      <apidata name="ConfigurationSectionGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationSectionGroup.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationSectionGroup">
      <topicdata name="ConfigurationSectionGroup" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationSectionGroup" />
      <apidata name="ConfigurationSectionGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ConfigurationSectionGroup.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <topicdata name="ForceDeclaration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
        <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration">
      <topicdata group="api" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired">
      <topicdata group="api" />
      <apidata name="IsDeclarationRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeclarationRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.IsDeclared">
      <topicdata group="api" />
      <apidata name="IsDeclared" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeclared" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName">
      <topicdata group="api" />
      <apidata name="SectionGroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionGroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.SectionGroups">
      <topicdata group="api" />
      <apidata name="SectionGroups" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionGroups" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.Sections">
      <topicdata group="api" />
      <apidata name="Sections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sections" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroup.ShouldSerializeSectionGroupInTargetVersion(System.Runtime.Versioning.FrameworkName)">
      <topicdata group="api" />
      <apidata name="ShouldSerializeSectionGroupInTargetVersion" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="targetFramework">
          <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroup.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSectionGroupCollection">
      <topicdata group="api" />
      <apidata name="ConfigurationSectionGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationSectionGroupCollection.Get">
          <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Count" />
        <element api="Overload:System.Configuration.ConfigurationSectionGroupCollection.Item">
          <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationSectionGroupCollection">
      <topicdata name="ConfigurationSectionGroupCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationSectionGroupCollection" />
      <apidata name="ConfigurationSectionGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Clear" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)" />
        <element api="Overload:System.Configuration.ConfigurationSectionGroupCollection.Get">
          <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationSectionGroupCollection">
      <topicdata name="ConfigurationSectionGroupCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationSectionGroupCollection" />
      <apidata name="ConfigurationSectionGroupCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Count" />
        <element api="Overload:System.Configuration.ConfigurationSectionGroupCollection.Item">
          <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Keys" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationSectionGroupCollection.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationSectionGroupCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.Add(System.String,System.Configuration.ConfigurationSectionGroup)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sectionGroup">
          <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.CopyTo(System.Configuration.ConfigurationSectionGroup[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroupCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Count">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.Int32)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroupCollection.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroupCollection.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.GetKey(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroupCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroupCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigurationSectionGroupCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSectionGroupCollection.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" ref="true">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationSectionGroupCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSectionGroupCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationSettings">
      <topicdata group="api" />
      <apidata name="ConfigurationSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationSettings.AppSettings" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationSettings">
      <topicdata name="ConfigurationSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationSettings" />
      <apidata name="ConfigurationSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationSettings">
      <topicdata name="ConfigurationSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationSettings" />
      <apidata name="ConfigurationSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSettings.AppSettings" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSettings" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationSettings.AppSettings">
      <topicdata group="api" />
      <apidata name="AppSettings" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AppSettings" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is obsolete, it has been replaced by System.Configuration!System.Configuration.ConfigurationManager.AppSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConfigurationSettings.GetConfig(System.String)">
      <topicdata group="api" />
      <apidata name="GetConfig" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This method is obsolete, it has been replaced by System.Configuration!System.Configuration.ConfigurationManager.GetSection</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ConfigurationUserLevel">
      <topicdata group="api" />
      <apidata name="ConfigurationUserLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ConfigurationUserLevel.None" />
        <element api="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming" />
        <element api="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationUserLevel.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationUserLevel.PerUserRoaming">
      <topicdata group="api" notopic="" />
      <apidata name="PerUserRoaming" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal">
      <topicdata group="api" notopic="" />
      <apidata name="PerUserRoamingAndLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </returns>
      <value>20</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationValidatorAttribute">
      <topicdata group="api" />
      <apidata name="ConfigurationValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.RegexStringValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.SubclassTypeValidatorAttribute" ref="true" />
          <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Configuration.ConfigurationValidatorAttribute.#ctor">
          <element api="M:System.Configuration.ConfigurationValidatorAttribute.#ctor" />
          <element api="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationValidatorAttribute">
      <topicdata name="ConfigurationValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationValidatorAttribute" />
      <apidata name="ConfigurationValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigurationValidatorAttribute">
      <topicdata name="ConfigurationValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigurationValidatorAttribute" />
      <apidata name="ConfigurationValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationValidatorAttribute.#ctor" />
        <element api="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.ConfigurationValidatorAttribute.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationValidatorAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConfigurationValidatorAttribute.#ctor" />
      <parameters>
        <parameter name="validator">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType">
      <topicdata group="api" />
      <apidata name="ValidatorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidatorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigurationValidatorBase">
      <topicdata group="api" />
      <apidata name="ConfigurationValidatorBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.CallbackValidator" ref="true" />
          <type api="T:System.Configuration.DefaultValidator" ref="true" />
          <type api="T:System.Configuration.IntegerValidator" ref="true" />
          <type api="T:System.Configuration.LongValidator" ref="true" />
          <type api="T:System.Configuration.PositiveTimeSpanValidator" ref="true" />
          <type api="T:System.Configuration.RegexStringValidator" ref="true" />
          <type api="T:System.Configuration.StringValidator" ref="true" />
          <type api="T:System.Configuration.SubclassTypeValidator" ref="true" />
          <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
          <type api="T:System.Xml.Serialization.Configuration.RootedPathValidator" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationValidatorBase.#ctor" />
        <element api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)" />
        <element api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigurationValidatorBase">
      <topicdata name="ConfigurationValidatorBase" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigurationValidatorBase" />
      <apidata name="ConfigurationValidatorBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)" />
        <element api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorBase" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationValidatorBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConfigXmlDocument">
      <topicdata group="api" />
      <apidata name="ConfigXmlDocument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigXmlDocument.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XmlDocument" ref="true" />
          <type api="T:System.Xml.XmlNode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.Internal.IConfigErrorInfo" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Xml.XmlDocument.NodeChanged" />
        <element api="E:System.Xml.XmlDocument.NodeChanging" />
        <element api="E:System.Xml.XmlDocument.NodeInserted" />
        <element api="E:System.Xml.XmlDocument.NodeInserting" />
        <element api="E:System.Xml.XmlDocument.NodeRemoved" />
        <element api="E:System.Xml.XmlDocument.NodeRemoving" />
        <element api="M:System.Configuration.ConfigXmlDocument.#ctor" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateAttribute">
          <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
          <element api="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateElement">
          <element api="M:System.Xml.XmlDocument.CreateElement(System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
          <element api="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Load">
          <element api="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
          <element api="M:System.Configuration.ConfigXmlDocument.Load(System.String)" />
          <element api="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
        <element api="M:System.Xml.XmlDocument.CreateDocumentFragment" />
        <element api="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateNavigator" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateNode">
          <element api="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.GetElementById(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.GetElementsByTagName">
          <element api="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
          <element api="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <element api="M:System.Xml.XmlDocument.LoadXml(System.String)" />
        <element api="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Save">
          <element api="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
          <element api="M:System.Xml.XmlDocument.Save(System.String)" />
          <element api="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
        </element>
        <element api="Overload:System.Configuration.ConfigXmlDocument.Validate">
          <element api="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
          <element api="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
        </element>
        <element api="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.Clone" />
        <element api="M:System.Xml.XmlNode.GetEnumerator" />
        <element api="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
        <element api="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
        <element api="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.Normalize" />
        <element api="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.RemoveAll" />
        <element api="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.SelectNodes">
          <element api="M:System.Xml.XmlNode.SelectNodes(System.String)" />
          <element api="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
        </element>
        <element api="Overload:System.Configuration.ConfigXmlDocument.SelectSingleNode">
          <element api="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
          <element api="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
        </element>
        <element api="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
        <element api="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.XmlNode.System#ICloneable#Clone" />
        <element api="P:System.Configuration.ConfigXmlDocument.Filename" />
        <element api="P:System.Configuration.ConfigXmlDocument.LineNumber" />
        <element api="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename" />
        <element api="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber" />
        <element api="P:System.Xml.XmlDocument.BaseURI" />
        <element api="P:System.Xml.XmlDocument.DocumentElement" />
        <element api="P:System.Xml.XmlDocument.DocumentType" />
        <element api="P:System.Xml.XmlDocument.Implementation" />
        <element api="P:System.Xml.XmlDocument.InnerText" />
        <element api="P:System.Xml.XmlDocument.InnerXml" />
        <element api="P:System.Xml.XmlDocument.IsReadOnly" />
        <element api="P:System.Xml.XmlDocument.LocalName" />
        <element api="P:System.Xml.XmlDocument.Name" />
        <element api="P:System.Xml.XmlDocument.NameTable" />
        <element api="P:System.Xml.XmlDocument.NodeType" />
        <element api="P:System.Xml.XmlDocument.OwnerDocument" />
        <element api="P:System.Xml.XmlDocument.ParentNode" />
        <element api="P:System.Xml.XmlDocument.PreserveWhitespace" />
        <element api="P:System.Xml.XmlDocument.SchemaInfo" />
        <element api="P:System.Xml.XmlDocument.Schemas" />
        <element api="P:System.Xml.XmlDocument.XmlResolver" />
        <element api="P:System.Xml.XmlNode.Attributes" />
        <element api="P:System.Xml.XmlNode.ChildNodes" />
        <element api="P:System.Xml.XmlNode.FirstChild" />
        <element api="P:System.Xml.XmlNode.HasChildNodes" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Item">
          <element api="P:System.Xml.XmlNode.Item(System.String)" />
          <element api="P:System.Xml.XmlNode.Item(System.String,System.String)" />
        </element>
        <element api="P:System.Xml.XmlNode.LastChild" />
        <element api="P:System.Xml.XmlNode.NamespaceURI" />
        <element api="P:System.Xml.XmlNode.NextSibling" />
        <element api="P:System.Xml.XmlNode.OuterXml" />
        <element api="P:System.Xml.XmlNode.Prefix" />
        <element api="P:System.Xml.XmlNode.PreviousSibling" />
        <element api="P:System.Xml.XmlNode.PreviousText" />
        <element api="P:System.Xml.XmlNode.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConfigXmlDocument">
      <topicdata name="ConfigXmlDocument" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConfigXmlDocument" />
      <apidata name="ConfigXmlDocument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigXmlDocument.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateAttribute">
          <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
          <element api="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateElement">
          <element api="M:System.Xml.XmlDocument.CreateElement(System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
          <element api="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Load">
          <element api="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
          <element api="M:System.Configuration.ConfigXmlDocument.Load(System.String)" />
          <element api="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
          <element api="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
        </element>
        <element api="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlDocument.CloneNode(System.Boolean)" />
        <element api="M:System.Xml.XmlDocument.CreateDocumentFragment" />
        <element api="M:System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateEntityReference(System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateNavigator" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.CreateNode">
          <element api="M:System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)" />
          <element api="M:System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlDocument.GetElementById(System.String)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.GetElementsByTagName">
          <element api="M:System.Xml.XmlDocument.GetElementsByTagName(System.String)" />
          <element api="M:System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)" />
        <element api="M:System.Xml.XmlDocument.LoadXml(System.String)" />
        <element api="M:System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Save">
          <element api="M:System.Xml.XmlDocument.Save(System.IO.Stream)" />
          <element api="M:System.Xml.XmlDocument.Save(System.String)" />
          <element api="M:System.Xml.XmlDocument.Save(System.IO.TextWriter)" />
          <element api="M:System.Xml.XmlDocument.Save(System.Xml.XmlWriter)" />
        </element>
        <element api="Overload:System.Configuration.ConfigXmlDocument.Validate">
          <element api="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)" />
          <element api="M:System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)" />
        </element>
        <element api="M:System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)" />
        <element api="M:System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.Clone" />
        <element api="M:System.Xml.XmlNode.GetEnumerator" />
        <element api="M:System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)" />
        <element api="M:System.Xml.XmlNode.GetPrefixOfNamespace(System.String)" />
        <element api="M:System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.Normalize" />
        <element api="M:System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.RemoveAll" />
        <element api="M:System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)" />
        <element api="M:System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.SelectNodes">
          <element api="M:System.Xml.XmlNode.SelectNodes(System.String)" />
          <element api="M:System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)" />
        </element>
        <element api="Overload:System.Configuration.ConfigXmlDocument.SelectSingleNode">
          <element api="M:System.Xml.XmlNode.SelectSingleNode(System.String)" />
          <element api="M:System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)" />
        </element>
        <element api="M:System.Xml.XmlNode.Supports(System.String,System.String)" />
        <element api="M:System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.XmlNode.System#ICloneable#Clone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConfigXmlDocument">
      <topicdata name="ConfigXmlDocument" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConfigXmlDocument" />
      <apidata name="ConfigXmlDocument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigXmlDocument.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigXmlDocument.Filename" />
        <element api="P:System.Configuration.ConfigXmlDocument.LineNumber" />
        <element api="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename" />
        <element api="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber" />
        <element api="P:System.Xml.XmlDocument.BaseURI" />
        <element api="P:System.Xml.XmlDocument.DocumentElement" />
        <element api="P:System.Xml.XmlDocument.DocumentType" />
        <element api="P:System.Xml.XmlDocument.Implementation" />
        <element api="P:System.Xml.XmlDocument.InnerText" />
        <element api="P:System.Xml.XmlDocument.InnerXml" />
        <element api="P:System.Xml.XmlDocument.IsReadOnly" />
        <element api="P:System.Xml.XmlDocument.LocalName" />
        <element api="P:System.Xml.XmlDocument.Name" />
        <element api="P:System.Xml.XmlDocument.NameTable" />
        <element api="P:System.Xml.XmlDocument.NodeType" />
        <element api="P:System.Xml.XmlDocument.OwnerDocument" />
        <element api="P:System.Xml.XmlDocument.ParentNode" />
        <element api="P:System.Xml.XmlDocument.PreserveWhitespace" />
        <element api="P:System.Xml.XmlDocument.SchemaInfo" />
        <element api="P:System.Xml.XmlDocument.Schemas" />
        <element api="P:System.Xml.XmlDocument.XmlResolver" />
        <element api="P:System.Xml.XmlNode.Attributes" />
        <element api="P:System.Xml.XmlNode.ChildNodes" />
        <element api="P:System.Xml.XmlNode.FirstChild" />
        <element api="P:System.Xml.XmlNode.HasChildNodes" />
        <element api="Overload:System.Configuration.ConfigXmlDocument.Item">
          <element api="P:System.Xml.XmlNode.Item(System.String)" />
          <element api="P:System.Xml.XmlNode.Item(System.String,System.String)" />
        </element>
        <element api="P:System.Xml.XmlNode.LastChild" />
        <element api="P:System.Xml.XmlNode.NamespaceURI" />
        <element api="P:System.Xml.XmlNode.NextSibling" />
        <element api="P:System.Xml.XmlNode.OuterXml" />
        <element api="P:System.Xml.XmlNode.Prefix" />
        <element api="P:System.Xml.XmlNode.PreviousSibling" />
        <element api="P:System.Xml.XmlNode.PreviousText" />
        <element api="P:System.Xml.XmlNode.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.ConfigXmlDocument">
      <topicdata name="ConfigXmlDocument" group="list" subgroup="Events" typeTopicId="T:System.Configuration.ConfigXmlDocument" />
      <apidata name="ConfigXmlDocument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConfigXmlDocument.#ctor" />
      <elements>
        <element api="E:System.Xml.XmlDocument.NodeChanged" />
        <element api="E:System.Xml.XmlDocument.NodeChanging" />
        <element api="E:System.Xml.XmlDocument.NodeInserted" />
        <element api="E:System.Xml.XmlDocument.NodeInserting" />
        <element api="E:System.Xml.XmlDocument.NodeRemoved" />
        <element api="E:System.Xml.XmlDocument.NodeRemoving" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigXmlDocument.CreateAttribute">
      <topicdata name="CreateAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigXmlDocument.CreateElement">
      <topicdata name="CreateElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlDocument.CreateElement(System.String)" />
        <element api="M:System.Xml.XmlDocument.CreateElement(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConfigXmlDocument.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlDocument.Load(System.IO.Stream)" />
        <element api="M:System.Configuration.ConfigXmlDocument.Load(System.String)" />
        <element api="M:System.Xml.XmlDocument.Load(System.IO.TextReader)" />
        <element api="M:System.Xml.XmlDocument.Load(System.Xml.XmlReader)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateAttribute(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigXmlDocument.CreateAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlAttribute" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateCDataSection(System.String)">
      <topicdata group="api" />
      <apidata name="CreateCDataSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateCDataSection(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlCDataSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateComment(System.String)">
      <topicdata group="api" />
      <apidata name="CreateComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateComment(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlComment" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateElement(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigXmlDocument.CreateElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateElement(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateSignificantWhitespace(System.String)">
      <topicdata group="api" />
      <apidata name="CreateSignificantWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlSignificantWhitespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateTextNode(System.String)">
      <topicdata group="api" />
      <apidata name="CreateTextNode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateTextNode(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlText" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.CreateWhitespace(System.String)">
      <topicdata group="api" />
      <apidata name="CreateWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.CreateWhitespace(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlWhitespace" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigXmlDocument.Filename">
      <topicdata group="api" />
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigXmlDocument.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.Load(System.String)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConfigXmlDocument.Load" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlDocument.Load(System.String)">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConfigXmlDocument.LoadSingleElement(System.String,System.Xml.XmlTextReader)">
      <topicdata group="api" />
      <apidata name="LoadSingleElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceReader">
          <type api="T:System.Xml.XmlTextReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#Filename">
      <topicdata group="api" eiiName="IConfigErrorInfo.Filename" />
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Configuration.Internal.IConfigErrorInfo.Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Configuration.Internal.IConfigErrorInfo.Filename">
          <type api="T:System.Configuration.Internal.IConfigErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConfigXmlDocument.System#Configuration#Internal#IConfigErrorInfo#LineNumber">
      <topicdata group="api" eiiName="IConfigErrorInfo.LineNumber" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Configuration.Internal.IConfigErrorInfo.LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Configuration.Internal.IConfigErrorInfo.LineNumber">
          <type api="T:System.Configuration.Internal.IConfigErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConfigXmlDocument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConnectionStringSettings">
      <topicdata group="api" />
      <apidata name="ConnectionStringSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.Configuration.ConnectionStringSettings.#ctor">
          <element api="M:System.Configuration.ConnectionStringSettings.#ctor" />
          <element api="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)" />
          <element api="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.ConnectionStringSettings.ToString" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConnectionStringSettings.ConnectionString" />
        <element api="P:System.Configuration.ConnectionStringSettings.Name" />
        <element api="P:System.Configuration.ConnectionStringSettings.ProviderName" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConnectionStringSettings">
      <topicdata name="ConnectionStringSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConnectionStringSettings" />
      <apidata name="ConnectionStringSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettings.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConnectionStringSettings.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConnectionStringSettings">
      <topicdata name="ConnectionStringSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConnectionStringSettings" />
      <apidata name="ConnectionStringSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettings.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConnectionStringSettings.ConnectionString" />
        <element api="P:System.Configuration.ConnectionStringSettings.Name" />
        <element api="P:System.Configuration.ConnectionStringSettings.ProviderName" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConnectionStringSettings.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ConnectionStringSettings.#ctor" />
        <element api="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)" />
        <element api="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConnectionStringSettings.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConnectionStringSettings.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettings.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ConnectionStringSettings.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="connectionString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="providerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConnectionStringSettings.ConnectionString">
      <topicdata group="api" />
      <apidata name="ConnectionString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionString" />
      <setter name="set_ConnectionString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>connectionString</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ConnectionStringSettings.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ConnectionStringSettings.ProviderName">
      <topicdata group="api" />
      <apidata name="ProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProviderName" />
      <setter name="set_ProviderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>providerName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>System.Data.SqlClient</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettings.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConnectionStringSettingsCollection">
      <topicdata group="api" />
      <apidata name="ConnectionStringSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettingsCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.#ctor" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Clear" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)" />
        <element api="Overload:System.Configuration.ConnectionStringSettingsCollection.Remove">
          <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)" />
          <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="Overload:System.Configuration.ConnectionStringSettingsCollection.Item">
          <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ConnectionStringSettingsCollection">
      <topicdata name="ConnectionStringSettingsCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConnectionStringSettingsCollection" />
      <apidata name="ConnectionStringSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettingsCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Clear" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)" />
        <element api="Overload:System.Configuration.ConnectionStringSettingsCollection.Remove">
          <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)" />
          <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConnectionStringSettingsCollection">
      <topicdata name="ConnectionStringSettingsCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConnectionStringSettingsCollection" />
      <apidata name="ConnectionStringSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringSettingsCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="Overload:System.Configuration.ConnectionStringSettingsCollection.Item">
          <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConnectionStringSettingsCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)" />
        <element api="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ConnectionStringSettingsCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)" />
        <element api="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.Add(System.Configuration.ConnectionStringSettings)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.IndexOf(System.Configuration.ConnectionStringSettings)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConnectionStringSettingsCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConnectionStringSettingsCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConnectionStringSettingsCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.Configuration.ConnectionStringSettings)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConnectionStringSettingsCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settings">
          <type api="T:System.Configuration.ConnectionStringSettings" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ConnectionStringSettingsCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringSettingsCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ConnectionStringsSection">
      <topicdata group="api" />
      <apidata name="ConnectionStringsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringsSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConnectionStringsSection.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.ConnectionStringsSection.ConnectionStrings" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ConnectionStringsSection">
      <topicdata name="ConnectionStringsSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ConnectionStringsSection" />
      <apidata name="ConnectionStringsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringsSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringsSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ConnectionStringsSection">
      <topicdata name="ConnectionStringsSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ConnectionStringsSection" />
      <apidata name="ConnectionStringsSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ConnectionStringsSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.ConnectionStringsSection.ConnectionStrings" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringsSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ConnectionStringsSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringsSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ConnectionStringsSection.ConnectionStrings">
      <topicdata group="api" />
      <apidata name="ConnectionStrings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConnectionStrings" />
      <returns>
        <type api="T:System.Configuration.ConnectionStringSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ConnectionStringsSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsDefaultCollection" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ContextInformation">
      <topicdata group="api" />
      <apidata name="ContextInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ContextInformation.GetSection(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ContextInformation.HostingContext" />
        <element api="P:System.Configuration.ContextInformation.IsMachineLevel" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ContextInformation">
      <topicdata name="ContextInformation" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ContextInformation" />
      <apidata name="ContextInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ContextInformation.GetSection(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ContextInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ContextInformation">
      <topicdata name="ContextInformation" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ContextInformation" />
      <apidata name="ContextInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ContextInformation.HostingContext" />
        <element api="P:System.Configuration.ContextInformation.IsMachineLevel" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ContextInformation" />
      </containers>
    </api>
    <api id="M:System.Configuration.ContextInformation.GetSection(System.String)">
      <topicdata group="api" />
      <apidata name="GetSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sectionName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ContextInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ContextInformation.HostingContext">
      <topicdata group="api" />
      <apidata name="HostingContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HostingContext" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ContextInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ContextInformation.IsMachineLevel">
      <topicdata group="api" />
      <apidata name="IsMachineLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMachineLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ContextInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.DefaultSection">
      <topicdata group="api" />
      <apidata name="DefaultSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DefaultSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.DefaultSection.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.DefaultSection">
      <topicdata name="DefaultSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.DefaultSection" />
      <apidata name="DefaultSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DefaultSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.DefaultSection">
      <topicdata name="DefaultSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.DefaultSection" />
      <apidata name="DefaultSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DefaultSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.DefaultSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.DefaultSettingValueAttribute">
      <topicdata group="api" />
      <apidata name="DefaultSettingValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.DefaultSettingValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.DefaultSettingValueAttribute">
      <topicdata name="DefaultSettingValueAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.DefaultSettingValueAttribute" />
      <apidata name="DefaultSettingValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSettingValueAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.DefaultSettingValueAttribute">
      <topicdata name="DefaultSettingValueAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.DefaultSettingValueAttribute" />
      <apidata name="DefaultSettingValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.DefaultSettingValueAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSettingValueAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.DefaultSettingValueAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSettingValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.DefaultSettingValueAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultSettingValueAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.DefaultValidator">
      <topicdata group="api" />
      <apidata name="DefaultValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DefaultValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.DefaultValidator.#ctor" />
        <element api="M:System.Configuration.DefaultValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.DefaultValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.DefaultValidator">
      <topicdata name="DefaultValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.DefaultValidator" />
      <apidata name="DefaultValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DefaultValidator.#ctor" />
      <elements>
        <element api="M:System.Configuration.DefaultValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.DefaultValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultValidator" />
      </containers>
    </api>
    <api id="M:System.Configuration.DefaultValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DefaultValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DefaultValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DefaultValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.DictionarySectionHandler">
      <topicdata group="api" />
      <apidata name="DictionarySectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.DictionarySectionHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.DictionarySectionHandler.#ctor" />
        <element api="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.DictionarySectionHandler.KeyAttributeName" />
        <element api="P:System.Configuration.DictionarySectionHandler.ValueAttributeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.DictionarySectionHandler">
      <topicdata name="DictionarySectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.DictionarySectionHandler" />
      <apidata name="DictionarySectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.DictionarySectionHandler.#ctor" />
      <elements>
        <element api="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.DictionarySectionHandler">
      <topicdata name="DictionarySectionHandler" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.DictionarySectionHandler" />
      <apidata name="DictionarySectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.DictionarySectionHandler.#ctor" />
      <elements>
        <element api="P:System.Configuration.DictionarySectionHandler.KeyAttributeName" />
        <element api="P:System.Configuration.DictionarySectionHandler.ValueAttributeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.DictionarySectionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DictionarySectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.DictionarySectionHandler.KeyAttributeName">
      <topicdata group="api" />
      <apidata name="KeyAttributeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyAttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.DictionarySectionHandler.ValueAttributeName">
      <topicdata group="api" />
      <apidata name="ValueAttributeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueAttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DictionarySectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.DpapiProtectedConfigurationProvider">
      <topicdata group="api" />
      <apidata name="DpapiProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor" />
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.DpapiProtectedConfigurationProvider">
      <topicdata name="DpapiProtectedConfigurationProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.DpapiProtectedConfigurationProvider" />
      <apidata name="DpapiProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor" />
      <elements>
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.DpapiProtectedConfigurationProvider">
      <topicdata name="DpapiProtectedConfigurationProvider" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.DpapiProtectedConfigurationProvider" />
      <apidata name="DpapiProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor" />
      <elements>
        <element api="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.DpapiProtectedConfigurationProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DpapiProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encryptedNode">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DpapiProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.DpapiProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="configurationValues">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.DpapiProtectedConfigurationProvider.UseMachineProtection">
      <topicdata group="api" />
      <apidata name="UseMachineProtection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseMachineProtection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ElementInformation">
      <topicdata group="api" />
      <apidata name="ElementInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ElementInformation.Errors" />
        <element api="P:System.Configuration.ElementInformation.IsCollection" />
        <element api="P:System.Configuration.ElementInformation.IsLocked" />
        <element api="P:System.Configuration.ElementInformation.IsPresent" />
        <element api="P:System.Configuration.ElementInformation.LineNumber" />
        <element api="P:System.Configuration.ElementInformation.Properties" />
        <element api="P:System.Configuration.ElementInformation.Source" />
        <element api="P:System.Configuration.ElementInformation.Type" />
        <element api="P:System.Configuration.ElementInformation.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ElementInformation">
      <topicdata name="ElementInformation" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ElementInformation" />
      <apidata name="ElementInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ElementInformation">
      <topicdata name="ElementInformation" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ElementInformation" />
      <apidata name="ElementInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ElementInformation.Errors" />
        <element api="P:System.Configuration.ElementInformation.IsCollection" />
        <element api="P:System.Configuration.ElementInformation.IsLocked" />
        <element api="P:System.Configuration.ElementInformation.IsPresent" />
        <element api="P:System.Configuration.ElementInformation.LineNumber" />
        <element api="P:System.Configuration.ElementInformation.Properties" />
        <element api="P:System.Configuration.ElementInformation.Source" />
        <element api="P:System.Configuration.ElementInformation.Type" />
        <element api="P:System.Configuration.ElementInformation.Validator" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.Errors">
      <topicdata group="api" />
      <apidata name="Errors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Errors" />
      <returns>
        <type api="T:System.Collections.ICollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.IsCollection">
      <topicdata group="api" />
      <apidata name="IsCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCollection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.IsLocked">
      <topicdata group="api" />
      <apidata name="IsLocked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLocked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.IsPresent">
      <topicdata group="api" />
      <apidata name="IsPresent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPresent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ElementInformation.Validator">
      <topicdata group="api" />
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Validator" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ElementInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ExeConfigurationFileMap">
      <topicdata group="api" />
      <apidata name="ExeConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ExeConfigurationFileMap.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.ExeConfigurationFileMap.#ctor">
          <element api="M:System.Configuration.ExeConfigurationFileMap.#ctor" />
          <element api="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)" />
        </element>
        <element api="M:System.Configuration.ExeConfigurationFileMap.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ExeConfigurationFileMap">
      <topicdata name="ExeConfigurationFileMap" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ExeConfigurationFileMap" />
      <apidata name="ExeConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ExeConfigurationFileMap.#ctor" />
      <elements>
        <element api="M:System.Configuration.ExeConfigurationFileMap.Clone" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ExeConfigurationFileMap">
      <topicdata name="ExeConfigurationFileMap" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ExeConfigurationFileMap" />
      <apidata name="ExeConfigurationFileMap" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ExeConfigurationFileMap.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationFileMap.MachineConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename" />
        <element api="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ExeConfigurationFileMap.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ExeConfigurationFileMap.#ctor" />
        <element api="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ExeConfigurationFileMap.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ExeConfigurationFileMap.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ExeConfigurationFileMap.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ExeConfigurationFileMap.#ctor" />
      <parameters>
        <parameter name="machineConfigFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ExeConfigurationFileMap.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationFileMap.Clone">
          <type api="T:System.Configuration.ConfigurationFileMap" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ExeConfigurationFileMap.ExeConfigFilename">
      <topicdata group="api" />
      <apidata name="ExeConfigFilename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExeConfigFilename" />
      <setter name="set_ExeConfigFilename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ExeConfigurationFileMap.LocalUserConfigFilename">
      <topicdata group="api" />
      <apidata name="LocalUserConfigFilename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LocalUserConfigFilename" />
      <setter name="set_LocalUserConfigFilename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ExeConfigurationFileMap.RoamingUserConfigFilename">
      <topicdata group="api" />
      <apidata name="RoamingUserConfigFilename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoamingUserConfigFilename" />
      <setter name="set_RoamingUserConfigFilename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeConfigurationFileMap" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ExeContext">
      <topicdata group="api" />
      <apidata name="ExeContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ExeContext.ExePath" />
        <element api="P:System.Configuration.ExeContext.UserLevel" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ExeContext">
      <topicdata name="ExeContext" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ExeContext" />
      <apidata name="ExeContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ExeContext">
      <topicdata name="ExeContext" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ExeContext" />
      <apidata name="ExeContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ExeContext.ExePath" />
        <element api="P:System.Configuration.ExeContext.UserLevel" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeContext" />
      </containers>
    </api>
    <api id="P:System.Configuration.ExeContext.ExePath">
      <topicdata group="api" />
      <apidata name="ExePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ExeContext.UserLevel">
      <topicdata group="api" />
      <apidata name="UserLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserLevel" />
      <returns>
        <type api="T:System.Configuration.ConfigurationUserLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ExeContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.GenericEnumConverter">
      <topicdata group="api" />
      <apidata name="GenericEnumConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)" />
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.GenericEnumConverter">
      <topicdata name="GenericEnumConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.GenericEnumConverter" />
      <apidata name="GenericEnumConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.GenericEnumConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.GenericEnumConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.GenericEnumConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.GenericEnumConverter.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="typeEnum">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.GenericEnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.GenericEnumConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.GenericEnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.GenericEnumConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.GenericEnumConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IApplicationSettingsProvider">
      <topicdata group="api" />
      <apidata name="IApplicationSettingsProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
        <type api="T:System.Web.ClientServices.Providers.ClientSettingsProvider" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <element api="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IApplicationSettingsProvider">
      <topicdata name="IApplicationSettingsProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IApplicationSettingsProvider" />
      <apidata name="IApplicationSettingsProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <element api="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IApplicationSettingsProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="GetPreviousVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <topicdata group="api" />
      <apidata name="Upgrade" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IConfigurationSectionHandler">
      <topicdata group="api" />
      <apidata name="IConfigurationSectionHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Diagnostics.DiagnosticsConfigurationHandler" ref="true" />
        <type api="T:System.Configuration.DictionarySectionHandler" ref="true" />
        <type api="T:System.Configuration.IgnoreSectionHandler" ref="true" />
        <type api="T:System.Configuration.NameValueFileSectionHandler" ref="true" />
        <type api="T:System.Configuration.NameValueSectionHandler" ref="true" />
        <type api="T:System.Configuration.SingleTagSectionHandler" ref="true" />
        <type api="T:System.Data.Common.DbProviderConfigurationHandler" ref="true" />
        <type api="T:System.Data.Common.DbProviderFactoriesConfigurationHandler" ref="true" />
        <type api="T:System.Web.Configuration.HttpCapabilitiesSectionHandler" ref="true" />
        <type api="T:System.Web.Configuration.ProtocolsConfigurationHandler" ref="true" />
        <type api="T:System.Web.UI.MobileControls.MobileControlsSectionHandler" ref="true" />
        <type api="T:System.Web.Mobile.MobileDeviceCapabilitiesSectionHandler" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IConfigurationSectionHandler">
      <topicdata name="IConfigurationSectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IConfigurationSectionHandler" />
      <apidata name="IConfigurationSectionHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IConfigurationSectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IConfigurationSystem">
      <topicdata group="api" />
      <apidata name="IConfigurationSystem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)" />
        <element api="M:System.Configuration.IConfigurationSystem.Init" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.IConfigurationSystem">
      <topicdata name="IConfigurationSystem" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IConfigurationSystem" />
      <apidata name="IConfigurationSystem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)" />
        <element api="M:System.Configuration.IConfigurationSystem.Init" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IConfigurationSystem" />
      </containers>
    </api>
    <api id="M:System.Configuration.IConfigurationSystem.GetConfig(System.String)">
      <topicdata group="api" />
      <apidata name="GetConfig" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="configKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IConfigurationSystem" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IConfigurationSystem.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IConfigurationSystem" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IdnElement">
      <topicdata group="api" />
      <apidata name="IdnElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IdnElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.IdnElement.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.IdnElement.Enabled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IdnElement">
      <topicdata name="IdnElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IdnElement" />
      <apidata name="IdnElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IdnElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IdnElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.IdnElement">
      <topicdata name="IdnElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.IdnElement" />
      <apidata name="IdnElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IdnElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.IdnElement.Enabled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IdnElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.IdnElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IdnElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IdnElement.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.UriIdnScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IdnElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enabled</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.UriIdnScope" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.IgnoreSection">
      <topicdata group="api" />
      <apidata name="IgnoreSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IgnoreSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.IgnoreSection.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IgnoreSection">
      <topicdata name="IgnoreSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IgnoreSection" />
      <apidata name="IgnoreSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IgnoreSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.IgnoreSection">
      <topicdata name="IgnoreSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.IgnoreSection" />
      <apidata name="IgnoreSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IgnoreSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.IgnoreSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IgnoreSectionHandler">
      <topicdata group="api" />
      <apidata name="IgnoreSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.IgnoreSectionHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.IgnoreSectionHandler.#ctor" />
        <element api="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IgnoreSectionHandler">
      <topicdata name="IgnoreSectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IgnoreSectionHandler" />
      <apidata name="IgnoreSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.IgnoreSectionHandler.#ctor" />
      <elements>
        <element api="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.IgnoreSectionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IgnoreSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IgnoreSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.InfiniteIntConverter">
      <topicdata group="api" />
      <apidata name="InfiniteIntConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.InfiniteIntConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.InfiniteIntConverter.#ctor" />
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.InfiniteIntConverter">
      <topicdata name="InfiniteIntConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.InfiniteIntConverter" />
      <apidata name="InfiniteIntConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.InfiniteIntConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteIntConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.InfiniteIntConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.InfiniteIntConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteIntConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteIntConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.InfiniteIntConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteIntConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.InfiniteIntConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteIntConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.InfiniteTimeSpanConverter">
      <topicdata group="api" />
      <apidata name="InfiniteTimeSpanConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.InfiniteTimeSpanConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.InfiniteTimeSpanConverter.#ctor" />
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.InfiniteTimeSpanConverter">
      <topicdata name="InfiniteTimeSpanConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.InfiniteTimeSpanConverter" />
      <apidata name="InfiniteTimeSpanConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.InfiniteTimeSpanConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteTimeSpanConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.InfiniteTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.InfiniteTimeSpanConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.InfiniteTimeSpanConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IntegerValidator">
      <topicdata group="api" />
      <apidata name="IntegerValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.IntegerValidator.#ctor">
          <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
          <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
          <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
        </element>
        <element api="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IntegerValidator">
      <topicdata name="IntegerValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IntegerValidator" />
      <apidata name="IntegerValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IntegerValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.IntegerValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.IntegerValidator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)" />
        <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)" />
        <element api="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.IntegerValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.IntegerValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.IntegerValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="resolution">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IntegerValidatorAttribute">
      <topicdata group="api" />
      <apidata name="IntegerValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IntegerValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.IntegerValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.IntegerValidatorAttribute">
      <topicdata name="IntegerValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IntegerValidatorAttribute" />
      <apidata name="IntegerValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IntegerValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.IntegerValidatorAttribute">
      <topicdata name="IntegerValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.IntegerValidatorAttribute" />
      <apidata name="IntegerValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IntegerValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.IntegerValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IntegerValidatorAttribute.ExcludeRange">
      <topicdata group="api" />
      <apidata name="ExcludeRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExcludeRange" />
      <setter name="set_ExcludeRange" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IntegerValidatorAttribute.MaxValue">
      <topicdata group="api" />
      <apidata name="MaxValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxValue" />
      <setter name="set_MaxValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IntegerValidatorAttribute.MinValue">
      <topicdata group="api" />
      <apidata name="MinValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinValue" />
      <setter name="set_MinValue" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IntegerValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IPersistComponentSettings">
      <topicdata group="api" />
      <apidata name="IPersistComponentSettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <element api="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <element api="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
        <element api="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <element api="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IPersistComponentSettings">
      <topicdata name="IPersistComponentSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IPersistComponentSettings" />
      <apidata name="IPersistComponentSettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings" />
        <element api="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings" />
        <element api="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.IPersistComponentSettings">
      <topicdata name="IPersistComponentSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.IPersistComponentSettings" />
      <apidata name="IPersistComponentSettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.IPersistComponentSettings.SaveSettings" />
        <element api="P:System.Configuration.IPersistComponentSettings.SettingsKey" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" />
      </containers>
    </api>
    <api id="M:System.Configuration.IPersistComponentSettings.LoadComponentSettings">
      <topicdata group="api" />
      <apidata name="LoadComponentSettings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IPersistComponentSettings.ResetComponentSettings">
      <topicdata group="api" />
      <apidata name="ResetComponentSettings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.IPersistComponentSettings.SaveComponentSettings">
      <topicdata group="api" />
      <apidata name="SaveComponentSettings" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IPersistComponentSettings.SaveSettings">
      <topicdata group="api" />
      <apidata name="SaveSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SaveSettings" />
      <setter name="set_SaveSettings" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IPersistComponentSettings.SettingsKey">
      <topicdata group="api" />
      <apidata name="SettingsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SettingsKey" />
      <setter name="set_SettingsKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IPersistComponentSettings" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.IriParsingElement">
      <topicdata group="api" />
      <apidata name="IriParsingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IriParsingElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.IriParsingElement.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.IriParsingElement.Enabled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.IriParsingElement">
      <topicdata name="IriParsingElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.IriParsingElement" />
      <apidata name="IriParsingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IriParsingElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IriParsingElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.IriParsingElement">
      <topicdata name="IriParsingElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.IriParsingElement" />
      <apidata name="IriParsingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.IriParsingElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.IriParsingElement.Enabled" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IriParsingElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.IriParsingElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IriParsingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.IriParsingElement.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.IriParsingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enabled</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ISettingsProviderService">
      <topicdata group="api" />
      <apidata name="ISettingsProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ISettingsProviderService">
      <topicdata name="ISettingsProviderService" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ISettingsProviderService" />
      <apidata name="ISettingsProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ISettingsProviderService" />
      </containers>
    </api>
    <api id="M:System.Configuration.ISettingsProviderService.GetSettingsProvider(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="GetSettingsProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ISettingsProviderService" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.KeyValueConfigurationCollection">
      <topicdata group="api" />
      <apidata name="KeyValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.KeyValueConfigurationCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.KeyValueConfigurationCollection.#ctor" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.Add">
          <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)" />
          <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Clear" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
          <element api="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.KeyValueConfigurationCollection.AllKeys" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.KeyValueConfigurationCollection.Properties" />
        <element api="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.KeyValueConfigurationCollection">
      <topicdata name="KeyValueConfigurationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.KeyValueConfigurationCollection" />
      <apidata name="KeyValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.KeyValueConfigurationCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.Add">
          <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)" />
          <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Clear" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
          <element api="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.KeyValueConfigurationCollection">
      <topicdata name="KeyValueConfigurationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.KeyValueConfigurationCollection" />
      <apidata name="KeyValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.KeyValueConfigurationCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.KeyValueConfigurationCollection.AllKeys" />
        <element api="Overload:System.Configuration.KeyValueConfigurationCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.KeyValueConfigurationCollection.Properties" />
        <element api="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.KeyValueConfigurationCollection.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)" />
        <element api="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.KeyValueConfigurationCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.Add(System.Configuration.KeyValueConfigurationElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.KeyValueConfigurationCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyValue">
          <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.KeyValueConfigurationCollection.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationCollection.AllKeys">
      <topicdata group="api" />
      <apidata name="AllKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllKeys" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Configuration.KeyValueConfigurationCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.KeyValueConfigurationCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationCollection.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElement.Properties">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationCollection.ThrowOnDuplicate">
      <topicdata group="api" />
      <apidata name="ThrowOnDuplicate" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ThrowOnDuplicate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.KeyValueConfigurationElement">
      <topicdata group="api" />
      <apidata name="KeyValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)" />
        <element api="M:System.Configuration.KeyValueConfigurationElement.Init" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.KeyValueConfigurationElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Key" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Properties" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Value" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.KeyValueConfigurationElement">
      <topicdata name="KeyValueConfigurationElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.KeyValueConfigurationElement" />
      <apidata name="KeyValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.KeyValueConfigurationElement.Init" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.KeyValueConfigurationElement">
      <topicdata name="KeyValueConfigurationElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.KeyValueConfigurationElement" />
      <apidata name="KeyValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.KeyValueConfigurationElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Key" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Properties" />
        <element api="P:System.Configuration.KeyValueConfigurationElement.Value" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationElement.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.KeyValueConfigurationElement.Init">
      <topicdata group="api" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Init">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationElement.Key">
      <topicdata group="api" />
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>key</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsKey" />
            </enumValue>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElement.Properties">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.KeyValueConfigurationElement.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.KeyValueConfigurationElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>value</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.LocalFileSettingsProvider">
      <topicdata group="api" />
      <apidata name="LocalFileSettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.LocalFileSettingsProvider">
      <topicdata name="LocalFileSettingsProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.LocalFileSettingsProvider" />
      <apidata name="LocalFileSettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <elements>
        <element api="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <element api="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.LocalFileSettingsProvider">
      <topicdata name="LocalFileSettingsProvider" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.LocalFileSettingsProvider" />
      <apidata name="LocalFileSettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.LocalFileSettingsProvider.#ctor" />
      <elements>
        <element api="P:System.Configuration.LocalFileSettingsProvider.ApplicationName" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.LocalFileSettingsProvider.ApplicationName">
      <topicdata group="api" />
      <apidata name="ApplicationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.SettingsProvider.ApplicationName">
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationName" />
      <setter name="set_ApplicationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="GetPreviousVersion" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IApplicationSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
          <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <topicdata group="api" />
      <apidata name="GetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Configuration.IApplicationSettingsProvider.Reset(System.Configuration.SettingsContext)">
          <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <topicdata group="api" />
      <apidata name="SetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <topicdata group="api" />
      <apidata name="Upgrade" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Configuration.IApplicationSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
          <type api="T:System.Configuration.IApplicationSettingsProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.LongValidator">
      <topicdata group="api" />
      <apidata name="LongValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.LongValidator.#ctor">
          <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
          <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
          <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
        </element>
        <element api="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.LongValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.LongValidator">
      <topicdata name="LongValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.LongValidator" />
      <apidata name="LongValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.LongValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.LongValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.LongValidator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)" />
        <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)" />
        <element api="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.LongValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.LongValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidator.#ctor(System.Int64,System.Int64,System.Boolean,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.LongValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="resolution">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.LongValidatorAttribute">
      <topicdata group="api" />
      <apidata name="LongValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.LongValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.LongValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.LongValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.LongValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.LongValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.LongValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.LongValidatorAttribute">
      <topicdata name="LongValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.LongValidatorAttribute" />
      <apidata name="LongValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.LongValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.LongValidatorAttribute">
      <topicdata name="LongValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.LongValidatorAttribute" />
      <apidata name="LongValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.LongValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.LongValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.LongValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.LongValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.LongValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.LongValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.LongValidatorAttribute.ExcludeRange">
      <topicdata group="api" />
      <apidata name="ExcludeRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExcludeRange" />
      <setter name="set_ExcludeRange" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.LongValidatorAttribute.MaxValue">
      <topicdata group="api" />
      <apidata name="MaxValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxValue" />
      <setter name="set_MaxValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.LongValidatorAttribute.MinValue">
      <topicdata group="api" />
      <apidata name="MinValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinValue" />
      <setter name="set_MinValue" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.LongValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.NameValueConfigurationCollection">
      <topicdata group="api" />
      <apidata name="NameValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NameValueConfigurationCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.#ctor" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.Clear" />
        <element api="Overload:System.Configuration.NameValueConfigurationCollection.Remove">
          <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)" />
          <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.NameValueConfigurationCollection.AllKeys" />
        <element api="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.NameValueConfigurationCollection">
      <topicdata name="NameValueConfigurationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.NameValueConfigurationCollection" />
      <apidata name="NameValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NameValueConfigurationCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.Clear" />
        <element api="Overload:System.Configuration.NameValueConfigurationCollection.Remove">
          <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)" />
          <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.NameValueConfigurationCollection">
      <topicdata name="NameValueConfigurationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.NameValueConfigurationCollection" />
      <apidata name="NameValueConfigurationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NameValueConfigurationCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.NameValueConfigurationCollection.AllKeys" />
        <element api="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.NameValueConfigurationCollection.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)" />
        <element api="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationCollection.Add(System.Configuration.NameValueConfigurationElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nameValue">
          <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.NameValueConfigurationCollection.AllKeys">
      <topicdata group="api" />
      <apidata name="AllKeys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllKeys" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.NameValueConfigurationCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationCollection.Remove(System.Configuration.NameValueConfigurationElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.NameValueConfigurationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nameValue">
          <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.NameValueConfigurationCollection.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.NameValueConfigurationElement">
      <topicdata group="api" />
      <apidata name="NameValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.NameValueConfigurationElement.Name" />
        <element api="P:System.Configuration.NameValueConfigurationElement.Value" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.NameValueConfigurationElement">
      <topicdata name="NameValueConfigurationElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.NameValueConfigurationElement" />
      <apidata name="NameValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.NameValueConfigurationElement">
      <topicdata name="NameValueConfigurationElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.NameValueConfigurationElement" />
      <apidata name="NameValueConfigurationElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.NameValueConfigurationElement.Name" />
        <element api="P:System.Configuration.NameValueConfigurationElement.Value" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueConfigurationElement.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.NameValueConfigurationElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.NameValueConfigurationElement.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueConfigurationElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>value</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.NameValueFileSectionHandler">
      <topicdata group="api" />
      <apidata name="NameValueFileSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.NameValueFileSectionHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.NameValueFileSectionHandler.#ctor" />
        <element api="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.NameValueFileSectionHandler">
      <topicdata name="NameValueFileSectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.NameValueFileSectionHandler" />
      <apidata name="NameValueFileSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.NameValueFileSectionHandler.#ctor" />
      <elements>
        <element api="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueFileSectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueFileSectionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueFileSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueFileSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueFileSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.NameValueSectionHandler">
      <topicdata group="api" />
      <apidata name="NameValueSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.NameValueSectionHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.NameValueSectionHandler.#ctor" />
        <element api="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.NameValueSectionHandler.KeyAttributeName" />
        <element api="P:System.Configuration.NameValueSectionHandler.ValueAttributeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.NameValueSectionHandler">
      <topicdata name="NameValueSectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.NameValueSectionHandler" />
      <apidata name="NameValueSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.NameValueSectionHandler.#ctor" />
      <elements>
        <element api="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.NameValueSectionHandler">
      <topicdata name="NameValueSectionHandler" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.NameValueSectionHandler" />
      <apidata name="NameValueSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.NameValueSectionHandler.#ctor" />
      <elements>
        <element api="P:System.Configuration.NameValueSectionHandler.KeyAttributeName" />
        <element api="P:System.Configuration.NameValueSectionHandler.ValueAttributeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueSectionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.NameValueSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.NameValueSectionHandler.KeyAttributeName">
      <topicdata group="api" />
      <apidata name="KeyAttributeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyAttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.NameValueSectionHandler.ValueAttributeName">
      <topicdata group="api" />
      <apidata name="ValueAttributeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ValueAttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NameValueSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <topicdata group="api" />
      <apidata name="NoSettingsVersionUpgradeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <topicdata name="NoSettingsVersionUpgradeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      <apidata name="NoSettingsVersionUpgradeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.NoSettingsVersionUpgradeAttribute">
      <topicdata name="NoSettingsVersionUpgradeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      <apidata name="NoSettingsVersionUpgradeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NoSettingsVersionUpgradeAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.NoSettingsVersionUpgradeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.NoSettingsVersionUpgradeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.OverrideMode">
      <topicdata group="api" />
      <apidata name="OverrideMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.OverrideMode.Inherit" />
        <element api="F:System.Configuration.OverrideMode.Allow" />
        <element api="F:System.Configuration.OverrideMode.Deny" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.OverrideMode.Allow">
      <topicdata group="api" notopic="" />
      <apidata name="Allow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.OverrideMode.Deny">
      <topicdata group="api" notopic="" />
      <apidata name="Deny" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.OverrideMode.Inherit">
      <topicdata group="api" notopic="" />
      <apidata name="Inherit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.PositiveTimeSpanValidator">
      <topicdata group="api" />
      <apidata name="PositiveTimeSpanValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.PositiveTimeSpanValidator.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.PositiveTimeSpanValidator.#ctor" />
        <element api="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.PositiveTimeSpanValidator">
      <topicdata name="PositiveTimeSpanValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.PositiveTimeSpanValidator" />
      <apidata name="PositiveTimeSpanValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.PositiveTimeSpanValidator.#ctor" />
      <elements>
        <element api="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidator" />
      </containers>
    </api>
    <api id="M:System.Configuration.PositiveTimeSpanValidator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.PositiveTimeSpanValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.PositiveTimeSpanValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <topicdata group="api" />
      <apidata name="PositiveTimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <topicdata name="PositiveTimeSpanValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />
      <apidata name="PositiveTimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.PositiveTimeSpanValidatorAttribute">
      <topicdata name="PositiveTimeSpanValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />
      <apidata name="PositiveTimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.PositiveTimeSpanValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PositiveTimeSpanValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PositiveTimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.PropertyInformation">
      <topicdata group="api" />
      <apidata name="PropertyInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.PropertyInformation.Converter" />
        <element api="P:System.Configuration.PropertyInformation.DefaultValue" />
        <element api="P:System.Configuration.PropertyInformation.Description" />
        <element api="P:System.Configuration.PropertyInformation.IsKey" />
        <element api="P:System.Configuration.PropertyInformation.IsLocked" />
        <element api="P:System.Configuration.PropertyInformation.IsModified" />
        <element api="P:System.Configuration.PropertyInformation.IsRequired" />
        <element api="P:System.Configuration.PropertyInformation.LineNumber" />
        <element api="P:System.Configuration.PropertyInformation.Name" />
        <element api="P:System.Configuration.PropertyInformation.Source" />
        <element api="P:System.Configuration.PropertyInformation.Type" />
        <element api="P:System.Configuration.PropertyInformation.Validator" />
        <element api="P:System.Configuration.PropertyInformation.Value" />
        <element api="P:System.Configuration.PropertyInformation.ValueOrigin" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.PropertyInformation">
      <topicdata name="PropertyInformation" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.PropertyInformation" />
      <apidata name="PropertyInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.PropertyInformation">
      <topicdata name="PropertyInformation" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.PropertyInformation" />
      <apidata name="PropertyInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.PropertyInformation.Converter" />
        <element api="P:System.Configuration.PropertyInformation.DefaultValue" />
        <element api="P:System.Configuration.PropertyInformation.Description" />
        <element api="P:System.Configuration.PropertyInformation.IsKey" />
        <element api="P:System.Configuration.PropertyInformation.IsLocked" />
        <element api="P:System.Configuration.PropertyInformation.IsModified" />
        <element api="P:System.Configuration.PropertyInformation.IsRequired" />
        <element api="P:System.Configuration.PropertyInformation.LineNumber" />
        <element api="P:System.Configuration.PropertyInformation.Name" />
        <element api="P:System.Configuration.PropertyInformation.Source" />
        <element api="P:System.Configuration.PropertyInformation.Type" />
        <element api="P:System.Configuration.PropertyInformation.Validator" />
        <element api="P:System.Configuration.PropertyInformation.Value" />
        <element api="P:System.Configuration.PropertyInformation.ValueOrigin" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Converter">
      <topicdata group="api" />
      <apidata name="Converter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Converter" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.IsKey">
      <topicdata group="api" />
      <apidata name="IsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsKey" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.IsLocked">
      <topicdata group="api" />
      <apidata name="IsLocked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLocked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.IsModified">
      <topicdata group="api" />
      <apidata name="IsModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsModified" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.IsRequired">
      <topicdata group="api" />
      <apidata name="IsRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.LineNumber">
      <topicdata group="api" />
      <apidata name="LineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Validator">
      <topicdata group="api" />
      <apidata name="Validator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Validator" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformation.ValueOrigin">
      <topicdata group="api" />
      <apidata name="ValueOrigin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValueOrigin" />
      <returns>
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.PropertyInformationCollection">
      <topicdata group="api" />
      <apidata name="PropertyInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)" />
        <element api="M:System.Configuration.PropertyInformationCollection.GetEnumerator" />
        <element api="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.PropertyInformationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.PropertyInformationCollection">
      <topicdata name="PropertyInformationCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.PropertyInformationCollection" />
      <apidata name="PropertyInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)" />
        <element api="M:System.Configuration.PropertyInformationCollection.GetEnumerator" />
        <element api="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.PropertyInformationCollection">
      <topicdata name="PropertyInformationCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.PropertyInformationCollection" />
      <apidata name="PropertyInformationCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Count" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.Keys" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Configuration.PropertyInformationCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.PropertyInformationCollection.CopyTo(System.Configuration.PropertyInformation[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Configuration.PropertyInformation" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.PropertyInformationCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.PropertyInformationCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Specialized.NameObjectCollectionBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Collections.Specialized.NameObjectCollectionBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.PropertyInformationCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.PropertyInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyInformationCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.PropertyValueOrigin">
      <topicdata group="api" />
      <apidata name="PropertyValueOrigin" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.PropertyValueOrigin.Default" />
        <element api="F:System.Configuration.PropertyValueOrigin.Inherited" />
        <element api="F:System.Configuration.PropertyValueOrigin.SetHere" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.PropertyValueOrigin.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.PropertyValueOrigin.Inherited">
      <topicdata group="api" notopic="" />
      <apidata name="Inherited" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.PropertyValueOrigin.SetHere">
      <topicdata group="api" notopic="" />
      <apidata name="SetHere" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.PropertyValueOrigin" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.ProtectedConfiguration">
      <topicdata group="api" />
      <apidata name="ProtectedConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName" />
        <element api="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName" />
        <element api="F:System.Configuration.ProtectedConfiguration.RsaProviderName" />
        <element api="P:System.Configuration.ProtectedConfiguration.DefaultProvider" />
        <element api="P:System.Configuration.ProtectedConfiguration.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProtectedConfiguration">
      <topicdata name="ProtectedConfiguration" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProtectedConfiguration" />
      <apidata name="ProtectedConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.ProtectedConfiguration.DefaultProvider" />
        <element api="P:System.Configuration.ProtectedConfiguration.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" />
      </containers>
    </api>
    <api id="Fields.T:System.Configuration.ProtectedConfiguration">
      <topicdata name="ProtectedConfiguration" group="list" subgroup="Fields" typeTopicId="T:System.Configuration.ProtectedConfiguration" />
      <apidata name="ProtectedConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName" />
        <element api="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName" />
        <element api="F:System.Configuration.ProtectedConfiguration.RsaProviderName" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" />
      </containers>
    </api>
    <api id="F:System.Configuration.ProtectedConfiguration.DataProtectionProviderName">
      <topicdata group="api" />
      <apidata name="DataProtectionProviderName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>DataProtectionConfigurationProvider</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedConfiguration.DefaultProvider">
      <topicdata group="api" />
      <apidata name="DefaultProvider" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultProvider" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.Configuration.ProtectedConfiguration.ProtectedDataSectionName">
      <topicdata group="api" />
      <apidata name="ProtectedDataSectionName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>configProtectedData</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedConfiguration.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" ref="true" />
      </containers>
    </api>
    <api id="F:System.Configuration.ProtectedConfiguration.RsaProviderName">
      <topicdata group="api" />
      <apidata name="RsaProviderName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>RsaProtectedConfigurationProvider</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ProtectedConfigurationProvider">
      <topicdata group="api" />
      <apidata name="ProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.DpapiProtectedConfigurationProvider" ref="true" />
          <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ProtectedConfigurationProvider.#ctor" />
        <element api="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ProtectedConfigurationProvider">
      <topicdata name="ProtectedConfigurationProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProtectedConfigurationProvider" />
      <apidata name="ProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProtectedConfigurationProvider">
      <topicdata name="ProtectedConfigurationProvider" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProtectedConfigurationProvider" />
      <apidata name="ProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="encryptedNode">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ProtectedConfigurationProviderCollection">
      <topicdata group="api" />
      <apidata name="ProtectedConfigurationProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor" />
        <element api="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)" />
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ProtectedConfigurationProviderCollection">
      <topicdata name="ProtectedConfigurationProviderCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProtectedConfigurationProviderCollection" />
      <apidata name="ProtectedConfigurationProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProtectedConfigurationProviderCollection">
      <topicdata name="ProtectedConfigurationProviderCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProtectedConfigurationProviderCollection" />
      <apidata name="ProtectedConfigurationProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)" />
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationProviderCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedConfigurationProviderCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ProtectedConfigurationSection">
      <topicdata group="api" />
      <apidata name="ProtectedConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ProtectedConfigurationSection.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider" />
        <element api="P:System.Configuration.ProtectedConfigurationSection.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ProtectedConfigurationSection">
      <topicdata name="ProtectedConfigurationSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProtectedConfigurationSection" />
      <apidata name="ProtectedConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProtectedConfigurationSection">
      <topicdata name="ProtectedConfigurationSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProtectedConfigurationSection" />
      <apidata name="ProtectedConfigurationSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProtectedConfigurationSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider" />
        <element api="P:System.Configuration.ProtectedConfigurationSection.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedConfigurationSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedConfigurationSection.DefaultProvider">
      <topicdata group="api" />
      <apidata name="DefaultProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultProvider" />
      <setter name="set_DefaultProvider" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>defaultProvider</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>RsaProtectedConfigurationProvider</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ProtectedConfigurationSection.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedConfigurationSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>providers</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ProtectedProviderSettings">
      <topicdata group="api" />
      <apidata name="ProtectedProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedProviderSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ProtectedProviderSettings.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ProtectedProviderSettings.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ProtectedProviderSettings.Properties" />
        <element api="P:System.Configuration.ProtectedProviderSettings.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ProtectedProviderSettings">
      <topicdata name="ProtectedProviderSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProtectedProviderSettings" />
      <apidata name="ProtectedProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedProviderSettings.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedProviderSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProtectedProviderSettings">
      <topicdata name="ProtectedProviderSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProtectedProviderSettings" />
      <apidata name="ProtectedProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.ProtectedProviderSettings.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.Configuration.ProtectedProviderSettings.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ProtectedProviderSettings.Properties" />
        <element api="P:System.Configuration.ProtectedProviderSettings.Providers" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedProviderSettings" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProtectedProviderSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedProviderSettings.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElement.Properties">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProtectedProviderSettings.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProtectedProviderSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
          <assignment name="IsDefaultCollection">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsDefaultCollection" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ProviderSettings">
      <topicdata group="api" />
      <apidata name="ProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettings.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.Configuration.ProviderSettings.#ctor">
          <element api="M:System.Configuration.ProviderSettings.#ctor" />
          <element api="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ProviderSettings.Name" />
        <element api="P:System.Configuration.ProviderSettings.Parameters" />
        <element api="P:System.Configuration.ProviderSettings.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.ProviderSettings">
      <topicdata name="ProviderSettings" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProviderSettings" />
      <apidata name="ProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettings.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProviderSettings">
      <topicdata name="ProviderSettings" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProviderSettings" />
      <apidata name="ProviderSettings" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettings.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ProviderSettings.Name" />
        <element api="P:System.Configuration.ProviderSettings.Parameters" />
        <element api="P:System.Configuration.ProviderSettings.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ProviderSettings.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.ProviderSettings.#ctor" />
        <element api="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettings.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ProviderSettings.#ctor" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettings.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.ProviderSettings.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProviderSettings.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.ProviderSettings.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProviderSettings.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>type</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.ProviderSettingsCollection">
      <topicdata group="api" />
      <apidata name="ProviderSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettingsCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ProviderSettingsCollection.#ctor" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Clear" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="Overload:System.Configuration.ProviderSettingsCollection.Item">
          <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Configuration.ProviderSettings" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.ProviderSettingsCollection">
      <topicdata name="ProviderSettingsCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.ProviderSettingsCollection" />
      <apidata name="ProviderSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettingsCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Clear" />
        <element api="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.ProviderSettingsCollection">
      <topicdata name="ProviderSettingsCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.ProviderSettingsCollection" />
      <apidata name="ProviderSettingsCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.ProviderSettingsCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="Overload:System.Configuration.ProviderSettingsCollection.Item">
          <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.ProviderSettingsCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)" />
        <element api="P:System.Configuration.ProviderSettingsCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettingsCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettingsCollection.Add(System.Configuration.ProviderSettings)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Configuration.ProviderSettings" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettingsCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProviderSettingsCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ProviderSettingsCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.ProviderSettingsCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.ProviderSettingsCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.ProviderSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.ProviderSettingsCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.RegexStringValidator">
      <topicdata group="api" />
      <apidata name="RegexStringValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.RegexStringValidator.#ctor(System.String)" />
        <element api="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.RegexStringValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.RegexStringValidator">
      <topicdata name="RegexStringValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.RegexStringValidator" />
      <apidata name="RegexStringValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.RegexStringValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidator" />
      </containers>
    </api>
    <api id="M:System.Configuration.RegexStringValidator.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RegexStringValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RegexStringValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.RegexStringValidatorAttribute">
      <topicdata group="api" />
      <apidata name="RegexStringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.RegexStringValidatorAttribute.Regex" />
        <element api="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.RegexStringValidatorAttribute">
      <topicdata name="RegexStringValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.RegexStringValidatorAttribute" />
      <apidata name="RegexStringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.RegexStringValidatorAttribute">
      <topicdata name="RegexStringValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.RegexStringValidatorAttribute" />
      <apidata name="RegexStringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.RegexStringValidatorAttribute.Regex" />
        <element api="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RegexStringValidatorAttribute.Regex">
      <topicdata group="api" />
      <apidata name="Regex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Regex" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RegexStringValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RegexStringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.RsaProtectedConfigurationProvider">
      <topicdata group="api" />
      <apidata name="RsaProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.RsaProtectedConfigurationProvider">
      <topicdata name="RsaProtectedConfigurationProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.RsaProtectedConfigurationProvider" />
      <apidata name="RsaProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor" />
      <elements>
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)" />
        <element api="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.RsaProtectedConfigurationProvider">
      <topicdata name="RsaProtectedConfigurationProvider" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.RsaProtectedConfigurationProvider" />
      <apidata name="RsaProtectedConfigurationProvider" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor" />
      <elements>
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer" />
        <element api="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.AddKey(System.Int32,System.Boolean)">
      <topicdata group="api" />
      <apidata name="AddKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="exportable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.CspProviderName">
      <topicdata group="api" />
      <apidata name="CspProviderName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CspProviderName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)">
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="encryptedNode">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.DeleteKey">
      <topicdata group="api" />
      <apidata name="DeleteKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)">
          <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.ExportKey(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ExportKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="includePrivateParameters">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.ImportKey(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="ImportKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xmlFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exportable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.RsaProtectedConfigurationProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="configurationValues">
          <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.KeyContainerName">
      <topicdata group="api" />
      <apidata name="KeyContainerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_KeyContainerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.RsaPublicKey">
      <topicdata group="api" />
      <apidata name="RsaPublicKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RsaPublicKey" />
      <returns>
        <type api="T:System.Security.Cryptography.RSAParameters" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.UseFIPS">
      <topicdata group="api" />
      <apidata name="UseFIPS" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseFIPS" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.UseMachineContainer">
      <topicdata group="api" />
      <apidata name="UseMachineContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseMachineContainer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.RsaProtectedConfigurationProvider.UseOAEP">
      <topicdata group="api" />
      <apidata name="UseOAEP" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseOAEP" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.RsaProtectedConfigurationProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SchemeSettingElement">
      <topicdata group="api" />
      <apidata name="SchemeSettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.SchemeSettingElement.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions" />
        <element api="P:System.Configuration.SchemeSettingElement.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SchemeSettingElement">
      <topicdata name="SchemeSettingElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SchemeSettingElement" />
      <apidata name="SchemeSettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SchemeSettingElement">
      <topicdata name="SchemeSettingElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SchemeSettingElement" />
      <apidata name="SchemeSettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions" />
        <element api="P:System.Configuration.SchemeSettingElement.Name" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.SchemeSettingElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SchemeSettingElement.GenericUriParserOptions">
      <topicdata group="api" />
      <apidata name="GenericUriParserOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericUriParserOptions" />
      <returns>
        <type api="T:System.GenericUriParserOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>genericUriParserOptions</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.SchemeSettingElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.SchemeSettingElementCollection">
      <topicdata group="api" />
      <apidata name="SchemeSettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SchemeSettingElementCollection.#ctor" />
        <element api="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.SchemeSettingElementCollection.CollectionType" />
        <element api="Overload:System.Configuration.SchemeSettingElementCollection.Item">
          <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
            </typeValue>
          </argument>
          <assignment name="CollectionType">
            <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
            <enumValue>
              <field name="AddRemoveClearMap" />
            </enumValue>
          </assignment>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>add</value>
          </assignment>
          <assignment name="ClearItemsName">
            <type api="T:System.String" ref="true" />
            <value>clear</value>
          </assignment>
          <assignment name="RemoveItemName">
            <type api="T:System.String" ref="true" />
            <value>remove</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SchemeSettingElementCollection">
      <topicdata name="SchemeSettingElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SchemeSettingElementCollection" />
      <apidata name="SchemeSettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SchemeSettingElementCollection">
      <topicdata name="SchemeSettingElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SchemeSettingElementCollection" />
      <apidata name="SchemeSettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SchemeSettingElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.SchemeSettingElementCollection.CollectionType" />
        <element api="Overload:System.Configuration.SchemeSettingElementCollection.Item">
          <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)" />
          <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SchemeSettingElementCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)" />
        <element api="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SchemeSettingElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SchemeSettingElementCollection.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElementCollection.CollectionType">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CollectionType" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SchemeSettingElementCollection.IndexOf(System.Configuration.SchemeSettingElement)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SchemeSettingElementCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.SchemeSettingElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SchemeSettingElementCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Configuration.SchemeSettingElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SchemeSettingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SectionInformation">
      <topicdata group="api" />
      <apidata name="SectionInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.SectionInformation.ForceDeclaration">
          <element api="M:System.Configuration.SectionInformation.ForceDeclaration" />
          <element api="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.SectionInformation.GetParentSection" />
        <element api="M:System.Configuration.SectionInformation.GetRawXml" />
        <element api="M:System.Configuration.SectionInformation.ProtectSection(System.String)" />
        <element api="M:System.Configuration.SectionInformation.RevertToParent" />
        <element api="M:System.Configuration.SectionInformation.SetRawXml(System.String)" />
        <element api="M:System.Configuration.SectionInformation.UnprotectSection" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SectionInformation.AllowDefinition" />
        <element api="P:System.Configuration.SectionInformation.AllowExeDefinition" />
        <element api="P:System.Configuration.SectionInformation.AllowLocation" />
        <element api="P:System.Configuration.SectionInformation.AllowOverride" />
        <element api="P:System.Configuration.SectionInformation.ConfigSource" />
        <element api="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
        <element api="P:System.Configuration.SectionInformation.ForceSave" />
        <element api="P:System.Configuration.SectionInformation.InheritInChildApplications" />
        <element api="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
        <element api="P:System.Configuration.SectionInformation.IsDeclared" />
        <element api="P:System.Configuration.SectionInformation.IsLocked" />
        <element api="P:System.Configuration.SectionInformation.IsProtected" />
        <element api="P:System.Configuration.SectionInformation.Name" />
        <element api="P:System.Configuration.SectionInformation.OverrideMode" />
        <element api="P:System.Configuration.SectionInformation.OverrideModeDefault" />
        <element api="P:System.Configuration.SectionInformation.OverrideModeEffective" />
        <element api="P:System.Configuration.SectionInformation.ProtectionProvider" />
        <element api="P:System.Configuration.SectionInformation.RequirePermission" />
        <element api="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
        <element api="P:System.Configuration.SectionInformation.SectionName" />
        <element api="P:System.Configuration.SectionInformation.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SectionInformation">
      <topicdata name="SectionInformation" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SectionInformation" />
      <apidata name="SectionInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Configuration.SectionInformation.ForceDeclaration">
          <element api="M:System.Configuration.SectionInformation.ForceDeclaration" />
          <element api="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.SectionInformation.GetParentSection" />
        <element api="M:System.Configuration.SectionInformation.GetRawXml" />
        <element api="M:System.Configuration.SectionInformation.ProtectSection(System.String)" />
        <element api="M:System.Configuration.SectionInformation.RevertToParent" />
        <element api="M:System.Configuration.SectionInformation.SetRawXml(System.String)" />
        <element api="M:System.Configuration.SectionInformation.UnprotectSection" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SectionInformation">
      <topicdata name="SectionInformation" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SectionInformation" />
      <apidata name="SectionInformation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.SectionInformation.AllowDefinition" />
        <element api="P:System.Configuration.SectionInformation.AllowExeDefinition" />
        <element api="P:System.Configuration.SectionInformation.AllowLocation" />
        <element api="P:System.Configuration.SectionInformation.AllowOverride" />
        <element api="P:System.Configuration.SectionInformation.ConfigSource" />
        <element api="P:System.Configuration.SectionInformation.ConfigurationBuilder" />
        <element api="P:System.Configuration.SectionInformation.ForceSave" />
        <element api="P:System.Configuration.SectionInformation.InheritInChildApplications" />
        <element api="P:System.Configuration.SectionInformation.IsDeclarationRequired" />
        <element api="P:System.Configuration.SectionInformation.IsDeclared" />
        <element api="P:System.Configuration.SectionInformation.IsLocked" />
        <element api="P:System.Configuration.SectionInformation.IsProtected" />
        <element api="P:System.Configuration.SectionInformation.Name" />
        <element api="P:System.Configuration.SectionInformation.OverrideMode" />
        <element api="P:System.Configuration.SectionInformation.OverrideModeDefault" />
        <element api="P:System.Configuration.SectionInformation.OverrideModeEffective" />
        <element api="P:System.Configuration.SectionInformation.ProtectionProvider" />
        <element api="P:System.Configuration.SectionInformation.RequirePermission" />
        <element api="P:System.Configuration.SectionInformation.RestartOnExternalChanges" />
        <element api="P:System.Configuration.SectionInformation.SectionName" />
        <element api="P:System.Configuration.SectionInformation.Type" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SectionInformation.ForceDeclaration">
      <topicdata name="ForceDeclaration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Configuration.SectionInformation.ForceDeclaration" />
        <element api="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.AllowDefinition">
      <topicdata group="api" />
      <apidata name="AllowDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowDefinition" />
      <setter name="set_AllowDefinition" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowDefinition" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.AllowExeDefinition">
      <topicdata group="api" />
      <apidata name="AllowExeDefinition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowExeDefinition" />
      <setter name="set_AllowExeDefinition" />
      <returns>
        <type api="T:System.Configuration.ConfigurationAllowExeDefinition" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.AllowLocation">
      <topicdata group="api" />
      <apidata name="AllowLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowLocation" />
      <setter name="set_AllowLocation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.AllowOverride">
      <topicdata group="api" />
      <apidata name="AllowOverride" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowOverride" />
      <setter name="set_AllowOverride" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.ConfigSource">
      <topicdata group="api" />
      <apidata name="ConfigSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConfigSource" />
      <setter name="set_ConfigSource" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.ConfigurationBuilder">
      <topicdata group="api" />
      <apidata name="ConfigurationBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfigurationBuilder" />
      <returns>
        <type api="T:System.Configuration.ConfigurationBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.ForceDeclaration">
      <topicdata group="api" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.SectionInformation.ForceDeclaration" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.ForceDeclaration(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ForceDeclaration" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.SectionInformation.ForceDeclaration" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="force">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.ForceSave">
      <topicdata group="api" />
      <apidata name="ForceSave" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForceSave" />
      <setter name="set_ForceSave" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.GetParentSection">
      <topicdata group="api" />
      <apidata name="GetParentSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Configuration.ConfigurationSection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.GetRawXml">
      <topicdata group="api" />
      <apidata name="GetRawXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.InheritInChildApplications">
      <topicdata group="api" />
      <apidata name="InheritInChildApplications" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InheritInChildApplications" />
      <setter name="set_InheritInChildApplications" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.IsDeclarationRequired">
      <topicdata group="api" />
      <apidata name="IsDeclarationRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeclarationRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.IsDeclared">
      <topicdata group="api" />
      <apidata name="IsDeclared" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeclared" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.IsLocked">
      <topicdata group="api" />
      <apidata name="IsLocked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLocked" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.IsProtected">
      <topicdata group="api" />
      <apidata name="IsProtected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsProtected" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.OverrideMode">
      <topicdata group="api" />
      <apidata name="OverrideMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OverrideMode" />
      <setter name="set_OverrideMode" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.OverrideModeDefault">
      <topicdata group="api" />
      <apidata name="OverrideModeDefault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OverrideModeDefault" />
      <setter name="set_OverrideModeDefault" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.OverrideModeEffective">
      <topicdata group="api" />
      <apidata name="OverrideModeEffective" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OverrideModeEffective" />
      <returns>
        <type api="T:System.Configuration.OverrideMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.ProtectionProvider">
      <topicdata group="api" />
      <apidata name="ProtectionProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtectionProvider" />
      <returns>
        <type api="T:System.Configuration.ProtectedConfigurationProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.ProtectSection(System.String)">
      <topicdata group="api" />
      <apidata name="ProtectSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="protectionProvider">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.RequirePermission">
      <topicdata group="api" />
      <apidata name="RequirePermission" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequirePermission" />
      <setter name="set_RequirePermission" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.RestartOnExternalChanges">
      <topicdata group="api" />
      <apidata name="RestartOnExternalChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RestartOnExternalChanges" />
      <setter name="set_RestartOnExternalChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.RevertToParent">
      <topicdata group="api" />
      <apidata name="RevertToParent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.SectionName">
      <topicdata group="api" />
      <apidata name="SectionName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SectionName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.SetRawXml(System.String)">
      <topicdata group="api" />
      <apidata name="SetRawXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rawXml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SectionInformation.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SectionInformation.UnprotectSection">
      <topicdata group="api" />
      <apidata name="UnprotectSection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SectionInformation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingAttribute">
      <topicdata group="api" />
      <apidata name="SettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.ApplicationScopedSettingAttribute" ref="true" />
          <type api="T:System.Configuration.UserScopedSettingAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingAttribute.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingAttribute">
      <topicdata name="SettingAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingAttribute" />
      <apidata name="SettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingAttribute">
      <topicdata name="SettingAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingAttribute" />
      <apidata name="SettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingChangingEventArgs">
      <topicdata group="api" />
      <apidata name="SettingChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.Configuration.SettingChangingEventArgs.NewValue" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingClass" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingKey" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingChangingEventArgs">
      <topicdata name="SettingChangingEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingChangingEventArgs" />
      <apidata name="SettingChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingChangingEventArgs">
      <topicdata name="SettingChangingEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingChangingEventArgs" />
      <apidata name="SettingChangingEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <element api="P:System.Configuration.SettingChangingEventArgs.NewValue" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingClass" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingKey" />
        <element api="P:System.Configuration.SettingChangingEventArgs.SettingName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingChangingEventArgs.#ctor(System.String,System.String,System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="settingClass">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="settingKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancel">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingChangingEventArgs.NewValue">
      <topicdata group="api" />
      <apidata name="NewValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NewValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingChangingEventArgs.SettingClass">
      <topicdata group="api" />
      <apidata name="SettingClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SettingClass" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingChangingEventArgs.SettingKey">
      <topicdata group="api" />
      <apidata name="SettingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SettingKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingChangingEventArgs.SettingName">
      <topicdata group="api" />
      <apidata name="SettingName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SettingName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingChangingEventHandler">
      <topicdata group="api" />
      <apidata name="SettingChangingEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Configuration.SettingChangingEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingElement">
      <topicdata group="api" />
      <apidata name="SettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.Configuration.SettingElement.#ctor">
          <element api="M:System.Configuration.SettingElement.#ctor" />
          <element api="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)" />
        </element>
        <element api="M:System.Configuration.SettingElement.Equals(System.Object)" />
        <element api="M:System.Configuration.SettingElement.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SettingElement.Name" />
        <element api="P:System.Configuration.SettingElement.SerializeAs" />
        <element api="P:System.Configuration.SettingElement.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingElement">
      <topicdata name="SettingElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingElement" />
      <apidata name="SettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.SettingElement.Equals(System.Object)" />
        <element api="M:System.Configuration.SettingElement.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingElement">
      <topicdata name="SettingElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingElement" />
      <apidata name="SettingElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SettingElement.Name" />
        <element api="P:System.Configuration.SettingElement.SerializeAs" />
        <element api="P:System.Configuration.SettingElement.Value" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingElement.#ctor" />
        <element api="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingElement.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElement.#ctor(System.String,System.Configuration.SettingsSerializeAs)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serializeAs">
          <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElement.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="settings">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElement.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.GetHashCode">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.SettingElement.SerializeAs">
      <topicdata group="api" />
      <apidata name="SerializeAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializeAs" />
      <setter name="set_SerializeAs" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>serializeAs</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
            <enumValue>
              <field name="String" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.SettingElement.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Configuration.SettingValueElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>value</value>
          </argument>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.SettingElementCollection">
      <topicdata group="api" />
      <apidata name="SettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingElementCollection.#ctor" />
        <element api="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)" />
        <element api="M:System.Configuration.SettingElementCollection.Clear" />
        <element api="M:System.Configuration.SettingElementCollection.Get(System.String)" />
        <element api="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.SettingElementCollection.CollectionType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingElementCollection">
      <topicdata name="SettingElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingElementCollection" />
      <apidata name="SettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)" />
        <element api="M:System.Configuration.SettingElementCollection.Clear" />
        <element api="M:System.Configuration.SettingElementCollection.Get(System.String)" />
        <element api="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingElementCollection">
      <topicdata name="SettingElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingElementCollection" />
      <apidata name="SettingElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.SettingElementCollection.CollectionType" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElementCollection.Add(System.Configuration.SettingElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.SettingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElementCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingElementCollection.CollectionType">
      <topicdata group="api" />
      <apidata name="CollectionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationElementCollection.CollectionType">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CollectionType" />
      <returns>
        <type api="T:System.Configuration.ConfigurationElementCollectionType" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElementCollection.Get(System.String)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingElementCollection.Remove(System.Configuration.SettingElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.SettingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsAttributeDictionary">
      <topicdata group="api" />
      <apidata name="SettingsAttributeDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsAttributeDictionary.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Clone" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="Overload:System.Configuration.SettingsAttributeDictionary.#ctor">
          <element api="M:System.Configuration.SettingsAttributeDictionary.#ctor" />
          <element api="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsAttributeDictionary">
      <topicdata name="SettingsAttributeDictionary" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsAttributeDictionary" />
      <apidata name="SettingsAttributeDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsAttributeDictionary.#ctor" />
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Clone" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsAttributeDictionary" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsAttributeDictionary">
      <topicdata name="SettingsAttributeDictionary" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsAttributeDictionary" />
      <apidata name="SettingsAttributeDictionary" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsAttributeDictionary.#ctor" />
      <elements>
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsAttributeDictionary" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsAttributeDictionary.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsAttributeDictionary.#ctor" />
        <element api="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsAttributeDictionary.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsAttributeDictionary.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsAttributeDictionary.#ctor(System.Configuration.SettingsAttributeDictionary)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsAttributeDictionary.#ctor" />
      <parameters>
        <parameter name="attributes">
          <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsBase">
      <topicdata group="api" />
      <apidata name="SettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.ApplicationSettingsBase" ref="true" />
          <type api="T:System.Web.Profile.ProfileBase" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.SettingsBase.#ctor" />
        <element api="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
        <element api="M:System.Configuration.SettingsBase.Save" />
        <element api="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsBase.Context" />
        <element api="P:System.Configuration.SettingsBase.IsSynchronized" />
        <element api="P:System.Configuration.SettingsBase.Item(System.String)" />
        <element api="P:System.Configuration.SettingsBase.Properties" />
        <element api="P:System.Configuration.SettingsBase.PropertyValues" />
        <element api="P:System.Configuration.SettingsBase.Providers" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsBase">
      <topicdata name="SettingsBase" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsBase" />
      <apidata name="SettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)" />
        <element api="M:System.Configuration.SettingsBase.Save" />
        <element api="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsBase">
      <topicdata name="SettingsBase" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsBase" />
      <apidata name="SettingsBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.SettingsBase.Context" />
        <element api="P:System.Configuration.SettingsBase.IsSynchronized" />
        <element api="P:System.Configuration.SettingsBase.Item(System.String)" />
        <element api="P:System.Configuration.SettingsBase.Properties" />
        <element api="P:System.Configuration.SettingsBase.PropertyValues" />
        <element api="P:System.Configuration.SettingsBase.Providers" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsBase.Context">
      <topicdata group="api" />
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.Configuration.SettingsContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="properties">
          <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
        </parameter>
        <parameter name="providers">
          <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsBase.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.SettingsBase.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsBase.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsBase.PropertyValues">
      <topicdata group="api" />
      <apidata name="PropertyValues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_PropertyValues" />
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsBase.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsBase.Save">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)">
      <topicdata group="api" />
      <apidata name="Synchronized" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingsBase">
          <type api="T:System.Configuration.SettingsBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsBase" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsContext">
      <topicdata group="api" />
      <apidata name="SettingsContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Hashtable" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Clone" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Configuration.SettingsContext.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsContext">
      <topicdata name="SettingsContext" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsContext" />
      <apidata name="SettingsContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsContext.#ctor" />
      <elements>
        <element api="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.Clear" />
        <element api="M:System.Collections.Hashtable.Clone" />
        <element api="M:System.Collections.Hashtable.Contains(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <element api="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
        <element api="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Hashtable.GetEnumerator" />
        <element api="M:System.Collections.Hashtable.GetHash(System.Object)" />
        <element api="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
        <element api="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <element api="M:System.Collections.Hashtable.Remove(System.Object)" />
        <element api="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsContext">
      <topicdata name="SettingsContext" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsContext" />
      <apidata name="SettingsContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsContext.#ctor" />
      <elements>
        <element api="P:System.Collections.Hashtable.comparer" />
        <element api="P:System.Collections.Hashtable.Count" />
        <element api="P:System.Collections.Hashtable.EqualityComparer" />
        <element api="P:System.Collections.Hashtable.hcp" />
        <element api="P:System.Collections.Hashtable.IsFixedSize" />
        <element api="P:System.Collections.Hashtable.IsReadOnly" />
        <element api="P:System.Collections.Hashtable.IsSynchronized" />
        <element api="P:System.Collections.Hashtable.Item(System.Object)" />
        <element api="P:System.Collections.Hashtable.Keys" />
        <element api="P:System.Collections.Hashtable.SyncRoot" />
        <element api="P:System.Collections.Hashtable.Values" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsContext" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="SettingsDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsDescriptionAttribute">
      <topicdata name="SettingsDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsDescriptionAttribute" />
      <apidata name="SettingsDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsDescriptionAttribute">
      <topicdata name="SettingsDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsDescriptionAttribute" />
      <apidata name="SettingsDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsGroupDescriptionAttribute">
      <topicdata group="api" />
      <apidata name="SettingsGroupDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsGroupDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsGroupDescriptionAttribute">
      <topicdata name="SettingsGroupDescriptionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsGroupDescriptionAttribute" />
      <apidata name="SettingsGroupDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupDescriptionAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsGroupDescriptionAttribute">
      <topicdata name="SettingsGroupDescriptionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsGroupDescriptionAttribute" />
      <apidata name="SettingsGroupDescriptionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsGroupDescriptionAttribute.Description" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupDescriptionAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsGroupDescriptionAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsGroupDescriptionAttribute.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupDescriptionAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsGroupNameAttribute">
      <topicdata group="api" />
      <apidata name="SettingsGroupNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsGroupNameAttribute.GroupName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsGroupNameAttribute">
      <topicdata name="SettingsGroupNameAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsGroupNameAttribute" />
      <apidata name="SettingsGroupNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsGroupNameAttribute">
      <topicdata name="SettingsGroupNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsGroupNameAttribute" />
      <apidata name="SettingsGroupNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsGroupNameAttribute.GroupName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupNameAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsGroupNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="groupName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsGroupNameAttribute.GroupName">
      <topicdata group="api" />
      <apidata name="GroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsGroupNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsLoadedEventArgs">
      <topicdata group="api" />
      <apidata name="SettingsLoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsLoadedEventArgs.Provider" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsLoadedEventArgs">
      <topicdata name="SettingsLoadedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsLoadedEventArgs" />
      <apidata name="SettingsLoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsLoadedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsLoadedEventArgs">
      <topicdata name="SettingsLoadedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsLoadedEventArgs" />
      <apidata name="SettingsLoadedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.SettingsLoadedEventArgs.Provider" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsLoadedEventArgs" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsLoadedEventArgs.#ctor(System.Configuration.SettingsProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsLoadedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsLoadedEventArgs.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Provider" />
      <returns>
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsLoadedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsLoadedEventHandler">
      <topicdata group="api" />
      <apidata name="SettingsLoadedEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Configuration.SettingsLoadedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsManageability">
      <topicdata group="api" />
      <apidata name="SettingsManageability" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.SettingsManageability.Roaming" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.SettingsManageability.Roaming">
      <topicdata group="api" notopic="" />
      <apidata name="Roaming" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SettingsManageability" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsManageability" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsManageabilityAttribute">
      <topicdata group="api" />
      <apidata name="SettingsManageabilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsManageabilityAttribute.Manageability" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsManageabilityAttribute">
      <topicdata name="SettingsManageabilityAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsManageabilityAttribute" />
      <apidata name="SettingsManageabilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsManageabilityAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsManageabilityAttribute">
      <topicdata name="SettingsManageabilityAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsManageabilityAttribute" />
      <apidata name="SettingsManageabilityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsManageabilityAttribute.Manageability" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsManageabilityAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsManageabilityAttribute.#ctor(System.Configuration.SettingsManageability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="manageability">
          <type api="T:System.Configuration.SettingsManageability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsManageabilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsManageabilityAttribute.Manageability">
      <topicdata group="api" />
      <apidata name="Manageability" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Manageability" />
      <returns>
        <type api="T:System.Configuration.SettingsManageability" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsManageabilityAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsProperty">
      <topicdata group="api" />
      <apidata name="SettingsProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.SettingsProperty.#ctor">
          <element api="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)" />
          <element api="M:System.Configuration.SettingsProperty.#ctor(System.String)" />
          <element api="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsProperty.Attributes" />
        <element api="P:System.Configuration.SettingsProperty.DefaultValue" />
        <element api="P:System.Configuration.SettingsProperty.IsReadOnly" />
        <element api="P:System.Configuration.SettingsProperty.Name" />
        <element api="P:System.Configuration.SettingsProperty.PropertyType" />
        <element api="P:System.Configuration.SettingsProperty.Provider" />
        <element api="P:System.Configuration.SettingsProperty.SerializeAs" />
        <element api="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing" />
        <element api="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsProperty">
      <topicdata name="SettingsProperty" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsProperty" />
      <apidata name="SettingsProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsProperty">
      <topicdata name="SettingsProperty" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsProperty" />
      <apidata name="SettingsProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.SettingsProperty.Attributes" />
        <element api="P:System.Configuration.SettingsProperty.DefaultValue" />
        <element api="P:System.Configuration.SettingsProperty.IsReadOnly" />
        <element api="P:System.Configuration.SettingsProperty.Name" />
        <element api="P:System.Configuration.SettingsProperty.PropertyType" />
        <element api="P:System.Configuration.SettingsProperty.Provider" />
        <element api="P:System.Configuration.SettingsProperty.SerializeAs" />
        <element api="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing" />
        <element api="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsProperty.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsProperty.#ctor(System.String)" />
        <element api="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProperty.#ctor(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsProperty.#ctor" />
      <parameters>
        <parameter name="propertyToCopy">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProperty.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProperty.#ctor(System.String,System.Type,System.Configuration.SettingsProvider,System.Boolean,System.Object,System.Configuration.SettingsSerializeAs,System.Configuration.SettingsAttributeDictionary,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsProperty.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.Configuration.SettingsProvider" ref="true" />
        </parameter>
        <parameter name="isReadOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="serializeAs">
          <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
        </parameter>
        <parameter name="attributes">
          <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
        </parameter>
        <parameter name="throwOnErrorDeserializing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="throwOnErrorSerializing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Configuration.SettingsAttributeDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReadOnly" />
      <setter name="set_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyType" />
      <setter name="set_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.Provider">
      <topicdata group="api" />
      <apidata name="Provider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Provider" />
      <setter name="set_Provider" />
      <returns>
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.SerializeAs">
      <topicdata group="api" />
      <apidata name="SerializeAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializeAs" />
      <setter name="set_SerializeAs" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.ThrowOnErrorDeserializing">
      <topicdata group="api" />
      <apidata name="ThrowOnErrorDeserializing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThrowOnErrorDeserializing" />
      <setter name="set_ThrowOnErrorDeserializing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProperty.ThrowOnErrorSerializing">
      <topicdata group="api" />
      <apidata name="ThrowOnErrorSerializing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThrowOnErrorSerializing" />
      <setter name="set_ThrowOnErrorSerializing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyCollection">
      <topicdata group="api" />
      <apidata name="SettingsPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.SettingsPropertyCollection.#ctor" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Clear" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Clone" />
        <element api="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.GetEnumerator" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnClear" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnClearComplete" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.SetReadOnly" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsPropertyCollection.Count" />
        <element api="P:System.Configuration.SettingsPropertyCollection.IsSynchronized" />
        <element api="P:System.Configuration.SettingsPropertyCollection.Item(System.String)" />
        <element api="P:System.Configuration.SettingsPropertyCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyCollection">
      <topicdata name="SettingsPropertyCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyCollection" />
      <apidata name="SettingsPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Clear" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Clone" />
        <element api="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.GetEnumerator" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnClear" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnClearComplete" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyCollection.SetReadOnly" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyCollection">
      <topicdata name="SettingsPropertyCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyCollection" />
      <apidata name="SettingsPropertyCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.SettingsPropertyCollection.Count" />
        <element api="P:System.Configuration.SettingsPropertyCollection.IsSynchronized" />
        <element api="P:System.Configuration.SettingsPropertyCollection.Item(System.String)" />
        <element api="P:System.Configuration.SettingsPropertyCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.Add(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnAdd(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="OnAdd" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnAddComplete(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="OnAddComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnClear">
      <topicdata group="api" />
      <apidata name="OnClear" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnClearComplete">
      <topicdata group="api" />
      <apidata name="OnClearComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnRemove(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="OnRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.OnRemoveComplete(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name="OnRemoveComplete" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyCollection.SetReadOnly">
      <topicdata group="api" />
      <apidata name="SetReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <topicdata group="api" />
      <apidata name="SettingsPropertyIsReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
          <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
          <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)" />
          <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <topicdata name="SettingsPropertyIsReadOnlyException" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      <apidata name="SettingsPropertyIsReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <topicdata name="SettingsPropertyIsReadOnlyException" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      <apidata name="SettingsPropertyIsReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.SettingsPropertyIsReadOnlyException">
      <topicdata name="SettingsPropertyIsReadOnlyException" group="list" subgroup="Events" typeTopicId="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      <apidata name="SettingsPropertyIsReadOnlyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
        <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyIsReadOnlyException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyIsReadOnlyException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyNotFoundException">
      <topicdata group="api" />
      <apidata name="SettingsPropertyNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor">
          <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
          <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)" />
          <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyNotFoundException">
      <topicdata name="SettingsPropertyNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyNotFoundException" />
      <apidata name="SettingsPropertyNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyNotFoundException">
      <topicdata name="SettingsPropertyNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyNotFoundException" />
      <apidata name="SettingsPropertyNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.SettingsPropertyNotFoundException">
      <topicdata name="SettingsPropertyNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.Configuration.SettingsPropertyNotFoundException" />
      <apidata name="SettingsPropertyNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
        <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyValue">
      <topicdata group="api" />
      <apidata name="SettingsPropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsPropertyValue.Deserialized" />
        <element api="P:System.Configuration.SettingsPropertyValue.IsDirty" />
        <element api="P:System.Configuration.SettingsPropertyValue.Name" />
        <element api="P:System.Configuration.SettingsPropertyValue.Property" />
        <element api="P:System.Configuration.SettingsPropertyValue.PropertyValue" />
        <element api="P:System.Configuration.SettingsPropertyValue.SerializedValue" />
        <element api="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyValue">
      <topicdata name="SettingsPropertyValue" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyValue" />
      <apidata name="SettingsPropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyValue">
      <topicdata name="SettingsPropertyValue" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyValue" />
      <apidata name="SettingsPropertyValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Configuration.SettingsPropertyValue.Deserialized" />
        <element api="P:System.Configuration.SettingsPropertyValue.IsDirty" />
        <element api="P:System.Configuration.SettingsPropertyValue.Name" />
        <element api="P:System.Configuration.SettingsPropertyValue.Property" />
        <element api="P:System.Configuration.SettingsPropertyValue.PropertyValue" />
        <element api="P:System.Configuration.SettingsPropertyValue.SerializedValue" />
        <element api="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsProperty" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.Deserialized">
      <topicdata group="api" />
      <apidata name="Deserialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Deserialized" />
      <setter name="set_Deserialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.IsDirty">
      <topicdata group="api" />
      <apidata name="IsDirty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDirty" />
      <setter name="set_IsDirty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.Property">
      <topicdata group="api" />
      <apidata name="Property" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Property" />
      <returns>
        <type api="T:System.Configuration.SettingsProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.PropertyValue">
      <topicdata group="api" />
      <apidata name="PropertyValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyValue" />
      <setter name="set_PropertyValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.SerializedValue">
      <topicdata group="api" />
      <apidata name="SerializedValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializedValue" />
      <setter name="set_SerializedValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValue.UsingDefaultValue">
      <topicdata group="api" />
      <apidata name="UsingDefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsingDefaultValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyValueCollection">
      <topicdata group="api" />
      <apidata name="SettingsPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyValueCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.SettingsPropertyValueCollection.#ctor" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Clone" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.Count" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyValueCollection">
      <topicdata name="SettingsPropertyValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyValueCollection" />
      <apidata name="SettingsPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyValueCollection.#ctor" />
      <elements>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Clear" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Clone" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyValueCollection">
      <topicdata name="SettingsPropertyValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyValueCollection" />
      <apidata name="SettingsPropertyValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsPropertyValueCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.SettingsPropertyValueCollection.Count" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)" />
        <element api="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.Add(System.Configuration.SettingsPropertyValue)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.CopyTo(System.Array,System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValueCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValueCollection.IsSynchronized">
      <topicdata group="api" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValueCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyValueCollection.SetReadOnly">
      <topicdata group="api" />
      <apidata name="SetReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsPropertyValueCollection.SyncRoot">
      <topicdata group="api" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsPropertyWrongTypeException">
      <topicdata group="api" />
      <apidata name="SettingsPropertyWrongTypeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
          <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
          <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)" />
          <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsPropertyWrongTypeException">
      <topicdata name="SettingsPropertyWrongTypeException" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsPropertyWrongTypeException" />
      <apidata name="SettingsPropertyWrongTypeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsPropertyWrongTypeException">
      <topicdata name="SettingsPropertyWrongTypeException" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsPropertyWrongTypeException" />
      <apidata name="SettingsPropertyWrongTypeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" />
      </containers>
    </api>
    <api id="Events.T:System.Configuration.SettingsPropertyWrongTypeException">
      <topicdata name="SettingsPropertyWrongTypeException" group="list" subgroup="Events" typeTopicId="T:System.Configuration.SettingsPropertyWrongTypeException" />
      <apidata name="SettingsPropertyWrongTypeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
        <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)" />
        <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsPropertyWrongTypeException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsPropertyWrongTypeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsPropertyWrongTypeException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsProvider">
      <topicdata group="api" />
      <apidata name="SettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.LocalFileSettingsProvider" ref="true" />
          <type api="T:System.Web.Profile.ProfileProvider" ref="true" />
          <type api="T:System.Web.ClientServices.Providers.ClientSettingsProvider" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Configuration.SettingsProvider.#ctor" />
        <element api="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
        <element api="P:System.Configuration.SettingsProvider.ApplicationName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsProvider">
      <topicdata name="SettingsProvider" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsProvider" />
      <apidata name="SettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
        <element api="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
        <element api="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsProvider">
      <topicdata name="SettingsProvider" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsProvider" />
      <apidata name="SettingsProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Configuration.Provider.ProviderBase.Description" />
        <element api="P:System.Configuration.Provider.ProviderBase.Name" />
        <element api="P:System.Configuration.SettingsProvider.ApplicationName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProvider.ApplicationName">
      <topicdata group="api" />
      <apidata name="ApplicationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationName" />
      <setter name="set_ApplicationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <topicdata group="api" />
      <apidata name="GetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Configuration.SettingsPropertyCollection" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <topicdata group="api" />
      <apidata name="SetPropertyValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Configuration.SettingsContext" ref="true" />
        </parameter>
        <parameter name="collection">
          <type api="T:System.Configuration.SettingsPropertyValueCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsProviderAttribute">
      <topicdata group="api" />
      <apidata name="SettingsProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Configuration.SettingsProviderAttribute.#ctor">
          <element api="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)" />
          <element api="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)" />
        </element>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsProviderAttribute">
      <topicdata name="SettingsProviderAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsProviderAttribute" />
      <apidata name="SettingsProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsProviderAttribute">
      <topicdata name="SettingsProviderAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsProviderAttribute" />
      <apidata name="SettingsProviderAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.SettingsProviderAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)" />
        <element api="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProviderAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsProviderAttribute.#ctor" />
      <parameters>
        <parameter name="providerTypeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProviderAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.SettingsProviderAttribute.#ctor" />
      <parameters>
        <parameter name="providerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProviderAttribute.ProviderTypeName">
      <topicdata group="api" />
      <apidata name="ProviderTypeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderTypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsProviderCollection">
      <topicdata group="api" />
      <apidata name="SettingsProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsProviderCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Web.Profile.ProfileProviderCollection" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsProviderCollection.#ctor" />
        <element api="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
        <element api="P:System.Configuration.SettingsProviderCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingsProviderCollection">
      <topicdata name="SettingsProviderCollection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsProviderCollection" />
      <apidata name="SettingsProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsProviderCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.Provider.ProviderCollection.Clear" />
        <element api="M:System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.GetEnumerator" />
        <element api="M:System.Configuration.Provider.ProviderCollection.Remove(System.String)" />
        <element api="M:System.Configuration.Provider.ProviderCollection.SetReadOnly" />
        <element api="M:System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsProviderCollection">
      <topicdata name="SettingsProviderCollection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsProviderCollection" />
      <apidata name="SettingsProviderCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SettingsProviderCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.Provider.ProviderCollection.Count" />
        <element api="P:System.Configuration.Provider.ProviderCollection.IsSynchronized" />
        <element api="P:System.Configuration.Provider.ProviderCollection.SyncRoot" />
        <element api="P:System.Configuration.SettingsProviderCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderCollection" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProviderCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
          <type api="T:System.Configuration.Provider.ProviderCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.Configuration.Provider.ProviderBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsProviderCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Configuration.SettingsProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsProviderCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsSavingEventHandler">
      <topicdata group="api" />
      <apidata name="SettingsSavingEventHandler" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.ComponentModel.CancelEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsSerializeAs">
      <topicdata group="api" />
      <apidata name="SettingsSerializeAs" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.SettingsSerializeAs.String" />
        <element api="F:System.Configuration.SettingsSerializeAs.Xml" />
        <element api="F:System.Configuration.SettingsSerializeAs.Binary" />
        <element api="F:System.Configuration.SettingsSerializeAs.ProviderSpecific" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.SettingsSerializeAs.Binary">
      <topicdata group="api" notopic="" />
      <apidata name="Binary" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.SettingsSerializeAs.ProviderSpecific">
      <topicdata group="api" notopic="" />
      <apidata name="ProviderSpecific" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.SettingsSerializeAs.String">
      <topicdata group="api" notopic="" />
      <apidata name="String" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.SettingsSerializeAs.Xml">
      <topicdata group="api" notopic="" />
      <apidata name="Xml" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingsSerializeAsAttribute">
      <topicdata group="api" />
      <apidata name="SettingsSerializeAsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SettingsSerializeAsAttribute">
      <topicdata name="SettingsSerializeAsAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingsSerializeAsAttribute" />
      <apidata name="SettingsSerializeAsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAsAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingsSerializeAsAttribute">
      <topicdata name="SettingsSerializeAsAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingsSerializeAsAttribute" />
      <apidata name="SettingsSerializeAsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAsAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingsSerializeAsAttribute.#ctor(System.Configuration.SettingsSerializeAs)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serializeAs">
          <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAsAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingsSerializeAsAttribute.SerializeAs">
      <topicdata group="api" />
      <apidata name="SerializeAs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SerializeAs" />
      <returns>
        <type api="T:System.Configuration.SettingsSerializeAs" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingsSerializeAsAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SettingValueElement">
      <topicdata group="api" />
      <apidata name="SettingValueElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingValueElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.SettingValueElement.#ctor" />
        <element api="M:System.Configuration.SettingValueElement.Equals(System.Object)" />
        <element api="M:System.Configuration.SettingValueElement.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SettingValueElement.ValueXml" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SettingValueElement">
      <topicdata name="SettingValueElement" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SettingValueElement" />
      <apidata name="SettingValueElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingValueElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.SettingValueElement.Equals(System.Object)" />
        <element api="M:System.Configuration.SettingValueElement.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SettingValueElement">
      <topicdata name="SettingValueElement" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SettingValueElement" />
      <apidata name="SettingValueElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.SettingValueElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.SettingValueElement.ValueXml" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingValueElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingValueElement.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="settingValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SettingValueElement.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.GetHashCode">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SettingValueElement.ValueXml">
      <topicdata group="api" />
      <apidata name="ValueXml" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValueXml" />
      <setter name="set_ValueXml" />
      <returns>
        <type api="T:System.Xml.XmlNode" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SettingValueElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SingleTagSectionHandler">
      <topicdata group="api" />
      <apidata name="SingleTagSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SingleTagSectionHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Configuration.SingleTagSectionHandler.#ctor" />
        <element api="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SingleTagSectionHandler">
      <topicdata name="SingleTagSectionHandler" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SingleTagSectionHandler" />
      <apidata name="SingleTagSectionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.SingleTagSectionHandler.#ctor" />
      <elements>
        <element api="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SingleTagSectionHandler" />
      </containers>
    </api>
    <api id="M:System.Configuration.SingleTagSectionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SingleTagSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SingleTagSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="section">
          <type api="T:System.Xml.XmlNode" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Configuration.IConfigurationSectionHandler.Create(System.Object,System.Object,System.Xml.XmlNode)">
          <type api="T:System.Configuration.IConfigurationSectionHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SingleTagSectionHandler" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SpecialSetting">
      <topicdata group="api" />
      <apidata name="SpecialSetting" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Configuration.SpecialSetting.ConnectionString" />
        <element api="F:System.Configuration.SpecialSetting.WebServiceUrl" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="F:System.Configuration.SpecialSetting.ConnectionString">
      <topicdata group="api" notopic="" />
      <apidata name="ConnectionString" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SpecialSetting" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSetting" ref="false" />
      </containers>
    </api>
    <api id="F:System.Configuration.SpecialSetting.WebServiceUrl">
      <topicdata group="api" notopic="" />
      <apidata name="WebServiceUrl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Configuration.SpecialSetting" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSetting" ref="false" />
      </containers>
    </api>
    <api id="T:System.Configuration.SpecialSettingAttribute">
      <topicdata group="api" />
      <apidata name="SpecialSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SpecialSettingAttribute.SpecialSetting" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SpecialSettingAttribute">
      <topicdata name="SpecialSettingAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SpecialSettingAttribute" />
      <apidata name="SpecialSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSettingAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SpecialSettingAttribute">
      <topicdata name="SpecialSettingAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SpecialSettingAttribute" />
      <apidata name="SpecialSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.SpecialSettingAttribute.SpecialSetting" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSettingAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SpecialSettingAttribute.#ctor(System.Configuration.SpecialSetting)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="specialSetting">
          <type api="T:System.Configuration.SpecialSetting" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSettingAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SpecialSettingAttribute.SpecialSetting">
      <topicdata group="api" />
      <apidata name="SpecialSetting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SpecialSetting" />
      <returns>
        <type api="T:System.Configuration.SpecialSetting" ref="false" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SpecialSettingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.StringValidator">
      <topicdata group="api" />
      <apidata name="StringValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.StringValidator.#ctor">
          <element api="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
          <element api="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
          <element api="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
        </element>
        <element api="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.StringValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.StringValidator">
      <topicdata name="StringValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.StringValidator" />
      <apidata name="StringValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.StringValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.StringValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.StringValidator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.StringValidator.#ctor(System.Int32)" />
        <element api="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)" />
        <element api="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidator.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.StringValidator.#ctor" />
      <parameters>
        <parameter name="minLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.StringValidator.#ctor" />
      <parameters>
        <parameter name="minLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidator.#ctor(System.Int32,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.StringValidator.#ctor" />
      <parameters>
        <parameter name="minLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="invalidCharacters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.StringValidatorAttribute">
      <topicdata group="api" />
      <apidata name="StringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.StringValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.StringValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.StringValidatorAttribute.InvalidCharacters" />
        <element api="P:System.Configuration.StringValidatorAttribute.MaxLength" />
        <element api="P:System.Configuration.StringValidatorAttribute.MinLength" />
        <element api="P:System.Configuration.StringValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.StringValidatorAttribute">
      <topicdata name="StringValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.StringValidatorAttribute" />
      <apidata name="StringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.StringValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.StringValidatorAttribute">
      <topicdata name="StringValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.StringValidatorAttribute" />
      <apidata name="StringValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.StringValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.StringValidatorAttribute.InvalidCharacters" />
        <element api="P:System.Configuration.StringValidatorAttribute.MaxLength" />
        <element api="P:System.Configuration.StringValidatorAttribute.MinLength" />
        <element api="P:System.Configuration.StringValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.StringValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.StringValidatorAttribute.InvalidCharacters">
      <topicdata group="api" />
      <apidata name="InvalidCharacters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InvalidCharacters" />
      <setter name="set_InvalidCharacters" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.StringValidatorAttribute.MaxLength">
      <topicdata group="api" />
      <apidata name="MaxLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxLength" />
      <setter name="set_MaxLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.StringValidatorAttribute.MinLength">
      <topicdata group="api" />
      <apidata name="MinLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinLength" />
      <setter name="set_MinLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.StringValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SubclassTypeValidator">
      <topicdata group="api" />
      <apidata name="SubclassTypeValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)" />
        <element api="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.SubclassTypeValidator">
      <topicdata name="SubclassTypeValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SubclassTypeValidator" />
      <apidata name="SubclassTypeValidator" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidator" />
      </containers>
    </api>
    <api id="M:System.Configuration.SubclassTypeValidator.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="baseClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SubclassTypeValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.SubclassTypeValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.SubclassTypeValidatorAttribute">
      <topicdata group="api" />
      <apidata name="SubclassTypeValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass" />
        <element api="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.SubclassTypeValidatorAttribute">
      <topicdata name="SubclassTypeValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.SubclassTypeValidatorAttribute" />
      <apidata name="SubclassTypeValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.SubclassTypeValidatorAttribute">
      <topicdata name="SubclassTypeValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.SubclassTypeValidatorAttribute" />
      <apidata name="SubclassTypeValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass" />
        <element api="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.SubclassTypeValidatorAttribute.#ctor(System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="baseClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SubclassTypeValidatorAttribute.BaseClass">
      <topicdata group="api" />
      <apidata name="BaseClass" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BaseClass" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.SubclassTypeValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.SubclassTypeValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanMinutesConverter">
      <topicdata group="api" />
      <apidata name="TimeSpanMinutesConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanMinutesConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.TimeSpanMinutesConverter.#ctor" />
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanMinutesConverter">
      <topicdata name="TimeSpanMinutesConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanMinutesConverter" />
      <apidata name="TimeSpanMinutesConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanMinutesConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanMinutesConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <topicdata group="api" />
      <apidata name="TimeSpanMinutesOrInfiniteConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor" />
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanMinutesOrInfiniteConverter">
      <topicdata name="TimeSpanMinutesOrInfiniteConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
      <apidata name="TimeSpanMinutesOrInfiniteConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.TimeSpanMinutesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanMinutesOrInfiniteConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.TimeSpanMinutesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.Configuration.TimeSpanMinutesConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanMinutesOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanSecondsConverter">
      <topicdata group="api" />
      <apidata name="TimeSpanSecondsConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanSecondsConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.TimeSpanSecondsConverter.#ctor" />
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanSecondsConverter">
      <topicdata name="TimeSpanSecondsConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanSecondsConverter" />
      <apidata name="TimeSpanSecondsConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanSecondsConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanSecondsConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <topicdata group="api" />
      <apidata name="TimeSpanSecondsOrInfiniteConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor" />
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanSecondsOrInfiniteConverter">
      <topicdata name="TimeSpanSecondsOrInfiniteConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
      <apidata name="TimeSpanSecondsOrInfiniteConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.TimeSpanSecondsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TimeSpanSecondsOrInfiniteConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.TimeSpanSecondsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.Configuration.TimeSpanSecondsConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanSecondsOrInfiniteConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanValidator">
      <topicdata group="api" />
      <apidata name="TimeSpanValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TimeSpanValidator.#ctor">
          <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)" />
          <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)" />
          <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)" />
        </element>
        <element api="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.TimeSpanValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanValidator">
      <topicdata name="TimeSpanValidator" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanValidator" />
      <apidata name="TimeSpanValidator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)" />
        <element api="M:System.Configuration.TimeSpanValidator.Validate(System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TimeSpanValidator.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)" />
        <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)" />
        <element api="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.TimeSpanValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.TimeSpanValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidator.#ctor(System.TimeSpan,System.TimeSpan,System.Boolean,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Configuration.TimeSpanValidator.#ctor" />
      <parameters>
        <parameter name="minValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="maxValue">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="rangeIsExclusive">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="resolutionInSeconds">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidator.CanValidate(System.Type)">
      <topicdata group="api" />
      <apidata name="CanValidate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.CanValidate(System.Type)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidator.Validate(System.Object)">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationValidatorBase.Validate(System.Object)">
          <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidator" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TimeSpanValidatorAttribute">
      <topicdata group="api" />
      <apidata name="TimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanValidatorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue" />
        <element api="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.TimeSpanValidatorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.TimeSpanValidatorAttribute">
      <topicdata name="TimeSpanValidatorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TimeSpanValidatorAttribute" />
      <apidata name="TimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanValidatorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.TimeSpanValidatorAttribute">
      <topicdata name="TimeSpanValidatorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.TimeSpanValidatorAttribute" />
      <apidata name="TimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanValidatorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorType" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MinValue" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString" />
        <element api="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" />
      </containers>
    </api>
    <api id="Fields.T:System.Configuration.TimeSpanValidatorAttribute">
      <topicdata name="TimeSpanValidatorAttribute" group="list" subgroup="Fields" typeTopicId="T:System.Configuration.TimeSpanValidatorAttribute" />
      <apidata name="TimeSpanValidatorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TimeSpanValidatorAttribute.#ctor" />
      <elements>
        <element api="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue" />
        <element api="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.TimeSpanValidatorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.ExcludeRange">
      <topicdata group="api" />
      <apidata name="ExcludeRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExcludeRange" />
      <setter name="set_ExcludeRange" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.MaxValue">
      <topicdata group="api" />
      <apidata name="MaxValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaxValue" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.MaxValueString">
      <topicdata group="api" />
      <apidata name="MaxValueString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxValueString" />
      <setter name="set_MaxValueString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.MinValue">
      <topicdata group="api" />
      <apidata name="MinValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinValue" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.MinValueString">
      <topicdata group="api" />
      <apidata name="MinValueString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinValueString" />
      <setter name="set_MinValueString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMaxValue">
      <topicdata group="api" />
      <apidata name="TimeSpanMaxValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>10675199.02:48:05.4775807</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="F:System.Configuration.TimeSpanValidatorAttribute.TimeSpanMinValue">
      <topicdata group="api" />
      <apidata name="TimeSpanMinValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>-10675199.02:48:05.4775808</value>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.TimeSpanValidatorAttribute.ValidatorInstance">
      <topicdata group="api" />
      <apidata name="ValidatorInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.ConfigurationValidatorAttribute.ValidatorInstance">
          <type api="T:System.Configuration.ConfigurationValidatorAttribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ValidatorInstance" />
      <returns>
        <type api="T:System.Configuration.ConfigurationValidatorBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TimeSpanValidatorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.TypeNameConverter">
      <topicdata group="api" />
      <apidata name="TypeNameConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TypeNameConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.TypeNameConverter.#ctor" />
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.TypeNameConverter">
      <topicdata name="TypeNameConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.TypeNameConverter" />
      <apidata name="TypeNameConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.TypeNameConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.TypeNameConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TypeNameConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.TypeNameConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TypeNameConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TypeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TypeNameConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.TypeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.TypeNameConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.TypeNameConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.UriSection">
      <topicdata group="api" />
      <apidata name="UriSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UriSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.UriSection.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.UriSection.Idn" />
        <element api="P:System.Configuration.UriSection.IriParsing" />
        <element api="P:System.Configuration.UriSection.SchemeSettings" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.UriSection">
      <topicdata name="UriSection" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.UriSection" />
      <apidata name="UriSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UriSection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.UriSection">
      <topicdata name="UriSection" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.UriSection" />
      <apidata name="UriSection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UriSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.Configuration.UriSection.Idn" />
        <element api="P:System.Configuration.UriSection.IriParsing" />
        <element api="P:System.Configuration.UriSection.SchemeSettings" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" />
      </containers>
    </api>
    <api id="M:System.Configuration.UriSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Configuration.UriSection.Idn">
      <topicdata group="api" />
      <apidata name="Idn" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Idn" />
      <returns>
        <type api="T:System.Configuration.IdnElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>idn</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.UriSection.IriParsing">
      <topicdata group="api" />
      <apidata name="IriParsing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IriParsing" />
      <returns>
        <type api="T:System.Configuration.IriParsingElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>iriParsing</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Configuration.UriSection.SchemeSettings">
      <topicdata group="api" />
      <apidata name="SchemeSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SchemeSettings" />
      <returns>
        <type api="T:System.Configuration.SchemeSettingElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UriSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>schemeSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Configuration.UserScopedSettingAttribute">
      <topicdata group="api" />
      <apidata name="UserScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserScopedSettingAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.SettingAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Configuration.UserScopedSettingAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Configuration.UserScopedSettingAttribute">
      <topicdata name="UserScopedSettingAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.UserScopedSettingAttribute" />
      <apidata name="UserScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserScopedSettingAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserScopedSettingAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.UserScopedSettingAttribute">
      <topicdata name="UserScopedSettingAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.UserScopedSettingAttribute" />
      <apidata name="UserScopedSettingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserScopedSettingAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserScopedSettingAttribute" />
      </containers>
    </api>
    <api id="M:System.Configuration.UserScopedSettingAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserScopedSettingAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.UserSettingsGroup">
      <topicdata group="api" />
      <apidata name="UserSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserSettingsGroup.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSectionGroup" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.UserSettingsGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Configuration.UserSettingsGroup.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.UserSettingsGroup">
      <topicdata name="UserSettingsGroup" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.UserSettingsGroup" />
      <apidata name="UserSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserSettingsGroup.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.UserSettingsGroup.ForceDeclaration">
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration" />
          <element api="M:System.Configuration.ConfigurationSectionGroup.ForceDeclaration(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserSettingsGroup" />
      </containers>
    </api>
    <api id="Properties.T:System.Configuration.UserSettingsGroup">
      <topicdata name="UserSettingsGroup" group="list" subgroup="Properties" typeTopicId="T:System.Configuration.UserSettingsGroup" />
      <apidata name="UserSettingsGroup" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.UserSettingsGroup.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclarationRequired" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.IsDeclared" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Name" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroupName" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.SectionGroups" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Sections" />
        <element api="P:System.Configuration.ConfigurationSectionGroup.Type" />
      </elements>
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserSettingsGroup" />
      </containers>
    </api>
    <api id="M:System.Configuration.UserSettingsGroup.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System" module="System" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.UserSettingsGroup" ref="true" />
      </containers>
    </api>
    <api id="T:System.Configuration.ValidatorCallback">
      <topicdata group="api" />
      <apidata name="ValidatorCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="T:System.Configuration.WhiteSpaceTrimStringConverter">
      <topicdata group="api" />
      <apidata name="WhiteSpaceTrimStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationConverterBase" ref="true" />
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor" />
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.Configuration.WhiteSpaceTrimStringConverter">
      <topicdata name="WhiteSpaceTrimStringConverter" group="list" subgroup="Methods" typeTopicId="T:System.Configuration.WhiteSpaceTrimStringConverter" />
      <apidata name="WhiteSpaceTrimStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor" />
      <elements>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.Configuration.ConfigurationConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.WhiteSpaceTrimStringConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Configuration.WhiteSpaceTrimStringConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ctx">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="ci">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Configuration" />
        <type api="T:System.Configuration.WhiteSpaceTrimStringConverter" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>