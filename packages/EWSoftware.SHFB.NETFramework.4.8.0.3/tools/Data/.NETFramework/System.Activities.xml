<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Activities">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>97bdccfe-43bf-4c17-991d-c797c2ef2243</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Activities.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Activities">
      <topicdata group="api" />
      <apidata name="System.Activities" group="namespace" />
      <elements>
        <element api="T:System.Activities.Activity" />
        <element api="T:System.Activities.Activity`1" />
        <element api="T:System.Activities.ActivityAction" />
        <element api="T:System.Activities.ActivityAction`1" />
        <element api="T:System.Activities.ActivityAction`2" />
        <element api="T:System.Activities.ActivityAction`3" />
        <element api="T:System.Activities.ActivityAction`4" />
        <element api="T:System.Activities.ActivityAction`5" />
        <element api="T:System.Activities.ActivityAction`6" />
        <element api="T:System.Activities.ActivityAction`7" />
        <element api="T:System.Activities.ActivityAction`8" />
        <element api="T:System.Activities.ActivityAction`9" />
        <element api="T:System.Activities.ActivityAction`10" />
        <element api="T:System.Activities.ActivityAction`11" />
        <element api="T:System.Activities.ActivityAction`12" />
        <element api="T:System.Activities.ActivityAction`13" />
        <element api="T:System.Activities.ActivityAction`14" />
        <element api="T:System.Activities.ActivityAction`15" />
        <element api="T:System.Activities.ActivityAction`16" />
        <element api="T:System.Activities.ActivityBuilder" />
        <element api="T:System.Activities.ActivityBuilder`1" />
        <element api="T:System.Activities.ActivityContext" />
        <element api="T:System.Activities.ActivityDelegate" />
        <element api="T:System.Activities.ActivityFunc`1" />
        <element api="T:System.Activities.ActivityFunc`2" />
        <element api="T:System.Activities.ActivityFunc`3" />
        <element api="T:System.Activities.ActivityFunc`4" />
        <element api="T:System.Activities.ActivityFunc`5" />
        <element api="T:System.Activities.ActivityFunc`6" />
        <element api="T:System.Activities.ActivityFunc`7" />
        <element api="T:System.Activities.ActivityFunc`8" />
        <element api="T:System.Activities.ActivityFunc`9" />
        <element api="T:System.Activities.ActivityFunc`10" />
        <element api="T:System.Activities.ActivityFunc`11" />
        <element api="T:System.Activities.ActivityFunc`12" />
        <element api="T:System.Activities.ActivityFunc`13" />
        <element api="T:System.Activities.ActivityFunc`14" />
        <element api="T:System.Activities.ActivityFunc`15" />
        <element api="T:System.Activities.ActivityFunc`16" />
        <element api="T:System.Activities.ActivityFunc`17" />
        <element api="T:System.Activities.ActivityInstance" />
        <element api="T:System.Activities.ActivityInstanceState" />
        <element api="T:System.Activities.ActivityMetadata" />
        <element api="T:System.Activities.ActivityPropertyReference" />
        <element api="T:System.Activities.ActivityWithResult" />
        <element api="T:System.Activities.Argument" />
        <element api="T:System.Activities.ArgumentDirection" />
        <element api="T:System.Activities.AsyncCodeActivity" />
        <element api="T:System.Activities.AsyncCodeActivity`1" />
        <element api="T:System.Activities.AsyncCodeActivityContext" />
        <element api="T:System.Activities.Bookmark" />
        <element api="T:System.Activities.BookmarkCallback" />
        <element api="T:System.Activities.BookmarkOptions" />
        <element api="T:System.Activities.BookmarkResumptionResult" />
        <element api="T:System.Activities.BookmarkScope" />
        <element api="T:System.Activities.BookmarkScopeHandle" />
        <element api="T:System.Activities.ExclusiveHandle" />
        <element api="T:System.Activities.CodeActivity" />
        <element api="T:System.Activities.CodeActivity`1" />
        <element api="T:System.Activities.CodeActivityContext" />
        <element api="T:System.Activities.CodeActivityMetadata" />
        <element api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
        <element api="T:System.Activities.CompletionCallback" />
        <element api="T:System.Activities.CompletionCallback`1" />
        <element api="T:System.Activities.DelegateArgument" />
        <element api="T:System.Activities.DelegateCompletionCallback" />
        <element api="T:System.Activities.DelegateInArgument" />
        <element api="T:System.Activities.DelegateInArgument`1" />
        <element api="T:System.Activities.DelegateOutArgument" />
        <element api="T:System.Activities.DelegateOutArgument`1" />
        <element api="T:System.Activities.DynamicActivity" />
        <element api="T:System.Activities.DynamicActivity`1" />
        <element api="T:System.Activities.DynamicActivityProperty" />
        <element api="T:System.Activities.ExceptionPersistenceExtension" />
        <element api="T:System.Activities.ExecutionProperties" />
        <element api="T:System.Activities.FaultCallback" />
        <element api="T:System.Activities.Handle" />
        <element api="T:System.Activities.HandleInitializationContext" />
        <element api="T:System.Activities.IExecutionProperty" />
        <element api="T:System.Activities.PersistableIdleAction" />
        <element api="T:System.Activities.InOutArgument" />
        <element api="T:System.Activities.InOutArgument`1" />
        <element api="T:System.Activities.InArgument" />
        <element api="T:System.Activities.InArgument`1" />
        <element api="T:System.Activities.InvalidWorkflowException" />
        <element api="T:System.Activities.InvokeCompletedEventArgs" />
        <element api="T:System.Activities.IPropertyRegistrationCallback" />
        <element api="T:System.Activities.Location" />
        <element api="T:System.Activities.Location`1" />
        <element api="T:System.Activities.LocationReference" />
        <element api="T:System.Activities.LocationReferenceEnvironment" />
        <element api="T:System.Activities.NativeActivity" />
        <element api="T:System.Activities.NativeActivity`1" />
        <element api="T:System.Activities.NativeActivityAbortContext" />
        <element api="T:System.Activities.NativeActivityContext" />
        <element api="T:System.Activities.NativeActivityMetadata" />
        <element api="T:System.Activities.NativeActivityFaultContext" />
        <element api="T:System.Activities.NativeActivityTransactionContext" />
        <element api="T:System.Activities.NoPersistHandle" />
        <element api="T:System.Activities.OutArgument" />
        <element api="T:System.Activities.OutArgument`1" />
        <element api="T:System.Activities.OverloadGroupAttribute" />
        <element api="T:System.Activities.RegistrationContext" />
        <element api="T:System.Activities.RequiredArgumentAttribute" />
        <element api="T:System.Activities.RuntimeArgument" />
        <element api="T:System.Activities.RuntimeDelegateArgument" />
        <element api="T:System.Activities.RuntimeTransactionHandle" />
        <element api="T:System.Activities.UnhandledExceptionAction" />
        <element api="T:System.Activities.ValidationException" />
        <element api="T:System.Activities.Variable" />
        <element api="T:System.Activities.Variable`1" />
        <element api="T:System.Activities.VariableModifiers" />
        <element api="T:System.Activities.VersionMismatchException" />
        <element api="T:System.Activities.WorkflowApplicationAbortedEventArgs" />
        <element api="T:System.Activities.WorkflowApplicationAbortedException" />
        <element api="T:System.Activities.WorkflowApplication" />
        <element api="T:System.Activities.WorkflowApplicationCompletedEventArgs" />
        <element api="T:System.Activities.WorkflowApplicationCompletedException" />
        <element api="T:System.Activities.WorkflowApplicationEventArgs" />
        <element api="T:System.Activities.WorkflowApplicationException" />
        <element api="T:System.Activities.WorkflowApplicationInstance" />
        <element api="T:System.Activities.WorkflowApplicationIdleEventArgs" />
        <element api="T:System.Activities.WorkflowApplicationTerminatedException" />
        <element api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
        <element api="T:System.Activities.WorkflowApplicationUnloadedException" />
        <element api="T:System.Activities.WorkflowDataContext" />
        <element api="T:System.Activities.WorkflowIdentity" />
        <element api="T:System.Activities.WorkflowIdentityFilter" />
        <element api="T:System.Activities.WorkflowInspectionServices" />
        <element api="T:System.Activities.WorkflowInvoker" />
      </elements>
    </api>
    <api id="T:System.Activities.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.Activity.Implementation" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
          <type api="T:System.Activities.CodeActivity" ref="true" />
          <type api="T:System.Activities.DynamicActivity" ref="true" />
          <type api="T:System.Activities.NativeActivity" ref="true" />
          <type api="T:System.ServiceModel.Activities.Receive" ref="true" />
          <type api="T:System.ServiceModel.Activities.ReceiveReply" ref="true" />
          <type api="T:System.ServiceModel.Activities.Send" ref="true" />
          <type api="T:System.ServiceModel.Activities.SendReply" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.#ctor" />
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Activity">
      <topicdata name="Activity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.Activity.Implementation" />
      <elements>
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Activity">
      <topicdata name="Activity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.Activity.Implementation" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity.CacheId">
      <topicdata group="api" />
      <apidata name="CacheId" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CacheId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Validation.Constraint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayName" />
      <setter name="set_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.XamlDeferLoadAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.FuncDeferringLoader" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.Activity" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.Markup.AmbientAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Activity.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Activity`1">
      <topicdata group="api" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
          <type api="T:System.Activities.CodeActivity`1" ref="true" />
          <type api="T:System.Activities.DynamicActivity`1" ref="true" />
          <type api="T:System.Activities.NativeActivity`1" ref="true" />
          <type api="T:System.Activities.Expressions.AndAlso" ref="true" />
          <type api="T:System.Activities.Expressions.OrElse" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Activity`1.#ctor" />
        <element api="M:System.Activities.Activity`1.FromValue(`0)" />
        <element api="Overload:System.Activities.Activity`1.FromVariable">
          <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})" />
        </element>
        <element api="Overload:System.Activities.Activity`1.op_Implicit">
          <element api="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}" />
          <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}" />
          <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ActivityWithResultConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Activity`1">
      <topicdata name="Activity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Activity`1" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.Activity`1.FromValue(`0)" />
        <element api="Overload:System.Activities.Activity`1.FromVariable">
          <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.Activity`1">
      <topicdata name="Activity" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.Activity`1" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Activity`1.op_Implicit">
          <element api="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}" />
          <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}" />
          <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Activity`1">
      <topicdata name="Activity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Activity`1" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Activity`1.FromVariable">
      <topicdata name="FromVariable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Activity`1.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}" />
        <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}" />
        <element api="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.FromValue(`0)">
      <topicdata group="api" />
      <apidata name="FromValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constValue">
          <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Activity`1.FromVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})">
      <topicdata group="api" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.Activity`1.FromVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable)~System.Activities.Activity{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.Activity`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.Activity{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.Activity`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Activity`1.op_Implicit(`0)~System.Activities.Activity{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.Activity`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constValue">
          <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Activity`1.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.Activity`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Activity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityAction.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction.#ctor" />
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction.#ctor" />
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityAction`1">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`1.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`1.Argument" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`1">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`1" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`1">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`1" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`1.Argument" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`1" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`1.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument" />
      <setter name="set_Argument" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.ActivityAction`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`10">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`10.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`10.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`10.Argument1" />
        <element api="P:System.Activities.ActivityAction`10.Argument10" />
        <element api="P:System.Activities.ActivityAction`10.Argument2" />
        <element api="P:System.Activities.ActivityAction`10.Argument3" />
        <element api="P:System.Activities.ActivityAction`10.Argument4" />
        <element api="P:System.Activities.ActivityAction`10.Argument5" />
        <element api="P:System.Activities.ActivityAction`10.Argument6" />
        <element api="P:System.Activities.ActivityAction`10.Argument7" />
        <element api="P:System.Activities.ActivityAction`10.Argument8" />
        <element api="P:System.Activities.ActivityAction`10.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`10">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`10" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`10.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`10">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`10" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`10.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`10.Argument1" />
        <element api="P:System.Activities.ActivityAction`10.Argument10" />
        <element api="P:System.Activities.ActivityAction`10.Argument2" />
        <element api="P:System.Activities.ActivityAction`10.Argument3" />
        <element api="P:System.Activities.ActivityAction`10.Argument4" />
        <element api="P:System.Activities.ActivityAction`10.Argument5" />
        <element api="P:System.Activities.ActivityAction`10.Argument6" />
        <element api="P:System.Activities.ActivityAction`10.Argument7" />
        <element api="P:System.Activities.ActivityAction`10.Argument8" />
        <element api="P:System.Activities.ActivityAction`10.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`10.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`10.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`11">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`11.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`11.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`11.Argument1" />
        <element api="P:System.Activities.ActivityAction`11.Argument10" />
        <element api="P:System.Activities.ActivityAction`11.Argument11" />
        <element api="P:System.Activities.ActivityAction`11.Argument2" />
        <element api="P:System.Activities.ActivityAction`11.Argument3" />
        <element api="P:System.Activities.ActivityAction`11.Argument4" />
        <element api="P:System.Activities.ActivityAction`11.Argument5" />
        <element api="P:System.Activities.ActivityAction`11.Argument6" />
        <element api="P:System.Activities.ActivityAction`11.Argument7" />
        <element api="P:System.Activities.ActivityAction`11.Argument8" />
        <element api="P:System.Activities.ActivityAction`11.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`11">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`11" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`11.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`11">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`11" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`11.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`11.Argument1" />
        <element api="P:System.Activities.ActivityAction`11.Argument10" />
        <element api="P:System.Activities.ActivityAction`11.Argument11" />
        <element api="P:System.Activities.ActivityAction`11.Argument2" />
        <element api="P:System.Activities.ActivityAction`11.Argument3" />
        <element api="P:System.Activities.ActivityAction`11.Argument4" />
        <element api="P:System.Activities.ActivityAction`11.Argument5" />
        <element api="P:System.Activities.ActivityAction`11.Argument6" />
        <element api="P:System.Activities.ActivityAction`11.Argument7" />
        <element api="P:System.Activities.ActivityAction`11.Argument8" />
        <element api="P:System.Activities.ActivityAction`11.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`11.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`11.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`12">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`12.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`12.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`12.Argument1" />
        <element api="P:System.Activities.ActivityAction`12.Argument10" />
        <element api="P:System.Activities.ActivityAction`12.Argument11" />
        <element api="P:System.Activities.ActivityAction`12.Argument12" />
        <element api="P:System.Activities.ActivityAction`12.Argument2" />
        <element api="P:System.Activities.ActivityAction`12.Argument3" />
        <element api="P:System.Activities.ActivityAction`12.Argument4" />
        <element api="P:System.Activities.ActivityAction`12.Argument5" />
        <element api="P:System.Activities.ActivityAction`12.Argument6" />
        <element api="P:System.Activities.ActivityAction`12.Argument7" />
        <element api="P:System.Activities.ActivityAction`12.Argument8" />
        <element api="P:System.Activities.ActivityAction`12.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`12">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`12" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`12.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`12">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`12" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`12.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`12.Argument1" />
        <element api="P:System.Activities.ActivityAction`12.Argument10" />
        <element api="P:System.Activities.ActivityAction`12.Argument11" />
        <element api="P:System.Activities.ActivityAction`12.Argument12" />
        <element api="P:System.Activities.ActivityAction`12.Argument2" />
        <element api="P:System.Activities.ActivityAction`12.Argument3" />
        <element api="P:System.Activities.ActivityAction`12.Argument4" />
        <element api="P:System.Activities.ActivityAction`12.Argument5" />
        <element api="P:System.Activities.ActivityAction`12.Argument6" />
        <element api="P:System.Activities.ActivityAction`12.Argument7" />
        <element api="P:System.Activities.ActivityAction`12.Argument8" />
        <element api="P:System.Activities.ActivityAction`12.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`12.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`12.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`13">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`13.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`13.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`13.Argument1" />
        <element api="P:System.Activities.ActivityAction`13.Argument10" />
        <element api="P:System.Activities.ActivityAction`13.Argument11" />
        <element api="P:System.Activities.ActivityAction`13.Argument12" />
        <element api="P:System.Activities.ActivityAction`13.Argument13" />
        <element api="P:System.Activities.ActivityAction`13.Argument2" />
        <element api="P:System.Activities.ActivityAction`13.Argument3" />
        <element api="P:System.Activities.ActivityAction`13.Argument4" />
        <element api="P:System.Activities.ActivityAction`13.Argument5" />
        <element api="P:System.Activities.ActivityAction`13.Argument6" />
        <element api="P:System.Activities.ActivityAction`13.Argument7" />
        <element api="P:System.Activities.ActivityAction`13.Argument8" />
        <element api="P:System.Activities.ActivityAction`13.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`13">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`13" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`13.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`13">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`13" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`13.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`13.Argument1" />
        <element api="P:System.Activities.ActivityAction`13.Argument10" />
        <element api="P:System.Activities.ActivityAction`13.Argument11" />
        <element api="P:System.Activities.ActivityAction`13.Argument12" />
        <element api="P:System.Activities.ActivityAction`13.Argument13" />
        <element api="P:System.Activities.ActivityAction`13.Argument2" />
        <element api="P:System.Activities.ActivityAction`13.Argument3" />
        <element api="P:System.Activities.ActivityAction`13.Argument4" />
        <element api="P:System.Activities.ActivityAction`13.Argument5" />
        <element api="P:System.Activities.ActivityAction`13.Argument6" />
        <element api="P:System.Activities.ActivityAction`13.Argument7" />
        <element api="P:System.Activities.ActivityAction`13.Argument8" />
        <element api="P:System.Activities.ActivityAction`13.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`13.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`13.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`14">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`14.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`14.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`14.Argument1" />
        <element api="P:System.Activities.ActivityAction`14.Argument10" />
        <element api="P:System.Activities.ActivityAction`14.Argument11" />
        <element api="P:System.Activities.ActivityAction`14.Argument12" />
        <element api="P:System.Activities.ActivityAction`14.Argument13" />
        <element api="P:System.Activities.ActivityAction`14.Argument14" />
        <element api="P:System.Activities.ActivityAction`14.Argument2" />
        <element api="P:System.Activities.ActivityAction`14.Argument3" />
        <element api="P:System.Activities.ActivityAction`14.Argument4" />
        <element api="P:System.Activities.ActivityAction`14.Argument5" />
        <element api="P:System.Activities.ActivityAction`14.Argument6" />
        <element api="P:System.Activities.ActivityAction`14.Argument7" />
        <element api="P:System.Activities.ActivityAction`14.Argument8" />
        <element api="P:System.Activities.ActivityAction`14.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`14">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`14" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`14.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`14">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`14" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`14.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`14.Argument1" />
        <element api="P:System.Activities.ActivityAction`14.Argument10" />
        <element api="P:System.Activities.ActivityAction`14.Argument11" />
        <element api="P:System.Activities.ActivityAction`14.Argument12" />
        <element api="P:System.Activities.ActivityAction`14.Argument13" />
        <element api="P:System.Activities.ActivityAction`14.Argument14" />
        <element api="P:System.Activities.ActivityAction`14.Argument2" />
        <element api="P:System.Activities.ActivityAction`14.Argument3" />
        <element api="P:System.Activities.ActivityAction`14.Argument4" />
        <element api="P:System.Activities.ActivityAction`14.Argument5" />
        <element api="P:System.Activities.ActivityAction`14.Argument6" />
        <element api="P:System.Activities.ActivityAction`14.Argument7" />
        <element api="P:System.Activities.ActivityAction`14.Argument8" />
        <element api="P:System.Activities.ActivityAction`14.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`14.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`14.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`15">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`15.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`15.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`15.Argument1" />
        <element api="P:System.Activities.ActivityAction`15.Argument10" />
        <element api="P:System.Activities.ActivityAction`15.Argument11" />
        <element api="P:System.Activities.ActivityAction`15.Argument12" />
        <element api="P:System.Activities.ActivityAction`15.Argument13" />
        <element api="P:System.Activities.ActivityAction`15.Argument14" />
        <element api="P:System.Activities.ActivityAction`15.Argument15" />
        <element api="P:System.Activities.ActivityAction`15.Argument2" />
        <element api="P:System.Activities.ActivityAction`15.Argument3" />
        <element api="P:System.Activities.ActivityAction`15.Argument4" />
        <element api="P:System.Activities.ActivityAction`15.Argument5" />
        <element api="P:System.Activities.ActivityAction`15.Argument6" />
        <element api="P:System.Activities.ActivityAction`15.Argument7" />
        <element api="P:System.Activities.ActivityAction`15.Argument8" />
        <element api="P:System.Activities.ActivityAction`15.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`15">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`15" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`15.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`15">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`15" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`15.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`15.Argument1" />
        <element api="P:System.Activities.ActivityAction`15.Argument10" />
        <element api="P:System.Activities.ActivityAction`15.Argument11" />
        <element api="P:System.Activities.ActivityAction`15.Argument12" />
        <element api="P:System.Activities.ActivityAction`15.Argument13" />
        <element api="P:System.Activities.ActivityAction`15.Argument14" />
        <element api="P:System.Activities.ActivityAction`15.Argument15" />
        <element api="P:System.Activities.ActivityAction`15.Argument2" />
        <element api="P:System.Activities.ActivityAction`15.Argument3" />
        <element api="P:System.Activities.ActivityAction`15.Argument4" />
        <element api="P:System.Activities.ActivityAction`15.Argument5" />
        <element api="P:System.Activities.ActivityAction`15.Argument6" />
        <element api="P:System.Activities.ActivityAction`15.Argument7" />
        <element api="P:System.Activities.ActivityAction`15.Argument8" />
        <element api="P:System.Activities.ActivityAction`15.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`15.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`15.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`16">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`16.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`16.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`16.Argument1" />
        <element api="P:System.Activities.ActivityAction`16.Argument10" />
        <element api="P:System.Activities.ActivityAction`16.Argument11" />
        <element api="P:System.Activities.ActivityAction`16.Argument12" />
        <element api="P:System.Activities.ActivityAction`16.Argument13" />
        <element api="P:System.Activities.ActivityAction`16.Argument14" />
        <element api="P:System.Activities.ActivityAction`16.Argument15" />
        <element api="P:System.Activities.ActivityAction`16.Argument16" />
        <element api="P:System.Activities.ActivityAction`16.Argument2" />
        <element api="P:System.Activities.ActivityAction`16.Argument3" />
        <element api="P:System.Activities.ActivityAction`16.Argument4" />
        <element api="P:System.Activities.ActivityAction`16.Argument5" />
        <element api="P:System.Activities.ActivityAction`16.Argument6" />
        <element api="P:System.Activities.ActivityAction`16.Argument7" />
        <element api="P:System.Activities.ActivityAction`16.Argument8" />
        <element api="P:System.Activities.ActivityAction`16.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`16">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`16" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`16.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`16">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`16" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`16.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`16.Argument1" />
        <element api="P:System.Activities.ActivityAction`16.Argument10" />
        <element api="P:System.Activities.ActivityAction`16.Argument11" />
        <element api="P:System.Activities.ActivityAction`16.Argument12" />
        <element api="P:System.Activities.ActivityAction`16.Argument13" />
        <element api="P:System.Activities.ActivityAction`16.Argument14" />
        <element api="P:System.Activities.ActivityAction`16.Argument15" />
        <element api="P:System.Activities.ActivityAction`16.Argument16" />
        <element api="P:System.Activities.ActivityAction`16.Argument2" />
        <element api="P:System.Activities.ActivityAction`16.Argument3" />
        <element api="P:System.Activities.ActivityAction`16.Argument4" />
        <element api="P:System.Activities.ActivityAction`16.Argument5" />
        <element api="P:System.Activities.ActivityAction`16.Argument6" />
        <element api="P:System.Activities.ActivityAction`16.Argument7" />
        <element api="P:System.Activities.ActivityAction`16.Argument8" />
        <element api="P:System.Activities.ActivityAction`16.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`16.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument16">
      <topicdata group="api" />
      <apidata name="Argument16" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument16" />
      <setter name="set_Argument16" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T16" index="15" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`16.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`2">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`2.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`2.Argument1" />
        <element api="P:System.Activities.ActivityAction`2.Argument2" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`2">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`2" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`2.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`2">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`2" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`2.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`2.Argument1" />
        <element api="P:System.Activities.ActivityAction`2.Argument2" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`2" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`2.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`2.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`3">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`3.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`3.Argument1" />
        <element api="P:System.Activities.ActivityAction`3.Argument2" />
        <element api="P:System.Activities.ActivityAction`3.Argument3" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`3">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`3" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`3">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`3" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`3.Argument1" />
        <element api="P:System.Activities.ActivityAction`3.Argument2" />
        <element api="P:System.Activities.ActivityAction`3.Argument3" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`3.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`3.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`3.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`4">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`4.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`4.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`4.Argument1" />
        <element api="P:System.Activities.ActivityAction`4.Argument2" />
        <element api="P:System.Activities.ActivityAction`4.Argument3" />
        <element api="P:System.Activities.ActivityAction`4.Argument4" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`4">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`4" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`4">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`4" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`4.Argument1" />
        <element api="P:System.Activities.ActivityAction`4.Argument2" />
        <element api="P:System.Activities.ActivityAction`4.Argument3" />
        <element api="P:System.Activities.ActivityAction`4.Argument4" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`4.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`4.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`4.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`4.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`4.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`5">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`5.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`5.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`5.Argument1" />
        <element api="P:System.Activities.ActivityAction`5.Argument2" />
        <element api="P:System.Activities.ActivityAction`5.Argument3" />
        <element api="P:System.Activities.ActivityAction`5.Argument4" />
        <element api="P:System.Activities.ActivityAction`5.Argument5" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`5">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`5" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`5">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`5" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`5.Argument1" />
        <element api="P:System.Activities.ActivityAction`5.Argument2" />
        <element api="P:System.Activities.ActivityAction`5.Argument3" />
        <element api="P:System.Activities.ActivityAction`5.Argument4" />
        <element api="P:System.Activities.ActivityAction`5.Argument5" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`5.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`5.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`5.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`5.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`5.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`6">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`6.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`6.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`6.Argument1" />
        <element api="P:System.Activities.ActivityAction`6.Argument2" />
        <element api="P:System.Activities.ActivityAction`6.Argument3" />
        <element api="P:System.Activities.ActivityAction`6.Argument4" />
        <element api="P:System.Activities.ActivityAction`6.Argument5" />
        <element api="P:System.Activities.ActivityAction`6.Argument6" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`6">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`6" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`6">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`6" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`6.Argument1" />
        <element api="P:System.Activities.ActivityAction`6.Argument2" />
        <element api="P:System.Activities.ActivityAction`6.Argument3" />
        <element api="P:System.Activities.ActivityAction`6.Argument4" />
        <element api="P:System.Activities.ActivityAction`6.Argument5" />
        <element api="P:System.Activities.ActivityAction`6.Argument6" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`6.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`6.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`7">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`7.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`7.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`7.Argument1" />
        <element api="P:System.Activities.ActivityAction`7.Argument2" />
        <element api="P:System.Activities.ActivityAction`7.Argument3" />
        <element api="P:System.Activities.ActivityAction`7.Argument4" />
        <element api="P:System.Activities.ActivityAction`7.Argument5" />
        <element api="P:System.Activities.ActivityAction`7.Argument6" />
        <element api="P:System.Activities.ActivityAction`7.Argument7" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`7">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`7" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`7.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`7">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`7" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`7.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`7.Argument1" />
        <element api="P:System.Activities.ActivityAction`7.Argument2" />
        <element api="P:System.Activities.ActivityAction`7.Argument3" />
        <element api="P:System.Activities.ActivityAction`7.Argument4" />
        <element api="P:System.Activities.ActivityAction`7.Argument5" />
        <element api="P:System.Activities.ActivityAction`7.Argument6" />
        <element api="P:System.Activities.ActivityAction`7.Argument7" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`7.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`7.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`8">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`8.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`8.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`8.Argument1" />
        <element api="P:System.Activities.ActivityAction`8.Argument2" />
        <element api="P:System.Activities.ActivityAction`8.Argument3" />
        <element api="P:System.Activities.ActivityAction`8.Argument4" />
        <element api="P:System.Activities.ActivityAction`8.Argument5" />
        <element api="P:System.Activities.ActivityAction`8.Argument6" />
        <element api="P:System.Activities.ActivityAction`8.Argument7" />
        <element api="P:System.Activities.ActivityAction`8.Argument8" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`8">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`8" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`8.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`8">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`8" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`8.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`8.Argument1" />
        <element api="P:System.Activities.ActivityAction`8.Argument2" />
        <element api="P:System.Activities.ActivityAction`8.Argument3" />
        <element api="P:System.Activities.ActivityAction`8.Argument4" />
        <element api="P:System.Activities.ActivityAction`8.Argument5" />
        <element api="P:System.Activities.ActivityAction`8.Argument6" />
        <element api="P:System.Activities.ActivityAction`8.Argument7" />
        <element api="P:System.Activities.ActivityAction`8.Argument8" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`8.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`8.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityAction`9">
      <topicdata group="api" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`9.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityAction`9.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityAction`9.Argument1" />
        <element api="P:System.Activities.ActivityAction`9.Argument2" />
        <element api="P:System.Activities.ActivityAction`9.Argument3" />
        <element api="P:System.Activities.ActivityAction`9.Argument4" />
        <element api="P:System.Activities.ActivityAction`9.Argument5" />
        <element api="P:System.Activities.ActivityAction`9.Argument6" />
        <element api="P:System.Activities.ActivityAction`9.Argument7" />
        <element api="P:System.Activities.ActivityAction`9.Argument8" />
        <element api="P:System.Activities.ActivityAction`9.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityAction`9">
      <topicdata name="ActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityAction`9" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`9.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityAction`9">
      <topicdata name="ActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityAction`9" />
      <apidata name="ActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityAction`9.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityAction`9.Argument1" />
        <element api="P:System.Activities.ActivityAction`9.Argument2" />
        <element api="P:System.Activities.ActivityAction`9.Argument3" />
        <element api="P:System.Activities.ActivityAction`9.Argument4" />
        <element api="P:System.Activities.ActivityAction`9.Argument5" />
        <element api="P:System.Activities.ActivityAction`9.Argument6" />
        <element api="P:System.Activities.ActivityAction`9.Argument7" />
        <element api="P:System.Activities.ActivityAction`9.Argument8" />
        <element api="P:System.Activities.ActivityAction`9.Argument9" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityAction`9.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityAction`9.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityAction`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityAction`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityBuilder">
      <topicdata group="api" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder.#ctor" contentProperty="P:System.Activities.ActivityBuilder.Implementation" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.ActivityBuilder.#ctor" />
        <element api="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.GetPropertyReferences(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)" />
        <element api="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReference(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReferences(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityBuilder.Attributes" />
        <element api="P:System.Activities.ActivityBuilder.Constraints" />
        <element api="P:System.Activities.ActivityBuilder.Implementation" />
        <element api="P:System.Activities.ActivityBuilder.ImplementationVersion" />
        <element api="P:System.Activities.ActivityBuilder.Name" />
        <element api="P:System.Activities.ActivityBuilder.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.ActivityBuilder">
      <topicdata name="ActivityBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityBuilder" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder.#ctor" contentProperty="P:System.Activities.ActivityBuilder.Implementation" />
      <elements>
        <element api="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.GetPropertyReferences(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)" />
        <element api="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReference(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReferences(System.Object)" />
        <element api="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityBuilder">
      <topicdata name="ActivityBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityBuilder" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder.#ctor" contentProperty="P:System.Activities.ActivityBuilder.Implementation" />
      <elements>
        <element api="P:System.Activities.ActivityBuilder.Attributes" />
        <element api="P:System.Activities.ActivityBuilder.Constraints" />
        <element api="P:System.Activities.ActivityBuilder.Implementation" />
        <element api="P:System.Activities.ActivityBuilder.ImplementationVersion" />
        <element api="P:System.Activities.ActivityBuilder.Name" />
        <element api="P:System.Activities.ActivityBuilder.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Validation.Constraint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.ActivityBuilder.GetPropertyReference(System.Object)">
      <topicdata group="api" />
      <apidata name="GetPropertyReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder.GetPropertyReferences(System.Object)">
      <topicdata group="api" />
      <apidata name="GetPropertyReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityBuilder.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityBuilder.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.ActivityBuilder.SetPropertyReference(System.Object,System.Activities.ActivityPropertyReference)">
      <topicdata group="api" />
      <apidata name="SetPropertyReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReference(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializePropertyReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder.ShouldSerializePropertyReferences(System.Object)">
      <topicdata group="api" />
      <apidata name="ShouldSerializePropertyReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <topicdata group="api" eiiName="IDebuggableWorkflowTree.GetWorkflowRoot" />
      <apidata name="GetWorkflowRoot" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot">
          <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityBuilder`1">
      <topicdata group="api" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder`1.#ctor" contentProperty="P:System.Activities.ActivityBuilder`1.Implementation" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <implements>
        <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.ActivityBuilder`1.#ctor" />
        <element api="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityBuilder`1.Attributes" />
        <element api="P:System.Activities.ActivityBuilder`1.Constraints" />
        <element api="P:System.Activities.ActivityBuilder`1.Implementation" />
        <element api="P:System.Activities.ActivityBuilder`1.ImplementationVersion" />
        <element api="P:System.Activities.ActivityBuilder`1.Name" />
        <element api="P:System.Activities.ActivityBuilder`1.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.ActivityBuilder`1">
      <topicdata name="ActivityBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityBuilder`1" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder`1.#ctor" contentProperty="P:System.Activities.ActivityBuilder`1.Implementation" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityBuilder`1">
      <topicdata name="ActivityBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityBuilder`1" />
      <apidata name="ActivityBuilder" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityBuilder`1.#ctor" contentProperty="P:System.Activities.ActivityBuilder`1.Implementation" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityBuilder`1.Attributes" />
        <element api="P:System.Activities.ActivityBuilder`1.Constraints" />
        <element api="P:System.Activities.ActivityBuilder`1.Implementation" />
        <element api="P:System.Activities.ActivityBuilder`1.ImplementationVersion" />
        <element api="P:System.Activities.ActivityBuilder`1.Name" />
        <element api="P:System.Activities.ActivityBuilder`1.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityBuilder`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Validation.Constraint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityBuilder`1.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.ActivityBuilder`1.System#Activities#Debugger#IDebuggableWorkflowTree#GetWorkflowRoot">
      <topicdata group="api" eiiName="IDebuggableWorkflowTree.GetWorkflowRoot" />
      <apidata name="GetWorkflowRoot" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Activities.Debugger.IDebuggableWorkflowTree.GetWorkflowRoot">
          <type api="T:System.Activities.Debugger.IDebuggableWorkflowTree" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityBuilder`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityContext">
      <topicdata group="api" />
      <apidata name="ActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
          <type api="T:System.Activities.NativeActivityAbortContext" ref="true" />
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.ActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.ActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityContext">
      <topicdata name="ActivityContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityContext" />
      <apidata name="ActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.ActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.ActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityContext">
      <topicdata name="ActivityContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityContext" />
      <apidata name="ActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityContext.GetValue">
      <topicdata name="GetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityContext.SetValue">
      <topicdata name="SetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityContext.ActivityInstanceId">
      <topicdata group="api" />
      <apidata name="ActivityInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActivityInstanceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityContext.DataContext">
      <topicdata group="api" />
      <apidata name="DataContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataContext" />
      <returns>
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetExtension``1">
      <topicdata group="api" />
      <apidata name="GetExtension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.Activities.ActivityContext.GetExtension``1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="locationReference">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.InArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.InOutArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="locationReference">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.OutArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="runtimeArgument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.InArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.InOutArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="locationReference">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.OutArgument`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityContext.WorkflowInstanceId">
      <topicdata group="api" />
      <apidata name="WorkflowInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityDelegate">
      <topicdata group="api" />
      <apidata name="ActivityDelegate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.ActivityAction" ref="true" />
          <type api="T:System.Activities.ActivityAction`1" ref="true" />
          <type api="T:System.Activities.ActivityAction`2" ref="true" />
          <type api="T:System.Activities.ActivityAction`3" ref="true" />
          <type api="T:System.Activities.ActivityAction`4" ref="true" />
          <type api="T:System.Activities.ActivityAction`5" ref="true" />
          <type api="T:System.Activities.ActivityAction`6" ref="true" />
          <type api="T:System.Activities.ActivityAction`7" ref="true" />
          <type api="T:System.Activities.ActivityAction`8" ref="true" />
          <type api="T:System.Activities.ActivityAction`9" ref="true" />
          <type api="T:System.Activities.ActivityAction`10" ref="true" />
          <type api="T:System.Activities.ActivityAction`11" ref="true" />
          <type api="T:System.Activities.ActivityAction`12" ref="true" />
          <type api="T:System.Activities.ActivityAction`13" ref="true" />
          <type api="T:System.Activities.ActivityAction`14" ref="true" />
          <type api="T:System.Activities.ActivityAction`15" ref="true" />
          <type api="T:System.Activities.ActivityAction`16" ref="true" />
          <type api="T:System.Activities.ActivityFunc`1" ref="true" />
          <type api="T:System.Activities.ActivityFunc`2" ref="true" />
          <type api="T:System.Activities.ActivityFunc`3" ref="true" />
          <type api="T:System.Activities.ActivityFunc`4" ref="true" />
          <type api="T:System.Activities.ActivityFunc`5" ref="true" />
          <type api="T:System.Activities.ActivityFunc`6" ref="true" />
          <type api="T:System.Activities.ActivityFunc`7" ref="true" />
          <type api="T:System.Activities.ActivityFunc`8" ref="true" />
          <type api="T:System.Activities.ActivityFunc`9" ref="true" />
          <type api="T:System.Activities.ActivityFunc`10" ref="true" />
          <type api="T:System.Activities.ActivityFunc`11" ref="true" />
          <type api="T:System.Activities.ActivityFunc`12" ref="true" />
          <type api="T:System.Activities.ActivityFunc`13" ref="true" />
          <type api="T:System.Activities.ActivityFunc`14" ref="true" />
          <type api="T:System.Activities.ActivityFunc`15" ref="true" />
          <type api="T:System.Activities.ActivityFunc`16" ref="true" />
          <type api="T:System.Activities.ActivityFunc`17" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.#ctor" />
        <element api="M:System.Activities.ActivityDelegate.GetResultArgument" />
        <element api="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Handler</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.ActivityDelegate">
      <topicdata name="ActivityDelegate" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityDelegate" />
      <apidata name="ActivityDelegate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
      <elements>
        <element api="M:System.Activities.ActivityDelegate.GetResultArgument" />
        <element api="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})" />
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityDelegate">
      <topicdata name="ActivityDelegate" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityDelegate" />
      <apidata name="ActivityDelegate" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityDelegate.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityDelegate.DisplayName">
      <topicdata group="api" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DisplayName" />
      <setter name="set_DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityDelegate.GetResultArgument">
      <topicdata group="api" />
      <apidata name="GetResultArgument" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityDelegate.Handler">
      <topicdata group="api" />
      <apidata name="Handler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Handler" />
      <setter name="set_Handler" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})">
      <topicdata group="api" />
      <apidata name="OnGetRuntimeDelegateArguments" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="runtimeDelegateArguments">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityDelegate.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityDelegate" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityFunc`1">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`1.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`1.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`1">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`1" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`1">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`1" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`1.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`1" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`1.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Activities.ActivityFunc`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`10">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`10.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`10.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`10.Argument1" />
        <element api="P:System.Activities.ActivityFunc`10.Argument2" />
        <element api="P:System.Activities.ActivityFunc`10.Argument3" />
        <element api="P:System.Activities.ActivityFunc`10.Argument4" />
        <element api="P:System.Activities.ActivityFunc`10.Argument5" />
        <element api="P:System.Activities.ActivityFunc`10.Argument6" />
        <element api="P:System.Activities.ActivityFunc`10.Argument7" />
        <element api="P:System.Activities.ActivityFunc`10.Argument8" />
        <element api="P:System.Activities.ActivityFunc`10.Argument9" />
        <element api="P:System.Activities.ActivityFunc`10.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`10">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`10" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`10.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`10">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`10" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`10.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`10.Argument1" />
        <element api="P:System.Activities.ActivityFunc`10.Argument2" />
        <element api="P:System.Activities.ActivityFunc`10.Argument3" />
        <element api="P:System.Activities.ActivityFunc`10.Argument4" />
        <element api="P:System.Activities.ActivityFunc`10.Argument5" />
        <element api="P:System.Activities.ActivityFunc`10.Argument6" />
        <element api="P:System.Activities.ActivityFunc`10.Argument7" />
        <element api="P:System.Activities.ActivityFunc`10.Argument8" />
        <element api="P:System.Activities.ActivityFunc`10.Argument9" />
        <element api="P:System.Activities.ActivityFunc`10.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`10.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`10.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="9" api="T:System.Activities.ActivityFunc`10" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`10" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`11">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`11.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`11.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`11.Argument1" />
        <element api="P:System.Activities.ActivityFunc`11.Argument10" />
        <element api="P:System.Activities.ActivityFunc`11.Argument2" />
        <element api="P:System.Activities.ActivityFunc`11.Argument3" />
        <element api="P:System.Activities.ActivityFunc`11.Argument4" />
        <element api="P:System.Activities.ActivityFunc`11.Argument5" />
        <element api="P:System.Activities.ActivityFunc`11.Argument6" />
        <element api="P:System.Activities.ActivityFunc`11.Argument7" />
        <element api="P:System.Activities.ActivityFunc`11.Argument8" />
        <element api="P:System.Activities.ActivityFunc`11.Argument9" />
        <element api="P:System.Activities.ActivityFunc`11.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`11">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`11" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`11.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`11">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`11" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`11.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`11.Argument1" />
        <element api="P:System.Activities.ActivityFunc`11.Argument10" />
        <element api="P:System.Activities.ActivityFunc`11.Argument2" />
        <element api="P:System.Activities.ActivityFunc`11.Argument3" />
        <element api="P:System.Activities.ActivityFunc`11.Argument4" />
        <element api="P:System.Activities.ActivityFunc`11.Argument5" />
        <element api="P:System.Activities.ActivityFunc`11.Argument6" />
        <element api="P:System.Activities.ActivityFunc`11.Argument7" />
        <element api="P:System.Activities.ActivityFunc`11.Argument8" />
        <element api="P:System.Activities.ActivityFunc`11.Argument9" />
        <element api="P:System.Activities.ActivityFunc`11.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`11.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`11.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="10" api="T:System.Activities.ActivityFunc`11" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`11" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`12">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`12.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`12.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`12.Argument1" />
        <element api="P:System.Activities.ActivityFunc`12.Argument10" />
        <element api="P:System.Activities.ActivityFunc`12.Argument11" />
        <element api="P:System.Activities.ActivityFunc`12.Argument2" />
        <element api="P:System.Activities.ActivityFunc`12.Argument3" />
        <element api="P:System.Activities.ActivityFunc`12.Argument4" />
        <element api="P:System.Activities.ActivityFunc`12.Argument5" />
        <element api="P:System.Activities.ActivityFunc`12.Argument6" />
        <element api="P:System.Activities.ActivityFunc`12.Argument7" />
        <element api="P:System.Activities.ActivityFunc`12.Argument8" />
        <element api="P:System.Activities.ActivityFunc`12.Argument9" />
        <element api="P:System.Activities.ActivityFunc`12.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`12">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`12" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`12.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`12">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`12" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`12.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`12.Argument1" />
        <element api="P:System.Activities.ActivityFunc`12.Argument10" />
        <element api="P:System.Activities.ActivityFunc`12.Argument11" />
        <element api="P:System.Activities.ActivityFunc`12.Argument2" />
        <element api="P:System.Activities.ActivityFunc`12.Argument3" />
        <element api="P:System.Activities.ActivityFunc`12.Argument4" />
        <element api="P:System.Activities.ActivityFunc`12.Argument5" />
        <element api="P:System.Activities.ActivityFunc`12.Argument6" />
        <element api="P:System.Activities.ActivityFunc`12.Argument7" />
        <element api="P:System.Activities.ActivityFunc`12.Argument8" />
        <element api="P:System.Activities.ActivityFunc`12.Argument9" />
        <element api="P:System.Activities.ActivityFunc`12.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`12.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`12.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="11" api="T:System.Activities.ActivityFunc`12" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`12" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`13">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`13.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`13.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`13.Argument1" />
        <element api="P:System.Activities.ActivityFunc`13.Argument10" />
        <element api="P:System.Activities.ActivityFunc`13.Argument11" />
        <element api="P:System.Activities.ActivityFunc`13.Argument12" />
        <element api="P:System.Activities.ActivityFunc`13.Argument2" />
        <element api="P:System.Activities.ActivityFunc`13.Argument3" />
        <element api="P:System.Activities.ActivityFunc`13.Argument4" />
        <element api="P:System.Activities.ActivityFunc`13.Argument5" />
        <element api="P:System.Activities.ActivityFunc`13.Argument6" />
        <element api="P:System.Activities.ActivityFunc`13.Argument7" />
        <element api="P:System.Activities.ActivityFunc`13.Argument8" />
        <element api="P:System.Activities.ActivityFunc`13.Argument9" />
        <element api="P:System.Activities.ActivityFunc`13.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`13">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`13" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`13.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`13">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`13" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`13.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`13.Argument1" />
        <element api="P:System.Activities.ActivityFunc`13.Argument10" />
        <element api="P:System.Activities.ActivityFunc`13.Argument11" />
        <element api="P:System.Activities.ActivityFunc`13.Argument12" />
        <element api="P:System.Activities.ActivityFunc`13.Argument2" />
        <element api="P:System.Activities.ActivityFunc`13.Argument3" />
        <element api="P:System.Activities.ActivityFunc`13.Argument4" />
        <element api="P:System.Activities.ActivityFunc`13.Argument5" />
        <element api="P:System.Activities.ActivityFunc`13.Argument6" />
        <element api="P:System.Activities.ActivityFunc`13.Argument7" />
        <element api="P:System.Activities.ActivityFunc`13.Argument8" />
        <element api="P:System.Activities.ActivityFunc`13.Argument9" />
        <element api="P:System.Activities.ActivityFunc`13.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`13.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`13.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="12" api="T:System.Activities.ActivityFunc`13" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`13" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`14">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`14.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`14.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`14.Argument1" />
        <element api="P:System.Activities.ActivityFunc`14.Argument10" />
        <element api="P:System.Activities.ActivityFunc`14.Argument11" />
        <element api="P:System.Activities.ActivityFunc`14.Argument12" />
        <element api="P:System.Activities.ActivityFunc`14.Argument13" />
        <element api="P:System.Activities.ActivityFunc`14.Argument2" />
        <element api="P:System.Activities.ActivityFunc`14.Argument3" />
        <element api="P:System.Activities.ActivityFunc`14.Argument4" />
        <element api="P:System.Activities.ActivityFunc`14.Argument5" />
        <element api="P:System.Activities.ActivityFunc`14.Argument6" />
        <element api="P:System.Activities.ActivityFunc`14.Argument7" />
        <element api="P:System.Activities.ActivityFunc`14.Argument8" />
        <element api="P:System.Activities.ActivityFunc`14.Argument9" />
        <element api="P:System.Activities.ActivityFunc`14.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`14">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`14" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`14.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`14">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`14" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`14.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`14.Argument1" />
        <element api="P:System.Activities.ActivityFunc`14.Argument10" />
        <element api="P:System.Activities.ActivityFunc`14.Argument11" />
        <element api="P:System.Activities.ActivityFunc`14.Argument12" />
        <element api="P:System.Activities.ActivityFunc`14.Argument13" />
        <element api="P:System.Activities.ActivityFunc`14.Argument2" />
        <element api="P:System.Activities.ActivityFunc`14.Argument3" />
        <element api="P:System.Activities.ActivityFunc`14.Argument4" />
        <element api="P:System.Activities.ActivityFunc`14.Argument5" />
        <element api="P:System.Activities.ActivityFunc`14.Argument6" />
        <element api="P:System.Activities.ActivityFunc`14.Argument7" />
        <element api="P:System.Activities.ActivityFunc`14.Argument8" />
        <element api="P:System.Activities.ActivityFunc`14.Argument9" />
        <element api="P:System.Activities.ActivityFunc`14.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`14.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`14.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="13" api="T:System.Activities.ActivityFunc`14" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`14" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`15">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`15.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`15.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`15.Argument1" />
        <element api="P:System.Activities.ActivityFunc`15.Argument10" />
        <element api="P:System.Activities.ActivityFunc`15.Argument11" />
        <element api="P:System.Activities.ActivityFunc`15.Argument12" />
        <element api="P:System.Activities.ActivityFunc`15.Argument13" />
        <element api="P:System.Activities.ActivityFunc`15.Argument14" />
        <element api="P:System.Activities.ActivityFunc`15.Argument2" />
        <element api="P:System.Activities.ActivityFunc`15.Argument3" />
        <element api="P:System.Activities.ActivityFunc`15.Argument4" />
        <element api="P:System.Activities.ActivityFunc`15.Argument5" />
        <element api="P:System.Activities.ActivityFunc`15.Argument6" />
        <element api="P:System.Activities.ActivityFunc`15.Argument7" />
        <element api="P:System.Activities.ActivityFunc`15.Argument8" />
        <element api="P:System.Activities.ActivityFunc`15.Argument9" />
        <element api="P:System.Activities.ActivityFunc`15.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`15">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`15" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`15.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`15">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`15" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`15.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`15.Argument1" />
        <element api="P:System.Activities.ActivityFunc`15.Argument10" />
        <element api="P:System.Activities.ActivityFunc`15.Argument11" />
        <element api="P:System.Activities.ActivityFunc`15.Argument12" />
        <element api="P:System.Activities.ActivityFunc`15.Argument13" />
        <element api="P:System.Activities.ActivityFunc`15.Argument14" />
        <element api="P:System.Activities.ActivityFunc`15.Argument2" />
        <element api="P:System.Activities.ActivityFunc`15.Argument3" />
        <element api="P:System.Activities.ActivityFunc`15.Argument4" />
        <element api="P:System.Activities.ActivityFunc`15.Argument5" />
        <element api="P:System.Activities.ActivityFunc`15.Argument6" />
        <element api="P:System.Activities.ActivityFunc`15.Argument7" />
        <element api="P:System.Activities.ActivityFunc`15.Argument8" />
        <element api="P:System.Activities.ActivityFunc`15.Argument9" />
        <element api="P:System.Activities.ActivityFunc`15.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`15.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`15.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="14" api="T:System.Activities.ActivityFunc`15" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`15" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`16">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`16.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`16.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`16.Argument1" />
        <element api="P:System.Activities.ActivityFunc`16.Argument10" />
        <element api="P:System.Activities.ActivityFunc`16.Argument11" />
        <element api="P:System.Activities.ActivityFunc`16.Argument12" />
        <element api="P:System.Activities.ActivityFunc`16.Argument13" />
        <element api="P:System.Activities.ActivityFunc`16.Argument14" />
        <element api="P:System.Activities.ActivityFunc`16.Argument15" />
        <element api="P:System.Activities.ActivityFunc`16.Argument2" />
        <element api="P:System.Activities.ActivityFunc`16.Argument3" />
        <element api="P:System.Activities.ActivityFunc`16.Argument4" />
        <element api="P:System.Activities.ActivityFunc`16.Argument5" />
        <element api="P:System.Activities.ActivityFunc`16.Argument6" />
        <element api="P:System.Activities.ActivityFunc`16.Argument7" />
        <element api="P:System.Activities.ActivityFunc`16.Argument8" />
        <element api="P:System.Activities.ActivityFunc`16.Argument9" />
        <element api="P:System.Activities.ActivityFunc`16.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`16">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`16" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`16.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`16">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`16" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`16.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`16.Argument1" />
        <element api="P:System.Activities.ActivityFunc`16.Argument10" />
        <element api="P:System.Activities.ActivityFunc`16.Argument11" />
        <element api="P:System.Activities.ActivityFunc`16.Argument12" />
        <element api="P:System.Activities.ActivityFunc`16.Argument13" />
        <element api="P:System.Activities.ActivityFunc`16.Argument14" />
        <element api="P:System.Activities.ActivityFunc`16.Argument15" />
        <element api="P:System.Activities.ActivityFunc`16.Argument2" />
        <element api="P:System.Activities.ActivityFunc`16.Argument3" />
        <element api="P:System.Activities.ActivityFunc`16.Argument4" />
        <element api="P:System.Activities.ActivityFunc`16.Argument5" />
        <element api="P:System.Activities.ActivityFunc`16.Argument6" />
        <element api="P:System.Activities.ActivityFunc`16.Argument7" />
        <element api="P:System.Activities.ActivityFunc`16.Argument8" />
        <element api="P:System.Activities.ActivityFunc`16.Argument9" />
        <element api="P:System.Activities.ActivityFunc`16.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`16.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`16.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="15" api="T:System.Activities.ActivityFunc`16" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`16" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`17">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`17.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`17.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`17.Argument1" />
        <element api="P:System.Activities.ActivityFunc`17.Argument10" />
        <element api="P:System.Activities.ActivityFunc`17.Argument11" />
        <element api="P:System.Activities.ActivityFunc`17.Argument12" />
        <element api="P:System.Activities.ActivityFunc`17.Argument13" />
        <element api="P:System.Activities.ActivityFunc`17.Argument14" />
        <element api="P:System.Activities.ActivityFunc`17.Argument15" />
        <element api="P:System.Activities.ActivityFunc`17.Argument16" />
        <element api="P:System.Activities.ActivityFunc`17.Argument2" />
        <element api="P:System.Activities.ActivityFunc`17.Argument3" />
        <element api="P:System.Activities.ActivityFunc`17.Argument4" />
        <element api="P:System.Activities.ActivityFunc`17.Argument5" />
        <element api="P:System.Activities.ActivityFunc`17.Argument6" />
        <element api="P:System.Activities.ActivityFunc`17.Argument7" />
        <element api="P:System.Activities.ActivityFunc`17.Argument8" />
        <element api="P:System.Activities.ActivityFunc`17.Argument9" />
        <element api="P:System.Activities.ActivityFunc`17.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`17">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`17" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`17.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`17">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`17" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`17.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`17.Argument1" />
        <element api="P:System.Activities.ActivityFunc`17.Argument10" />
        <element api="P:System.Activities.ActivityFunc`17.Argument11" />
        <element api="P:System.Activities.ActivityFunc`17.Argument12" />
        <element api="P:System.Activities.ActivityFunc`17.Argument13" />
        <element api="P:System.Activities.ActivityFunc`17.Argument14" />
        <element api="P:System.Activities.ActivityFunc`17.Argument15" />
        <element api="P:System.Activities.ActivityFunc`17.Argument16" />
        <element api="P:System.Activities.ActivityFunc`17.Argument2" />
        <element api="P:System.Activities.ActivityFunc`17.Argument3" />
        <element api="P:System.Activities.ActivityFunc`17.Argument4" />
        <element api="P:System.Activities.ActivityFunc`17.Argument5" />
        <element api="P:System.Activities.ActivityFunc`17.Argument6" />
        <element api="P:System.Activities.ActivityFunc`17.Argument7" />
        <element api="P:System.Activities.ActivityFunc`17.Argument8" />
        <element api="P:System.Activities.ActivityFunc`17.Argument9" />
        <element api="P:System.Activities.ActivityFunc`17.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`17.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument10">
      <topicdata group="api" />
      <apidata name="Argument10" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument10" />
      <setter name="set_Argument10" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T10" index="9" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument11">
      <topicdata group="api" />
      <apidata name="Argument11" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument11" />
      <setter name="set_Argument11" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T11" index="10" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument12">
      <topicdata group="api" />
      <apidata name="Argument12" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument12" />
      <setter name="set_Argument12" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T12" index="11" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument13">
      <topicdata group="api" />
      <apidata name="Argument13" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument13" />
      <setter name="set_Argument13" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T13" index="12" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument14">
      <topicdata group="api" />
      <apidata name="Argument14" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument14" />
      <setter name="set_Argument14" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T14" index="13" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument15">
      <topicdata group="api" />
      <apidata name="Argument15" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument15" />
      <setter name="set_Argument15" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T15" index="14" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument16">
      <topicdata group="api" />
      <apidata name="Argument16" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument16" />
      <setter name="set_Argument16" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T16" index="15" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Argument9">
      <topicdata group="api" />
      <apidata name="Argument9" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument9" />
      <setter name="set_Argument9" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T9" index="8" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`17.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="16" api="T:System.Activities.ActivityFunc`17" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`17" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`2">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`2.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`2.Argument" />
        <element api="P:System.Activities.ActivityFunc`2.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`2">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`2" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`2.#ctor" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`2" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`2">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`2" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`2.#ctor" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`2.Argument" />
        <element api="P:System.Activities.ActivityFunc`2.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`2" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`2" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`2.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument" />
      <setter name="set_Argument" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.ActivityFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`2.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="T:System.Activities.ActivityFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`3">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`3.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`3.Argument1" />
        <element api="P:System.Activities.ActivityFunc`3.Argument2" />
        <element api="P:System.Activities.ActivityFunc`3.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`3">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`3" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`3">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`3" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`3.Argument1" />
        <element api="P:System.Activities.ActivityFunc`3.Argument2" />
        <element api="P:System.Activities.ActivityFunc`3.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`3.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`3.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`3.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="T:System.Activities.ActivityFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`4">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`4.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`4.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`4.Argument1" />
        <element api="P:System.Activities.ActivityFunc`4.Argument2" />
        <element api="P:System.Activities.ActivityFunc`4.Argument3" />
        <element api="P:System.Activities.ActivityFunc`4.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`4">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`4" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`4">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`4" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`4.Argument1" />
        <element api="P:System.Activities.ActivityFunc`4.Argument2" />
        <element api="P:System.Activities.ActivityFunc`4.Argument3" />
        <element api="P:System.Activities.ActivityFunc`4.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`4.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`4.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`4.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`4.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`4.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="T:System.Activities.ActivityFunc`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`5">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`5.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`5.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`5.Argument1" />
        <element api="P:System.Activities.ActivityFunc`5.Argument2" />
        <element api="P:System.Activities.ActivityFunc`5.Argument3" />
        <element api="P:System.Activities.ActivityFunc`5.Argument4" />
        <element api="P:System.Activities.ActivityFunc`5.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`5">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`5" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`5">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`5" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`5.Argument1" />
        <element api="P:System.Activities.ActivityFunc`5.Argument2" />
        <element api="P:System.Activities.ActivityFunc`5.Argument3" />
        <element api="P:System.Activities.ActivityFunc`5.Argument4" />
        <element api="P:System.Activities.ActivityFunc`5.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`5.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`5.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`5.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`5.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`5.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="4" api="T:System.Activities.ActivityFunc`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`6">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`6.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`6.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`6.Argument1" />
        <element api="P:System.Activities.ActivityFunc`6.Argument2" />
        <element api="P:System.Activities.ActivityFunc`6.Argument3" />
        <element api="P:System.Activities.ActivityFunc`6.Argument4" />
        <element api="P:System.Activities.ActivityFunc`6.Argument5" />
        <element api="P:System.Activities.ActivityFunc`6.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`6">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`6" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`6">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`6" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`6.Argument1" />
        <element api="P:System.Activities.ActivityFunc`6.Argument2" />
        <element api="P:System.Activities.ActivityFunc`6.Argument3" />
        <element api="P:System.Activities.ActivityFunc`6.Argument4" />
        <element api="P:System.Activities.ActivityFunc`6.Argument5" />
        <element api="P:System.Activities.ActivityFunc`6.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`6.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`6.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="5" api="T:System.Activities.ActivityFunc`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`7">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`7.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`7.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`7.Argument1" />
        <element api="P:System.Activities.ActivityFunc`7.Argument2" />
        <element api="P:System.Activities.ActivityFunc`7.Argument3" />
        <element api="P:System.Activities.ActivityFunc`7.Argument4" />
        <element api="P:System.Activities.ActivityFunc`7.Argument5" />
        <element api="P:System.Activities.ActivityFunc`7.Argument6" />
        <element api="P:System.Activities.ActivityFunc`7.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`7">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`7" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`7.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`7">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`7" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`7.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`7.Argument1" />
        <element api="P:System.Activities.ActivityFunc`7.Argument2" />
        <element api="P:System.Activities.ActivityFunc`7.Argument3" />
        <element api="P:System.Activities.ActivityFunc`7.Argument4" />
        <element api="P:System.Activities.ActivityFunc`7.Argument5" />
        <element api="P:System.Activities.ActivityFunc`7.Argument6" />
        <element api="P:System.Activities.ActivityFunc`7.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`7.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`7.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="6" api="T:System.Activities.ActivityFunc`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`8">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`8.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`8.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`8.Argument1" />
        <element api="P:System.Activities.ActivityFunc`8.Argument2" />
        <element api="P:System.Activities.ActivityFunc`8.Argument3" />
        <element api="P:System.Activities.ActivityFunc`8.Argument4" />
        <element api="P:System.Activities.ActivityFunc`8.Argument5" />
        <element api="P:System.Activities.ActivityFunc`8.Argument6" />
        <element api="P:System.Activities.ActivityFunc`8.Argument7" />
        <element api="P:System.Activities.ActivityFunc`8.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`8">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`8" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`8.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`8">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`8" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`8.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`8.Argument1" />
        <element api="P:System.Activities.ActivityFunc`8.Argument2" />
        <element api="P:System.Activities.ActivityFunc`8.Argument3" />
        <element api="P:System.Activities.ActivityFunc`8.Argument4" />
        <element api="P:System.Activities.ActivityFunc`8.Argument5" />
        <element api="P:System.Activities.ActivityFunc`8.Argument6" />
        <element api="P:System.Activities.ActivityFunc`8.Argument7" />
        <element api="P:System.Activities.ActivityFunc`8.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`8.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`8.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="7" api="T:System.Activities.ActivityFunc`8" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`8" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityFunc`9">
      <topicdata group="api" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`9.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityDelegate" ref="true" contentProperty="P:System.Activities.ActivityDelegate.Handler" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Activities.ActivityFunc`9.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`9.Argument1" />
        <element api="P:System.Activities.ActivityFunc`9.Argument2" />
        <element api="P:System.Activities.ActivityFunc`9.Argument3" />
        <element api="P:System.Activities.ActivityFunc`9.Argument4" />
        <element api="P:System.Activities.ActivityFunc`9.Argument5" />
        <element api="P:System.Activities.ActivityFunc`9.Argument6" />
        <element api="P:System.Activities.ActivityFunc`9.Argument7" />
        <element api="P:System.Activities.ActivityFunc`9.Argument8" />
        <element api="P:System.Activities.ActivityFunc`9.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityFunc`9">
      <topicdata name="ActivityFunc" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityFunc`9" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`9.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.ActivityDelegate.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityFunc`9">
      <topicdata name="ActivityFunc" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityFunc`9" />
      <apidata name="ActivityFunc" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.ActivityFunc`9.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.ActivityDelegate.DisplayName" />
        <element api="P:System.Activities.ActivityDelegate.Handler" />
        <element api="P:System.Activities.ActivityFunc`9.Argument1" />
        <element api="P:System.Activities.ActivityFunc`9.Argument2" />
        <element api="P:System.Activities.ActivityFunc`9.Argument3" />
        <element api="P:System.Activities.ActivityFunc`9.Argument4" />
        <element api="P:System.Activities.ActivityFunc`9.Argument5" />
        <element api="P:System.Activities.ActivityFunc`9.Argument6" />
        <element api="P:System.Activities.ActivityFunc`9.Argument7" />
        <element api="P:System.Activities.ActivityFunc`9.Argument8" />
        <element api="P:System.Activities.ActivityFunc`9.Result" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityFunc`9.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument1">
      <topicdata group="api" />
      <apidata name="Argument1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument1" />
      <setter name="set_Argument1" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument2">
      <topicdata group="api" />
      <apidata name="Argument2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument2" />
      <setter name="set_Argument2" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument3">
      <topicdata group="api" />
      <apidata name="Argument3" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument3" />
      <setter name="set_Argument3" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T3" index="2" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument4">
      <topicdata group="api" />
      <apidata name="Argument4" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument4" />
      <setter name="set_Argument4" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T4" index="3" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument5">
      <topicdata group="api" />
      <apidata name="Argument5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument5" />
      <setter name="set_Argument5" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T5" index="4" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument6">
      <topicdata group="api" />
      <apidata name="Argument6" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument6" />
      <setter name="set_Argument6" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T6" index="5" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument7">
      <topicdata group="api" />
      <apidata name="Argument7" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument7" />
      <setter name="set_Argument7" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T7" index="6" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Argument8">
      <topicdata group="api" />
      <apidata name="Argument8" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Argument8" />
      <setter name="set_Argument8" />
      <returns>
        <type api="T:System.Activities.DelegateInArgument`1" ref="true">
          <specialization>
            <template name="T8" index="7" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityFunc`9.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true">
          <specialization>
            <template name="TResult" index="8" api="T:System.Activities.ActivityFunc`9" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityFunc`9" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityInstance">
      <topicdata group="api" />
      <apidata name="ActivityInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityInstance.Activity" />
        <element api="P:System.Activities.ActivityInstance.Id" />
        <element api="P:System.Activities.ActivityInstance.ImplementationVersion" />
        <element api="P:System.Activities.ActivityInstance.IsCompleted" />
        <element api="P:System.Activities.ActivityInstance.State" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>ActivityInstance</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.datacontract.org/2010/02/System.Activities</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.ActivityInstance">
      <topicdata name="ActivityInstance" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityInstance" />
      <apidata name="ActivityInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityInstance">
      <topicdata name="ActivityInstance" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityInstance" />
      <apidata name="ActivityInstance" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityInstance.Activity" />
        <element api="P:System.Activities.ActivityInstance.Id" />
        <element api="P:System.Activities.ActivityInstance.ImplementationVersion" />
        <element api="P:System.Activities.ActivityInstance.IsCompleted" />
        <element api="P:System.Activities.ActivityInstance.State" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityInstance.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activity" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityInstance.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityInstance.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityInstance.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityInstance.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityInstanceState">
      <topicdata group="api" />
      <apidata name="ActivityInstanceState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.ActivityInstanceState.Executing" />
        <element api="F:System.Activities.ActivityInstanceState.Closed" />
        <element api="F:System.Activities.ActivityInstanceState.Canceled" />
        <element api="F:System.Activities.ActivityInstanceState.Faulted" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.ActivityInstanceState.Canceled">
      <topicdata group="api" notopic="" />
      <apidata name="Canceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.ActivityInstanceState.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.ActivityInstanceState.Executing">
      <topicdata group="api" notopic="" />
      <apidata name="Executing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.ActivityInstanceState.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ActivityMetadata">
      <topicdata group="api" />
      <apidata name="ActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.ActivityMetadata.AddImportedChild">
          <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)" />
          <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddImportedDelegate">
          <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddValidationError">
          <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddVariable">
          <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
        </element>
        <element api="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.ActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetHashCode" />
        <element api="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetVariablesWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
        <element api="Overload:System.Activities.ActivityMetadata.RequireExtension">
          <element api="M:System.Activities.ActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Activities.ActivityMetadata.Environment" />
        <element api="P:System.Activities.ActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityMetadata">
      <topicdata name="ActivityMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityMetadata" />
      <apidata name="ActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.ActivityMetadata.AddImportedChild">
          <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)" />
          <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddImportedDelegate">
          <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddValidationError">
          <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="Overload:System.Activities.ActivityMetadata.AddVariable">
          <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
        </element>
        <element api="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.ActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetHashCode" />
        <element api="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection" />
        <element api="M:System.Activities.ActivityMetadata.GetVariablesWithReflection" />
        <element api="Overload:System.Activities.ActivityMetadata.RequireExtension">
          <element api="M:System.Activities.ActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.ActivityMetadata">
      <topicdata name="ActivityMetadata" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.ActivityMetadata" />
      <apidata name="ActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityMetadata">
      <topicdata name="ActivityMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityMetadata" />
      <apidata name="ActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Activities.ActivityMetadata.Environment" />
        <element api="P:System.Activities.ActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityMetadata.AddImportedChild">
      <topicdata name="AddImportedChild" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)" />
        <element api="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityMetadata.AddImportedDelegate">
      <topicdata name="AddImportedDelegate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
        <element api="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityMetadata.AddValidationError">
      <topicdata name="AddValidationError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.String)" />
        <element api="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityMetadata.AddVariable">
      <topicdata name="AddVariable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ActivityMetadata.RequireExtension">
      <topicdata name="RequireExtension" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityMetadata.RequireExtension``1" />
        <element api="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="AddArgument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="AddDefaultExtensionProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="extensionProvider">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.ActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddImportedChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChild">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)">
      <topicdata group="api" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddImportedChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChild">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <topicdata group="api" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddImportedDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)">
      <topicdata group="api" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddImportedDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationError">
          <type api="T:System.Activities.Validation.ValidationError" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddValidationError(System.String)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.AddVariable(System.Activities.Variable,System.Object)">
      <topicdata group="api" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.AddVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityMetadata.Environment">
      <topicdata group="api" />
      <apidata name="Environment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Environment" />
      <returns>
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.GetArgumentsWithReflection">
      <topicdata group="api" />
      <apidata name="GetArgumentsWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.RuntimeArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.GetImportedChildrenWithReflection">
      <topicdata group="api" />
      <apidata name="GetImportedChildrenWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.GetImportedDelegatesWithReflection">
      <topicdata group="api" />
      <apidata name="GetImportedDelegatesWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.ActivityDelegate" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.GetVariablesWithReflection">
      <topicdata group="api" />
      <apidata name="GetVariablesWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Variable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityMetadata.HasViolations">
      <topicdata group="api" />
      <apidata name="HasViolations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasViolations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.op_Equality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.op_Inequality(System.Activities.ActivityMetadata,System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.RequireExtension``1">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.RequireExtension(System.Type)">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extensionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <topicdata group="api" />
      <apidata name="SetArgumentsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.RuntimeArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <topicdata group="api" />
      <apidata name="SetImportedChildrenCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChildren">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <topicdata group="api" />
      <apidata name="SetImportedDelegatesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegates">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.ActivityDelegate" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <topicdata group="api" />
      <apidata name="SetValidationErrorsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrors">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Validation.ValidationError" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <topicdata group="api" />
      <apidata name="SetVariablesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Variable" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityPropertyReference">
      <topicdata group="api" />
      <apidata name="ActivityPropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ActivityPropertyReference.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityPropertyReference.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityPropertyReference.SourceProperty" />
        <element api="P:System.Activities.ActivityPropertyReference.TargetProperty" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityPropertyReference">
      <topicdata name="ActivityPropertyReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityPropertyReference" />
      <apidata name="ActivityPropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ActivityPropertyReference.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityPropertyReference" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityPropertyReference">
      <topicdata name="ActivityPropertyReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityPropertyReference" />
      <apidata name="ActivityPropertyReference" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ActivityPropertyReference.#ctor" />
      <elements>
        <element api="P:System.Activities.ActivityPropertyReference.SourceProperty" />
        <element api="P:System.Activities.ActivityPropertyReference.TargetProperty" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityPropertyReference" />
      </containers>
    </api>
    <api id="M:System.Activities.ActivityPropertyReference.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityPropertyReference.SourceProperty">
      <topicdata group="api" />
      <apidata name="SourceProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceProperty" />
      <setter name="set_SourceProperty" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityPropertyReference.TargetProperty">
      <topicdata group="api" />
      <apidata name="TargetProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetProperty" />
      <setter name="set_TargetProperty" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityPropertyReference" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ActivityWithResult">
      <topicdata group="api" />
      <apidata name="ActivityWithResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Activity`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
        <element api="P:System.Activities.ActivityWithResult.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ActivityWithResult">
      <topicdata name="ActivityWithResult" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ActivityWithResult" />
      <apidata name="ActivityWithResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityWithResult" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ActivityWithResult">
      <topicdata name="ActivityWithResult" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ActivityWithResult" />
      <apidata name="ActivityWithResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity.Implementation" />
        <element api="P:System.Activities.Activity.ImplementationVersion" />
        <element api="P:System.Activities.ActivityWithResult.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityWithResult" />
      </containers>
    </api>
    <api id="P:System.Activities.ActivityWithResult.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Result" />
      <setter name="set_Result" />
      <returns>
        <type api="T:System.Activities.OutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityWithResult" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.ActivityWithResult.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ActivityWithResult" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Argument">
      <topicdata group="api" />
      <apidata name="Argument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.InOutArgument" ref="true" />
          <type api="T:System.Activities.InArgument" ref="true" />
          <type api="T:System.Activities.OutArgument" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:System.Activities.Argument.ResultValue" />
        <element api="F:System.Activities.Argument.UnspecifiedEvaluationOrder" />
        <element api="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)" />
        <element api="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)" />
        <element api="Overload:System.Activities.Argument.Get">
          <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
          <element api="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)" />
        </element>
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Argument">
      <topicdata name="Argument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Argument" />
      <apidata name="Argument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)" />
        <element api="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)" />
        <element api="Overload:System.Activities.Argument.Get">
          <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
          <element api="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)" />
        </element>
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Argument">
      <topicdata name="Argument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Argument" />
      <apidata name="Argument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" />
      </containers>
    </api>
    <api id="Fields.T:System.Activities.Argument">
      <topicdata name="Argument" group="list" subgroup="Fields" typeTopicId="T:System.Activities.Argument" />
      <apidata name="Argument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.Argument.ResultValue" />
        <element api="F:System.Activities.Argument.UnspecifiedEvaluationOrder" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Argument.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Argument.ArgumentType">
      <topicdata group="api" />
      <apidata name="ArgumentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ArgumentType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Argument.Create(System.Type,System.Activities.ArgumentDirection)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Argument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Argument.CreateReference(System.Activities.Argument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Argument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Argument.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Direction" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Argument.EvaluationOrder">
      <topicdata group="api" />
      <apidata name="EvaluationOrder" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EvaluationOrder" />
      <setter name="set_EvaluationOrder" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>-1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Argument.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.Activities.ActivityWithResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.Argument.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.Argument.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.Argument.Get" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.Argument.Get``1(System.Activities.ActivityContext)" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="F:System.Activities.Argument.ResultValue">
      <topicdata group="api" />
      <apidata name="ResultValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Result</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="F:System.Activities.Argument.UnspecifiedEvaluationOrder">
      <topicdata group="api" />
      <apidata name="UnspecifiedEvaluationOrder" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Argument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ArgumentDirection">
      <topicdata group="api" />
      <apidata name="ArgumentDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.ArgumentDirection.In" />
        <element api="F:System.Activities.ArgumentDirection.Out" />
        <element api="F:System.Activities.ArgumentDirection.InOut" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="F:System.Activities.ArgumentDirection.In">
      <topicdata group="api" notopic="" />
      <apidata name="In" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.ArgumentDirection.InOut">
      <topicdata group="api" notopic="" />
      <apidata name="InOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.ArgumentDirection.Out">
      <topicdata group="api" notopic="" />
      <apidata name="Out" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.AsyncCodeActivity">
      <topicdata group="api" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Statements.InvokeMethod" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.AsyncCodeActivity.#ctor" />
        <element api="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Activities.AsyncCodeActivity.CacheMetadata">
          <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)" />
        <element api="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)" />
        <element api="M:System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.AsyncCodeActivity.Implementation" />
        <element api="P:System.Activities.AsyncCodeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.AsyncCodeActivity">
      <topicdata name="AsyncCodeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.AsyncCodeActivity" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Activities.AsyncCodeActivity.CacheMetadata">
          <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)" />
        <element api="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)" />
        <element api="M:System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.AsyncCodeActivity">
      <topicdata name="AsyncCodeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.AsyncCodeActivity" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.AsyncCodeActivity.Implementation" />
        <element api="P:System.Activities.AsyncCodeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Activities.AsyncCodeActivity.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginExecute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.AsyncCodeActivity.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.AsyncCodeActivity.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.Cancel(System.Activities.AsyncCodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndExecute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.AsyncCodeActivity.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.AsyncCodeActivity.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.AsyncCodeActivity`1">
      <topicdata group="api" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.AsyncCodeActivity`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Expressions.InvokeMethod`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.AsyncCodeActivity`1.#ctor" />
        <element api="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Activities.AsyncCodeActivity`1.CacheMetadata">
          <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)" />
        <element api="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)" />
        <element api="M:System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.AsyncCodeActivity`1.Implementation" />
        <element api="P:System.Activities.AsyncCodeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.AsyncCodeActivity`1">
      <topicdata name="AsyncCodeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.AsyncCodeActivity`1" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)" />
        <element api="Overload:System.Activities.AsyncCodeActivity`1.CacheMetadata">
          <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)" />
        <element api="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)" />
        <element api="M:System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.AsyncCodeActivity`1">
      <topicdata name="AsyncCodeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.AsyncCodeActivity`1" />
      <apidata name="AsyncCodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.AsyncCodeActivity`1.Implementation" />
        <element api="P:System.Activities.AsyncCodeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.AsyncCodeActivity`1.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.BeginExecute(System.Activities.AsyncCodeActivityContext,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginExecute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.AsyncCodeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.AsyncCodeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.Cancel(System.Activities.AsyncCodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.EndExecute(System.Activities.AsyncCodeActivityContext,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndExecute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="T:System.Activities.AsyncCodeActivity`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.AsyncCodeActivity`1.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.AsyncCodeActivity`1.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.AsyncCodeActivityContext">
      <topicdata group="api" />
      <apidata name="AsyncCodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.AsyncCodeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.AsyncCodeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.CodeActivityContext.GetProperty``1" />
        <element api="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.AsyncCodeActivityContext.UserState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.AsyncCodeActivityContext">
      <topicdata name="AsyncCodeActivityContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.AsyncCodeActivityContext" />
      <apidata name="AsyncCodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.AsyncCodeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.AsyncCodeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Activities.AsyncCodeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.CodeActivityContext.GetProperty``1" />
        <element api="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivityContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.AsyncCodeActivityContext">
      <topicdata name="AsyncCodeActivityContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.AsyncCodeActivityContext" />
      <apidata name="AsyncCodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.AsyncCodeActivityContext.UserState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivityContext" />
      </containers>
    </api>
    <api id="P:System.Activities.AsyncCodeActivityContext.IsCancellationRequested">
      <topicdata group="api" />
      <apidata name="IsCancellationRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCancellationRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.AsyncCodeActivityContext.MarkCanceled">
      <topicdata group="api" />
      <apidata name="MarkCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.AsyncCodeActivityContext.UserState">
      <topicdata group="api" />
      <apidata name="UserState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserState" />
      <setter name="set_UserState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Bookmark">
      <topicdata group="api" />
      <apidata name="Bookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Bookmark" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Activities.Bookmark.#ctor(System.String)" />
        <element api="Overload:System.Activities.Bookmark.Equals">
          <element api="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)" />
          <element api="M:System.Activities.Bookmark.Equals(System.Object)" />
        </element>
        <element api="M:System.Activities.Bookmark.GetHashCode" />
        <element api="M:System.Activities.Bookmark.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Bookmark.Name" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Bookmark">
      <topicdata name="Bookmark" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Bookmark" />
      <apidata name="Bookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.Bookmark.Equals">
          <element api="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)" />
          <element api="M:System.Activities.Bookmark.Equals(System.Object)" />
        </element>
        <element api="M:System.Activities.Bookmark.GetHashCode" />
        <element api="M:System.Activities.Bookmark.ToString" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Bookmark">
      <topicdata name="Bookmark" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Bookmark" />
      <apidata name="Bookmark" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.Bookmark.Name" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Bookmark.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)" />
        <element api="M:System.Activities.Bookmark.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Bookmark.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Bookmark.Equals(System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.Bookmark.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Bookmark" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Bookmark.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.Bookmark.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Bookmark.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Bookmark.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Bookmark.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Bookmark" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.BookmarkCallback">
      <topicdata group="api" />
      <apidata name="BookmarkCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="T:System.Activities.BookmarkOptions">
      <topicdata group="api" />
      <apidata name="BookmarkOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.BookmarkOptions.None" />
        <element api="F:System.Activities.BookmarkOptions.MultipleResume" />
        <element api="F:System.Activities.BookmarkOptions.NonBlocking" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.BookmarkOptions.MultipleResume">
      <topicdata group="api" notopic="" />
      <apidata name="MultipleResume" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.BookmarkOptions.NonBlocking">
      <topicdata group="api" notopic="" />
      <apidata name="NonBlocking" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.BookmarkOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.BookmarkResumptionResult">
      <topicdata group="api" />
      <apidata name="BookmarkResumptionResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.BookmarkResumptionResult.Success" />
        <element api="F:System.Activities.BookmarkResumptionResult.NotFound" />
        <element api="F:System.Activities.BookmarkResumptionResult.NotReady" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="F:System.Activities.BookmarkResumptionResult.NotFound">
      <topicdata group="api" notopic="" />
      <apidata name="NotFound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.BookmarkResumptionResult.NotReady">
      <topicdata group="api" notopic="" />
      <apidata name="NotReady" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.BookmarkResumptionResult.Success">
      <topicdata group="api" notopic="" />
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.BookmarkScope">
      <topicdata group="api" />
      <apidata name="BookmarkScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Activities.BookmarkScope" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Activities.BookmarkScope.#ctor(System.Guid)" />
        <element api="Overload:System.Activities.BookmarkScope.Equals">
          <element api="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Activities.BookmarkScope.GetHashCode" />
        <element api="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.BookmarkScope.Default" />
        <element api="P:System.Activities.BookmarkScope.Id" />
        <element api="P:System.Activities.BookmarkScope.IsInitialized" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.BookmarkScope">
      <topicdata name="BookmarkScope" group="list" subgroup="Methods" typeTopicId="T:System.Activities.BookmarkScope" />
      <apidata name="BookmarkScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.BookmarkScope.Equals">
          <element api="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)" />
          <element api="M:System.Object.Equals(System.Object)" />
        </element>
        <element api="M:System.Activities.BookmarkScope.GetHashCode" />
        <element api="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.BookmarkScope">
      <topicdata name="BookmarkScope" group="list" subgroup="Properties" typeTopicId="T:System.Activities.BookmarkScope" />
      <apidata name="BookmarkScope" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.BookmarkScope.Default" />
        <element api="P:System.Activities.BookmarkScope.Id" />
        <element api="P:System.Activities.BookmarkScope.IsInitialized" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" />
      </containers>
    </api>
    <api id="Overload:System.Activities.BookmarkScope.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)" />
        <element api="M:System.Object.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScope.#ctor(System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.BookmarkScope.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScope.Equals(System.Activities.BookmarkScope)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.BookmarkScope.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Activities.BookmarkScope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Activities.BookmarkScope" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScope.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.BookmarkScope.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScope.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.BookmarkScope.IsInitialized">
      <topicdata group="api" />
      <apidata name="IsInitialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsInitialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.BookmarkScopeHandle">
      <topicdata group="api" />
      <apidata name="BookmarkScopeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.BookmarkScopeHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Handle" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.BookmarkScopeHandle.#ctor" />
        <element api="Overload:System.Activities.BookmarkScopeHandle.CreateBookmarkScope">
          <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)" />
          <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)" />
        </element>
        <element api="M:System.Activities.BookmarkScopeHandle.Initialize(System.Activities.NativeActivityContext,System.Guid)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />
        <element api="P:System.Activities.BookmarkScopeHandle.Default" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.BookmarkScopeHandle">
      <topicdata name="BookmarkScopeHandle" group="list" subgroup="Methods" typeTopicId="T:System.Activities.BookmarkScopeHandle" />
      <apidata name="BookmarkScopeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.BookmarkScopeHandle.#ctor" />
      <elements>
        <element api="Overload:System.Activities.BookmarkScopeHandle.CreateBookmarkScope">
          <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)" />
          <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)" />
        </element>
        <element api="M:System.Activities.BookmarkScopeHandle.Initialize(System.Activities.NativeActivityContext,System.Guid)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.BookmarkScopeHandle">
      <topicdata name="BookmarkScopeHandle" group="list" subgroup="Properties" typeTopicId="T:System.Activities.BookmarkScopeHandle" />
      <apidata name="BookmarkScopeHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.BookmarkScopeHandle.#ctor" />
      <elements>
        <element api="P:System.Activities.BookmarkScopeHandle.BookmarkScope" />
        <element api="P:System.Activities.BookmarkScopeHandle.Default" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" />
      </containers>
    </api>
    <api id="Overload:System.Activities.BookmarkScopeHandle.CreateBookmarkScope">
      <topicdata name="CreateBookmarkScope" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateBookmarkScope" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScopeHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.BookmarkScopeHandle.BookmarkScope">
      <topicdata group="api" />
      <apidata name="BookmarkScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BookmarkScope" />
      <returns>
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="CreateBookmarkScope" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.BookmarkScopeHandle.CreateBookmarkScope" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScopeHandle.CreateBookmarkScope(System.Activities.NativeActivityContext,System.Guid)">
      <topicdata group="api" />
      <apidata name="CreateBookmarkScope" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.BookmarkScopeHandle.CreateBookmarkScope" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="scopeId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.BookmarkScopeHandle.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.BookmarkScopeHandle.Initialize(System.Activities.NativeActivityContext,System.Guid)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.CodeActivity">
      <topicdata group="api" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Statements.Assign" ref="true" />
          <type api="T:System.Activities.Statements.Assign`1" ref="true" />
          <type api="T:System.Activities.Statements.Throw" ref="true" />
          <type api="T:System.Activities.Statements.WriteLine" ref="true" />
          <type api="T:System.Activities.Statements.AddToCollection`1" ref="true" />
          <type api="T:System.Activities.Statements.ClearCollection`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity.#ctor" />
        <element api="Overload:System.Activities.CodeActivity.CacheMetadata">
          <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.CodeActivity.Implementation" />
        <element api="P:System.Activities.CodeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="Overload:System.Activities.CodeActivity.CacheMetadata">
          <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.CodeActivity">
      <topicdata name="CodeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.CodeActivity" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.CodeActivity.Implementation" />
        <element api="P:System.Activities.CodeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Activities.CodeActivity.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.CodeActivity.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.CodeActivity.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity.Execute(System.Activities.CodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.CodeActivity.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.CodeActivity.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.CodeActivity`1">
      <topicdata group="api" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.CodeActivity`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualBasic.Activities.VisualBasicReference`1" ref="true" />
          <type api="T:Microsoft.VisualBasic.Activities.VisualBasicValue`1" ref="true" />
          <type api="T:Microsoft.CSharp.Activities.CSharpReference`1" ref="true" />
          <type api="T:Microsoft.CSharp.Activities.CSharpValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.Add`3" ref="true" />
          <type api="T:System.Activities.Expressions.Subtract`3" ref="true" />
          <type api="T:System.Activities.Expressions.Multiply`3" ref="true" />
          <type api="T:System.Activities.Expressions.Divide`3" ref="true" />
          <type api="T:System.Activities.Expressions.Not`2" ref="true" />
          <type api="T:System.Activities.Expressions.PropertyReference`2" ref="true" />
          <type api="T:System.Activities.Expressions.PropertyValue`2" ref="true" />
          <type api="T:System.Activities.Expressions.And`3" ref="true" />
          <type api="T:System.Activities.Expressions.Equal`3" ref="true" />
          <type api="T:System.Activities.Expressions.GreaterThan`3" ref="true" />
          <type api="T:System.Activities.Expressions.GreaterThanOrEqual`3" ref="true" />
          <type api="T:System.Activities.Expressions.LessThan`3" ref="true" />
          <type api="T:System.Activities.Expressions.LessThanOrEqual`3" ref="true" />
          <type api="T:System.Activities.Expressions.NotEqual`3" ref="true" />
          <type api="T:System.Activities.Expressions.Or`3" ref="true" />
          <type api="T:System.Activities.Expressions.ArrayItemValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.ArrayItemReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.EnvironmentLocationValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.EnvironmentLocationReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.FieldReference`2" ref="true" />
          <type api="T:System.Activities.Expressions.FieldValue`2" ref="true" />
          <type api="T:System.Activities.Expressions.Cast`2" ref="true" />
          <type api="T:System.Activities.Expressions.As`2" ref="true" />
          <type api="T:System.Activities.Expressions.New`1" ref="true" />
          <type api="T:System.Activities.Expressions.NewArray`1" ref="true" />
          <type api="T:System.Activities.Expressions.LambdaReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.LambdaValue`1" ref="true" />
          <type api="T:System.Activities.Expressions.Literal`1" ref="true" />
          <type api="T:System.Activities.Expressions.IndexerReference`2" ref="true" />
          <type api="T:System.Activities.Expressions.MultidimensionalArrayItemReference`1" ref="true" />
          <type api="T:System.Activities.Expressions.ValueTypeFieldReference`2" ref="true" />
          <type api="T:System.Activities.Expressions.ValueTypeIndexerReference`2" ref="true" />
          <type api="T:System.Activities.Expressions.ValueTypePropertyReference`2" ref="true" />
          <type api="T:System.Activities.Statements.ExistsInCollection`1" ref="true" />
          <type api="T:System.Activities.Statements.RemoveFromCollection`1" ref="true" />
          <type api="T:System.Activities.Validation.GetChildSubtree" ref="true" />
          <type api="T:System.Activities.Validation.GetParentChain" ref="true" />
          <type api="T:System.Activities.Validation.GetWorkflowTree" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.CodeActivity`1.#ctor" />
        <element api="Overload:System.Activities.CodeActivity`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.CodeActivity`1">
      <topicdata name="CodeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.CodeActivity`1" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="Overload:System.Activities.CodeActivity`1.CacheMetadata">
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)" />
        <element api="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.CodeActivity`1">
      <topicdata name="CodeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.CodeActivity`1" />
      <apidata name="CodeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.CodeActivity`1.Implementation" />
        <element api="P:System.Activities.CodeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.CodeActivity`1.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.CodeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity`1.CacheMetadata(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.CodeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity`1.Execute(System.Activities.CodeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="T:System.Activities.CodeActivity`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.CodeActivity`1.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.CodeActivity`1.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.CodeActivityContext">
      <topicdata group="api" />
      <apidata name="CodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.CodeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.CodeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Activities.CodeActivityContext.GetProperty``1" />
        <element api="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.CodeActivityContext">
      <topicdata name="CodeActivityContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.CodeActivityContext" />
      <apidata name="CodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.CodeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.CodeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Activities.CodeActivityContext.GetProperty``1" />
        <element api="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.CodeActivityContext">
      <topicdata name="CodeActivityContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.CodeActivityContext" />
      <apidata name="CodeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityContext" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityContext.GetProperty``1">
      <topicdata group="api" />
      <apidata name="GetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="THandle">
          <constrained>
            <type api="T:System.Activities.Handle" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="THandle" index="0" api="M:System.Activities.CodeActivityContext.GetProperty``1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <topicdata group="api" />
      <apidata name="Track" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Activities.Tracking.CustomTrackingRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.CodeActivityMetadata">
      <topicdata group="api" />
      <apidata name="CodeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.CodeActivityMetadata.AddValidationError">
          <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.CodeActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.CodeActivityMetadata.GetHashCode" />
        <element api="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)" />
        <element api="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)" />
        <element api="Overload:System.Activities.CodeActivityMetadata.RequireExtension">
          <element api="M:System.Activities.CodeActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Activities.CodeActivityMetadata.Environment" />
        <element api="P:System.Activities.CodeActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.CodeActivityMetadata">
      <topicdata name="CodeActivityMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Activities.CodeActivityMetadata" />
      <apidata name="CodeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.CodeActivityMetadata.AddValidationError">
          <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.CodeActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.CodeActivityMetadata.GetHashCode" />
        <element api="Overload:System.Activities.CodeActivityMetadata.RequireExtension">
          <element api="M:System.Activities.CodeActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.CodeActivityMetadata">
      <topicdata name="CodeActivityMetadata" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.CodeActivityMetadata" />
      <apidata name="CodeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)" />
        <element api="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.CodeActivityMetadata">
      <topicdata name="CodeActivityMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Activities.CodeActivityMetadata" />
      <apidata name="CodeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Activities.CodeActivityMetadata.Environment" />
        <element api="P:System.Activities.CodeActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" />
      </containers>
    </api>
    <api id="Overload:System.Activities.CodeActivityMetadata.AddValidationError">
      <topicdata name="AddValidationError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)" />
        <element api="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.CodeActivityMetadata.RequireExtension">
      <topicdata name="RequireExtension" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.CodeActivityMetadata.RequireExtension``1" />
        <element api="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="AddArgument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="AddDefaultExtensionProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="extensionProvider">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.CodeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.CodeActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationError">
          <type api="T:System.Activities.Validation.ValidationError" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.AddValidationError(System.String)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.CodeActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.CodeActivityMetadata.Environment">
      <topicdata group="api" />
      <apidata name="Environment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Environment" />
      <returns>
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.GetArgumentsWithReflection">
      <topicdata group="api" />
      <apidata name="GetArgumentsWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.RuntimeArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.CodeActivityMetadata.HasViolations">
      <topicdata group="api" />
      <apidata name="HasViolations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasViolations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.op_Equality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.op_Inequality(System.Activities.CodeActivityMetadata,System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.RequireExtension``1">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.CodeActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.RequireExtension(System.Type)">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.CodeActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extensionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <topicdata group="api" />
      <apidata name="SetArgumentsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.RuntimeArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <topicdata group="api" />
      <apidata name="SetValidationErrorsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrors">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Validation.ValidationError" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.CodeActivityPublicEnvironmentAccessor">
      <topicdata group="api" />
      <apidata name="CodeActivityPublicEnvironmentAccessor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.CodeActivityPublicEnvironmentAccessor">
      <topicdata name="CodeActivityPublicEnvironmentAccessor" group="list" subgroup="Methods" typeTopicId="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      <apidata name="CodeActivityPublicEnvironmentAccessor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.CodeActivityPublicEnvironmentAccessor">
      <topicdata name="CodeActivityPublicEnvironmentAccessor" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      <apidata name="CodeActivityPublicEnvironmentAccessor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)" />
        <element api="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.CodeActivityPublicEnvironmentAccessor">
      <topicdata name="CodeActivityPublicEnvironmentAccessor" group="list" subgroup="Properties" typeTopicId="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      <apidata name="CodeActivityPublicEnvironmentAccessor" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" />
      </containers>
    </api>
    <api id="P:System.Activities.CodeActivityPublicEnvironmentAccessor.ActivityMetadata">
      <topicdata group="api" />
      <apidata name="ActivityMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActivityMetadata" />
      <returns>
        <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Create(System.Activities.CodeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.CodeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Equality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.op_Inequality(System.Activities.CodeActivityPublicEnvironmentAccessor,System.Activities.CodeActivityPublicEnvironmentAccessor)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetAccessToPublicLocation(System.Activities.LocationReference,System.Activities.ArgumentDirection,System.Activities.LocationReference@)">
      <topicdata group="api" />
      <apidata name="TryGetAccessToPublicLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="publicLocation">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
        <parameter name="accessDirection">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
        <parameter name="equivalentLocation" out="true">
          <referenceTo>
            <type api="T:System.Activities.LocationReference" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.CodeActivityPublicEnvironmentAccessor.TryGetReferenceToPublicLocation(System.Activities.LocationReference,System.Activities.LocationReference@)">
      <topicdata group="api" />
      <apidata name="TryGetReferenceToPublicLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="publicReference">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
        <parameter name="equivalentReference" out="true">
          <referenceTo>
            <type api="T:System.Activities.LocationReference" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.CodeActivityPublicEnvironmentAccessor" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.CompletionCallback">
      <topicdata group="api" />
      <apidata name="CompletionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="completedInstance">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="T:System.Activities.CompletionCallback`1">
      <topicdata group="api" />
      <apidata name="CompletionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="completedInstance">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
        <parameter name="result">
          <template name="TResult" index="0" api="T:System.Activities.CompletionCallback`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateArgument">
      <topicdata group="api" />
      <apidata name="DelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.DelegateInArgument" ref="true" />
          <type api="T:System.Activities.DelegateOutArgument" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DelegateArgument">
      <topicdata name="DelegateArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DelegateArgument" />
      <apidata name="DelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DelegateArgument">
      <topicdata name="DelegateArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DelegateArgument" />
      <apidata name="DelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" />
      </containers>
    </api>
    <api id="P:System.Activities.DelegateArgument.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Direction" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DelegateArgument.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DelegateArgument.NameCore">
      <topicdata group="api" />
      <apidata name="NameCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.LocationReference.NameCore">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NameCore" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateCompletionCallback">
      <topicdata group="api" />
      <apidata name="DelegateCompletionCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="completedInstance">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
        <parameter name="outArguments">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateInArgument">
      <topicdata group="api" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.DelegateArgument" ref="true" />
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DelegateInArgument">
      <topicdata name="DelegateInArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DelegateInArgument" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DelegateInArgument">
      <topicdata name="DelegateInArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DelegateInArgument" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateInArgument`1">
      <topicdata group="api" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateInArgument`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.DelegateInArgument" ref="true" />
          <type api="T:System.Activities.DelegateArgument" ref="true" />
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.DelegateInArgument`1.#ctor">
          <element api="M:System.Activities.DelegateInArgument`1.#ctor" />
          <element api="M:System.Activities.DelegateInArgument`1.#ctor(System.String)" />
        </element>
        <element api="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DelegateInArgument`1">
      <topicdata name="DelegateInArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DelegateInArgument`1" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateInArgument`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DelegateInArgument`1">
      <topicdata name="DelegateInArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DelegateInArgument`1" />
      <apidata name="DelegateInArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateInArgument`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DelegateInArgument`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.DelegateInArgument`1.#ctor" />
        <element api="M:System.Activities.DelegateInArgument`1.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateInArgument`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.DelegateInArgument`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateInArgument`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.DelegateInArgument`1.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateInArgument`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.DelegateInArgument`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateInArgument`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.DelegateInArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateInArgument`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateOutArgument">
      <topicdata group="api" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.DelegateArgument" ref="true" />
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DelegateOutArgument">
      <topicdata name="DelegateOutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DelegateOutArgument" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.DelegateArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DelegateOutArgument">
      <topicdata name="DelegateOutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DelegateOutArgument" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.DelegateArgument.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument" />
      </containers>
    </api>
    <api id="T:System.Activities.DelegateOutArgument`1">
      <topicdata group="api" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateOutArgument`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.DelegateOutArgument" ref="true" />
          <type api="T:System.Activities.DelegateArgument" ref="true" />
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.DelegateOutArgument`1.#ctor">
          <element api="M:System.Activities.DelegateOutArgument`1.#ctor" />
          <element api="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)" />
        </element>
        <element api="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DelegateOutArgument`1">
      <topicdata name="DelegateOutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DelegateOutArgument`1" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateOutArgument`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DelegateOutArgument`1">
      <topicdata name="DelegateOutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DelegateOutArgument`1" />
      <apidata name="DelegateOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DelegateOutArgument`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.DelegateArgument.Direction" />
        <element api="P:System.Activities.DelegateArgument.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DelegateOutArgument`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.DelegateOutArgument`1.#ctor" />
        <element api="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateOutArgument`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.DelegateOutArgument`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateOutArgument`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.DelegateOutArgument`1.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateOutArgument`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.DelegateOutArgument`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.DelegateOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DelegateOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.DelegateOutArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DelegateOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.DynamicActivity">
      <topicdata group="api" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity.#ctor" contentProperty="P:System.Activities.DynamicActivity.Implementation" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.DynamicActivity.#ctor" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.DynamicActivity.Attributes" />
        <element api="P:System.Activities.DynamicActivity.Constraints" />
        <element api="P:System.Activities.DynamicActivity.Implementation" />
        <element api="P:System.Activities.DynamicActivity.ImplementationVersion" />
        <element api="P:System.Activities.DynamicActivity.Name" />
        <element api="P:System.Activities.DynamicActivity.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.DynamicActivity">
      <topicdata name="DynamicActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DynamicActivity" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity.#ctor" contentProperty="P:System.Activities.DynamicActivity.Implementation" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DynamicActivity">
      <topicdata name="DynamicActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DynamicActivity" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity.#ctor" contentProperty="P:System.Activities.DynamicActivity.Implementation" />
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.DynamicActivity.Attributes" />
        <element api="P:System.Activities.DynamicActivity.Constraints" />
        <element api="P:System.Activities.DynamicActivity.Implementation" />
        <element api="P:System.Activities.DynamicActivity.ImplementationVersion" />
        <element api="P:System.Activities.DynamicActivity.Name" />
        <element api="P:System.Activities.DynamicActivity.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
        <element api="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Validation.Constraint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.XamlDeferLoadAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.FuncDeferringLoader" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.Activity" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.Markup.AmbientAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DynamicActivity.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DynamicActivity.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetAttributes" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetClassName" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetComponentName" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetConverter" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultEvent" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultProperty" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEditor" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetPropertyOwner" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.DynamicActivity`1">
      <topicdata group="api" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity`1.#ctor" contentProperty="P:System.Activities.DynamicActivity`1.Implementation" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.DynamicActivity`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <implements>
        <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.DynamicActivity`1.#ctor" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.DynamicActivity`1.Attributes" />
        <element api="P:System.Activities.DynamicActivity`1.Constraints" />
        <element api="P:System.Activities.DynamicActivity`1.Implementation" />
        <element api="P:System.Activities.DynamicActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.DynamicActivity`1.Name" />
        <element api="P:System.Activities.DynamicActivity`1.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Implementation</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.DynamicActivity`1">
      <topicdata name="DynamicActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DynamicActivity`1" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity`1.#ctor" contentProperty="P:System.Activities.DynamicActivity`1.Implementation" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)" />
        <element api="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
        </element>
        <element api="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
          <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DynamicActivity`1">
      <topicdata name="DynamicActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DynamicActivity`1" />
      <apidata name="DynamicActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.DynamicActivity`1.#ctor" contentProperty="P:System.Activities.DynamicActivity`1.Implementation" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.DynamicActivity`1.Attributes" />
        <element api="P:System.Activities.DynamicActivity`1.Constraints" />
        <element api="P:System.Activities.DynamicActivity`1.Implementation" />
        <element api="P:System.Activities.DynamicActivity`1.ImplementationVersion" />
        <element api="P:System.Activities.DynamicActivity`1.Name" />
        <element api="P:System.Activities.DynamicActivity`1.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata name="GetEvents" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
        <element api="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.Constraints">
      <topicdata group="api" />
      <apidata name="Constraints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Constraints" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Validation.Constraint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.XamlDeferLoadAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.FuncDeferringLoader" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.Activity" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.Markup.AmbientAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.ImplementationVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivity`1.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetAttributes" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.AttributeCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetAttributes">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetClassName" />
      <apidata name="GetClassName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetClassName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetComponentName" />
      <apidata name="GetComponentName" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetComponentName">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetConverter" />
      <apidata name="GetConverter" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.TypeConverter" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetConverter">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultEvent" />
      <apidata name="GetDefaultEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetDefaultProperty" />
      <apidata name="GetDefaultProperty" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEditor" />
      <apidata name="GetEditor" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="editorBaseType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEditor(System.Type)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetEvents" />
      <apidata name="GetEvents" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetEvents" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.EventDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetProperties" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetProperties" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties(System.Attribute[])">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivity`1.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <topicdata group="api" eiiName="ICustomTypeDescriptor.GetPropertyOwner" />
      <apidata name="GetPropertyOwner" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="pd">
          <type api="T:System.ComponentModel.PropertyDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivity`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.DynamicActivityProperty">
      <topicdata group="api" />
      <apidata name="DynamicActivityProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.DynamicActivityProperty.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.DynamicActivityProperty.#ctor" />
        <element api="M:System.Activities.DynamicActivityProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.DynamicActivityProperty.Attributes" />
        <element api="P:System.Activities.DynamicActivityProperty.Name" />
        <element api="P:System.Activities.DynamicActivityProperty.Type" />
        <element api="P:System.Activities.DynamicActivityProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.DynamicActivityProperty">
      <topicdata name="DynamicActivityProperty" group="list" subgroup="Methods" typeTopicId="T:System.Activities.DynamicActivityProperty" />
      <apidata name="DynamicActivityProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.DynamicActivityProperty.#ctor" />
      <elements>
        <element api="M:System.Activities.DynamicActivityProperty.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.DynamicActivityProperty">
      <topicdata name="DynamicActivityProperty" group="list" subgroup="Properties" typeTopicId="T:System.Activities.DynamicActivityProperty" />
      <apidata name="DynamicActivityProperty" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.DynamicActivityProperty.#ctor" />
      <elements>
        <element api="P:System.Activities.DynamicActivityProperty.Attributes" />
        <element api="P:System.Activities.DynamicActivityProperty.Name" />
        <element api="P:System.Activities.DynamicActivityProperty.Type" />
        <element api="P:System.Activities.DynamicActivityProperty.Value" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" />
      </containers>
    </api>
    <api id="M:System.Activities.DynamicActivityProperty.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivityProperty.Attributes">
      <topicdata group="api" />
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Attributes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Attribute" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivityProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.DynamicActivityProperty.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.DynamicActivityProperty.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.DynamicActivityProperty.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.DynamicActivityProperty" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.ExceptionPersistenceExtension">
      <topicdata group="api" />
      <apidata name="ExceptionPersistenceExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExceptionPersistenceExtension.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ExceptionPersistenceExtension.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ExceptionPersistenceExtension.PersistExceptions" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ExceptionPersistenceExtension">
      <topicdata name="ExceptionPersistenceExtension" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ExceptionPersistenceExtension" />
      <apidata name="ExceptionPersistenceExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExceptionPersistenceExtension.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExceptionPersistenceExtension" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ExceptionPersistenceExtension">
      <topicdata name="ExceptionPersistenceExtension" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ExceptionPersistenceExtension" />
      <apidata name="ExceptionPersistenceExtension" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExceptionPersistenceExtension.#ctor" />
      <elements>
        <element api="P:System.Activities.ExceptionPersistenceExtension.PersistExceptions" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExceptionPersistenceExtension" />
      </containers>
    </api>
    <api id="M:System.Activities.ExceptionPersistenceExtension.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExceptionPersistenceExtension" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ExceptionPersistenceExtension.PersistExceptions">
      <topicdata group="api" />
      <apidata name="PersistExceptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistExceptions" />
      <setter name="set_PersistExceptions" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExceptionPersistenceExtension" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ExclusiveHandle">
      <topicdata group="api" />
      <apidata name="ExclusiveHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExclusiveHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Handle" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ExclusiveHandle.#ctor" />
        <element api="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)" />
        <element api="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.ExclusiveHandle">
      <topicdata name="ExclusiveHandle" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ExclusiveHandle" />
      <apidata name="ExclusiveHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExclusiveHandle.#ctor" />
      <elements>
        <element api="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)" />
        <element api="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ExclusiveHandle">
      <topicdata name="ExclusiveHandle" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ExclusiveHandle" />
      <apidata name="ExclusiveHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.ExclusiveHandle.#ctor" />
      <elements>
        <element api="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" />
      </containers>
    </api>
    <api id="M:System.Activities.ExclusiveHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExclusiveHandle.OnInitialize(System.Activities.HandleInitializationContext)">
      <topicdata group="api" />
      <apidata name="OnInitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)">
          <type api="T:System.Activities.Handle" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.HandleInitializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExclusiveHandle.RegisterBookmarkScope(System.Activities.NativeActivityContext,System.Activities.BookmarkScopeHandle)">
      <topicdata group="api" />
      <apidata name="RegisterBookmarkScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="bookmarkScopeHandle">
          <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ExclusiveHandle.RegisteredBookmarkScopes">
      <topicdata group="api" />
      <apidata name="RegisteredBookmarkScopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegisteredBookmarkScopes" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExclusiveHandle.Reinitialize(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Reinitialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExclusiveHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.ExecutionProperties">
      <topicdata group="api" />
      <apidata name="ExecutionProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Activities.ExecutionProperties.Add">
          <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)" />
          <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Activities.ExecutionProperties.Find(System.String)" />
        <element api="M:System.Activities.ExecutionProperties.GetEnumerator" />
        <element api="M:System.Activities.ExecutionProperties.Remove(System.String)" />
        <element api="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ExecutionProperties.IsEmpty" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ExecutionProperties">
      <topicdata name="ExecutionProperties" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ExecutionProperties" />
      <apidata name="ExecutionProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Object" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Object" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Object" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Activities.ExecutionProperties.Add">
          <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)" />
          <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)" />
        </element>
        <element api="M:System.Activities.ExecutionProperties.Find(System.String)" />
        <element api="M:System.Activities.ExecutionProperties.GetEnumerator" />
        <element api="M:System.Activities.ExecutionProperties.Remove(System.String)" />
        <element api="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ExecutionProperties">
      <topicdata name="ExecutionProperties" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ExecutionProperties" />
      <apidata name="ExecutionProperties" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ExecutionProperties.IsEmpty" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ExecutionProperties.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)" />
        <element api="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.Add(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ExecutionProperties.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.Add(System.String,System.Object,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.ExecutionProperties.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="onlyVisibleToPublicChildren">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.Find(System.String)">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Object" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.ExecutionProperties.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ExecutionProperties.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.FaultCallback">
      <topicdata group="api" />
      <apidata name="FaultCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="faultContext">
          <type api="T:System.Activities.NativeActivityFaultContext" ref="true" />
        </parameter>
        <parameter name="propagatedException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="propagatedFrom">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="T:System.Activities.Handle">
      <topicdata group="api" />
      <apidata name="Handle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.BookmarkScopeHandle" ref="true" />
          <type api="T:System.Activities.ExclusiveHandle" ref="true" />
          <type api="T:System.Activities.NoPersistHandle" ref="true" />
          <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
          <type api="T:System.ServiceModel.Activities.CorrelationHandle" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Handle.#ctor" />
        <element api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Handle">
      <topicdata name="Handle" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Handle" />
      <apidata name="Handle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Handle">
      <topicdata name="Handle" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Handle" />
      <apidata name="Handle" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" />
      </containers>
    </api>
    <api id="M:System.Activities.Handle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Handle.ExecutionPropertyName">
      <topicdata group="api" />
      <apidata name="ExecutionPropertyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionPropertyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)">
      <topicdata group="api" />
      <apidata name="OnInitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.HandleInitializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)">
      <topicdata group="api" />
      <apidata name="OnUninitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.HandleInitializationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Handle.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Handle.ThrowIfUninitialized">
      <topicdata group="api" />
      <apidata name="ThrowIfUninitialized" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Handle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.HandleInitializationContext">
      <topicdata group="api" />
      <apidata name="HandleInitializationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1" />
        <element api="M:System.Activities.HandleInitializationContext.GetExtension``1" />
        <element api="M:System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.HandleInitializationContext">
      <topicdata name="HandleInitializationContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.HandleInitializationContext" />
      <apidata name="HandleInitializationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1" />
        <element api="M:System.Activities.HandleInitializationContext.GetExtension``1" />
        <element api="M:System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.HandleInitializationContext" />
      </containers>
    </api>
    <api id="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1">
      <topicdata group="api" />
      <apidata name="CreateAndInitializeHandle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="THandle">
          <constrained>
            <type api="T:System.Activities.Handle" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <template name="THandle" index="0" api="M:System.Activities.HandleInitializationContext.CreateAndInitializeHandle``1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.HandleInitializationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.HandleInitializationContext.GetExtension``1">
      <topicdata group="api" />
      <apidata name="GetExtension" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.Activities.HandleInitializationContext.GetExtension``1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.HandleInitializationContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.HandleInitializationContext.UninitializeHandle(System.Activities.Handle)">
      <topicdata group="api" />
      <apidata name="UninitializeHandle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.Activities.Handle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.HandleInitializationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.IExecutionProperty">
      <topicdata group="api" />
      <apidata name="IExecutionProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />
        <element api="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.IExecutionProperty">
      <topicdata name="IExecutionProperty" group="list" subgroup="Methods" typeTopicId="T:System.Activities.IExecutionProperty" />
      <apidata name="IExecutionProperty" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.IExecutionProperty.CleanupWorkflowThread" />
        <element api="M:System.Activities.IExecutionProperty.SetupWorkflowThread" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IExecutionProperty" />
      </containers>
    </api>
    <api id="M:System.Activities.IExecutionProperty.CleanupWorkflowThread">
      <topicdata group="api" />
      <apidata name="CleanupWorkflowThread" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IExecutionProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.IExecutionProperty.SetupWorkflowThread">
      <topicdata group="api" />
      <apidata name="SetupWorkflowThread" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IExecutionProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InArgument">
      <topicdata group="api" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.InArgument`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="Overload:System.Activities.InArgument.CreateReference">
          <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)" />
          <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.InArgument">
      <topicdata name="InArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InArgument" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="Overload:System.Activities.InArgument.CreateReference">
          <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)" />
          <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InArgument">
      <topicdata name="InArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InArgument" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InArgument.CreateReference">
      <topicdata name="CreateReference" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)" />
        <element api="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument.CreateReference(System.Activities.InArgument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.InArgument.CreateReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.InArgument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.InArgument.CreateReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.InOutArgument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InArgument`1">
      <topicdata group="api" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InArgument`1.#ctor" contentProperty="P:System.Activities.InArgument`1.Expression" />
      <family>
        <ancestors>
          <type api="T:System.Activities.InArgument" ref="true" />
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.InArgument`1.#ctor">
          <element api="M:System.Activities.InArgument`1.#ctor" />
          <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})" />
          <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)" />
          <element api="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
          <element api="M:System.Activities.InArgument`1.#ctor(`0)" />
          <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)" />
        </element>
        <element api="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})" />
        <element api="M:System.Activities.InArgument`1.FromValue(`0)" />
        <element api="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.InArgument`1.op_Implicit">
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}" />
        </element>
        <element api="Overload:System.Activities.InArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.InArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Expression</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.InArgumentConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.InArgument`1">
      <topicdata name="InArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InArgument`1" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InArgument`1.#ctor" contentProperty="P:System.Activities.InArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})" />
        <element api="M:System.Activities.InArgument`1.FromValue(`0)" />
        <element api="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.InArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.InArgument`1">
      <topicdata name="InArgument" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.InArgument`1" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InArgument`1.#ctor" contentProperty="P:System.Activities.InArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.InArgument`1.op_Implicit">
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}" />
          <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InArgument`1">
      <topicdata name="InArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InArgument`1" />
      <apidata name="InArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InArgument`1.#ctor" contentProperty="P:System.Activities.InArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.InArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InArgument`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.InArgument`1.#ctor" />
        <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})" />
        <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.InArgument`1.#ctor(`0)" />
        <element api="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InArgument`1.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}" />
        <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}" />
        <element api="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}" />
        <element api="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InArgument`1.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor(System.Activities.Activity{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.InArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InArgument`1.#ctor" />
      <parameters>
        <parameter name="constValue">
          <template name="T" index="0" api="T:System.Activities.InArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.InArgument`1.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.InArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name="FromDelegateArgument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.FromExpression(System.Activities.Activity{`0})">
      <topicdata group="api" />
      <apidata name="FromExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.FromValue(`0)">
      <topicdata group="api" />
      <apidata name="FromValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constValue">
          <template name="T" index="0" api="T:System.Activities.InArgument`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.FromVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.InArgument`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Activity{`0})~System.Activities.InArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.InArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.InArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.op_Implicit(`0)~System.Activities.InArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constValue">
          <template name="T" index="0" api="T:System.Activities.InArgument`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InArgument`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.InArgument`1.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.InArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InArgument`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InOutArgument">
      <topicdata group="api" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.InOutArgument`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.InOutArgument">
      <topicdata name="InOutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InOutArgument" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InOutArgument">
      <topicdata name="InOutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InOutArgument" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.InOutArgument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InOutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InOutArgument`1">
      <topicdata group="api" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InOutArgument`1.#ctor" contentProperty="P:System.Activities.InOutArgument`1.Expression" />
      <family>
        <ancestors>
          <type api="T:System.Activities.InOutArgument" ref="true" />
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.InOutArgument`1.#ctor">
          <element api="M:System.Activities.InOutArgument`1.#ctor" />
          <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
          <element api="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
          <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)" />
          <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})" />
        </element>
        <element api="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})" />
        <element api="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.InOutArgument`1.op_Implicit">
          <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}" />
          <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}" />
        </element>
        <element api="Overload:System.Activities.InOutArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.InOutArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Expression</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.InOutArgumentConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.InOutArgument`1">
      <topicdata name="InOutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InOutArgument`1" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InOutArgument`1.#ctor" contentProperty="P:System.Activities.InOutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})" />
        <element api="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.InOutArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.InOutArgument`1">
      <topicdata name="InOutArgument" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.InOutArgument`1" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InOutArgument`1.#ctor" contentProperty="P:System.Activities.InOutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.InOutArgument`1.op_Implicit">
          <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}" />
          <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InOutArgument`1">
      <topicdata name="InOutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InOutArgument`1" />
      <apidata name="InOutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.InOutArgument`1.#ctor" contentProperty="P:System.Activities.InOutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.InOutArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InOutArgument`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.InOutArgument`1.#ctor" />
        <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)" />
        <element api="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InOutArgument`1.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}" />
        <element api="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InOutArgument`1.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InOutArgument`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InOutArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InOutArgument`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.#ctor(System.Activities.Variable{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InOutArgument`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InOutArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.InOutArgument`1.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Location`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.InOutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <topicdata group="api" />
      <apidata name="FromExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.FromVariable(System.Activities.Variable{`0})">
      <topicdata group="api" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.InOutArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InOutArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.op_Implicit(System.Activities.Variable{`0})~System.Activities.InOutArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.InOutArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.InOutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InOutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.InOutArgument`1.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.InOutArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InOutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InvalidWorkflowException">
      <topicdata group="api" />
      <apidata name="InvalidWorkflowException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.InvalidWorkflowException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.InvalidWorkflowException.#ctor">
          <element api="M:System.Activities.InvalidWorkflowException.#ctor" />
          <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.String)" />
          <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.InvalidWorkflowException">
      <topicdata name="InvalidWorkflowException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InvalidWorkflowException" />
      <apidata name="InvalidWorkflowException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.InvalidWorkflowException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InvalidWorkflowException">
      <topicdata name="InvalidWorkflowException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InvalidWorkflowException" />
      <apidata name="InvalidWorkflowException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.InvalidWorkflowException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.InvalidWorkflowException">
      <topicdata name="InvalidWorkflowException" group="list" subgroup="Events" typeTopicId="T:System.Activities.InvalidWorkflowException" />
      <apidata name="InvalidWorkflowException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.InvalidWorkflowException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.InvalidWorkflowException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.InvalidWorkflowException.#ctor" />
        <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.String)" />
        <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InvalidWorkflowException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InvalidWorkflowException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InvalidWorkflowException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.InvalidWorkflowException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InvalidWorkflowException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InvalidWorkflowException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.InvalidWorkflowException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.InvalidWorkflowException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvalidWorkflowException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.InvokeCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="InvokeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.InvokeCompletedEventArgs.Outputs" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.InvokeCompletedEventArgs">
      <topicdata name="InvokeCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.InvokeCompletedEventArgs" />
      <apidata name="InvokeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvokeCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.InvokeCompletedEventArgs">
      <topicdata name="InvokeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.InvokeCompletedEventArgs" />
      <apidata name="InvokeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.InvokeCompletedEventArgs.Outputs" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvokeCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Activities.InvokeCompletedEventArgs.Outputs">
      <topicdata group="api" />
      <apidata name="Outputs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Outputs" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.InvokeCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.IPropertyRegistrationCallback">
      <topicdata group="api" />
      <apidata name="IPropertyRegistrationCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />
        <element api="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.IPropertyRegistrationCallback">
      <topicdata name="IPropertyRegistrationCallback" group="list" subgroup="Methods" typeTopicId="T:System.Activities.IPropertyRegistrationCallback" />
      <apidata name="IPropertyRegistrationCallback" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)" />
        <element api="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IPropertyRegistrationCallback" />
      </containers>
    </api>
    <api id="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.RegistrationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IPropertyRegistrationCallback" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.RegistrationContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.IPropertyRegistrationCallback" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Location">
      <topicdata group="api" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Location`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Location.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Location.LocationType" />
        <element api="P:System.Activities.Location.Value" />
        <element api="P:System.Activities.Location.ValueCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Location">
      <topicdata name="Location" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Location" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Location">
      <topicdata name="Location" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Location" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Location.LocationType" />
        <element api="P:System.Activities.Location.Value" />
        <element api="P:System.Activities.Location.ValueCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" />
      </containers>
    </api>
    <api id="M:System.Activities.Location.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location.LocationType">
      <topicdata group="api" />
      <apidata name="LocationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LocationType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location.ValueCore">
      <topicdata group="api" />
      <apidata name="ValueCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ValueCore" />
      <setter name="set_ValueCore" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Location`1">
      <topicdata group="api" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Location`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Location" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Location`1.#ctor" />
        <element api="M:System.Activities.Location`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Location`1.LocationType" />
        <element api="P:System.Activities.Location`1.Value" />
        <element api="P:System.Activities.Location`1.ValueCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.Location`1">
      <topicdata name="Location" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Location`1" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Location`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Location`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Location`1">
      <topicdata name="Location" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Location`1" />
      <apidata name="Location" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.Location`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Location`1.LocationType" />
        <element api="P:System.Activities.Location`1.Value" />
        <element api="P:System.Activities.Location`1.ValueCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" />
      </containers>
    </api>
    <api id="M:System.Activities.Location`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location`1.LocationType">
      <topicdata group="api" />
      <apidata name="LocationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Location.LocationType">
          <type api="T:System.Activities.Location" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_LocationType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Location`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:System.Activities.Location`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Location`1.ValueCore">
      <topicdata group="api" />
      <apidata name="ValueCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Location.ValueCore">
          <type api="T:System.Activities.Location" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ValueCore" />
      <setter name="set_ValueCore" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Location`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.LocationReference">
      <topicdata group="api" />
      <apidata name="LocationReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.DelegateArgument" ref="true" />
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
          <type api="T:System.Activities.Variable" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.LocationReference.#ctor" />
        <element api="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.LocationReference.Name" />
        <element api="P:System.Activities.LocationReference.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.LocationReference">
      <topicdata name="LocationReference" group="list" subgroup="Methods" typeTopicId="T:System.Activities.LocationReference" />
      <apidata name="LocationReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.LocationReference">
      <topicdata name="LocationReference" group="list" subgroup="Properties" typeTopicId="T:System.Activities.LocationReference" />
      <apidata name="LocationReference" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.LocationReference.Name" />
        <element api="P:System.Activities.LocationReference.NameCore" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReference.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReference.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReference.NameCore">
      <topicdata group="api" />
      <apidata name="NameCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_NameCore" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReference.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReference.TypeCore">
      <topicdata group="api" />
      <apidata name="TypeCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_TypeCore" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReference" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.LocationReferenceEnvironment">
      <topicdata group="api" />
      <apidata name="LocationReferenceEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.LocationReferenceEnvironment.#ctor" />
        <element api="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences" />
        <element api="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)" />
        <element api="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.LocationReferenceEnvironment.Parent" />
        <element api="P:System.Activities.LocationReferenceEnvironment.Root" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.LocationReferenceEnvironment">
      <topicdata name="LocationReferenceEnvironment" group="list" subgroup="Methods" typeTopicId="T:System.Activities.LocationReferenceEnvironment" />
      <apidata name="LocationReferenceEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences" />
        <element api="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)" />
        <element api="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.LocationReferenceEnvironment">
      <topicdata name="LocationReferenceEnvironment" group="list" subgroup="Properties" typeTopicId="T:System.Activities.LocationReferenceEnvironment" />
      <apidata name="LocationReferenceEnvironment" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.LocationReferenceEnvironment.Parent" />
        <element api="P:System.Activities.LocationReferenceEnvironment.Root" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReferenceEnvironment.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReferenceEnvironment.GetLocationReferences">
      <topicdata group="api" />
      <apidata name="GetLocationReferences" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Activities.LocationReference" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReferenceEnvironment.IsVisible(System.Activities.LocationReference)">
      <topicdata group="api" />
      <apidata name="IsVisible" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="locationReference">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReferenceEnvironment.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Parent" />
      <setter name="set_Parent" />
      <returns>
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.LocationReferenceEnvironment.Root">
      <topicdata group="api" />
      <apidata name="Root" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Root" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.LocationReferenceEnvironment.TryGetLocationReference(System.String,System.Activities.LocationReference@)">
      <topicdata group="api" />
      <apidata name="TryGetLocationReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Activities.LocationReference" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivity">
      <topicdata group="api" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Statements.InvokeAction" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`1" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`2" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`3" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`4" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`5" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`6" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`7" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`8" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`9" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`10" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`11" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`12" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`13" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`14" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`15" ref="true" />
          <type api="T:System.Activities.Statements.InvokeAction`16" ref="true" />
          <type api="T:System.Activities.Statements.InvokeDelegate" ref="true" />
          <type api="T:System.Activities.Statements.Compensate" ref="true" />
          <type api="T:System.Activities.Statements.Confirm" ref="true" />
          <type api="T:System.Activities.Statements.DeleteBookmarkScope" ref="true" />
          <type api="T:System.Activities.Statements.HandleScope`1" ref="true" />
          <type api="T:System.Activities.Statements.Persist" ref="true" />
          <type api="T:System.Activities.Statements.Rethrow" ref="true" />
          <type api="T:System.Activities.Statements.TryCatch" ref="true" />
          <type api="T:System.Activities.Statements.CancellationScope" ref="true" />
          <type api="T:System.Activities.Statements.Delay" ref="true" />
          <type api="T:System.Activities.Statements.DoWhile" ref="true" />
          <type api="T:System.Activities.Statements.Flowchart" ref="true" />
          <type api="T:System.Activities.Statements.ForEach`1" ref="true" />
          <type api="T:System.Activities.Statements.If" ref="true" />
          <type api="T:System.Activities.Statements.Parallel" ref="true" />
          <type api="T:System.Activities.Statements.ParallelForEach`1" ref="true" />
          <type api="T:System.Activities.Statements.Pick" ref="true" />
          <type api="T:System.Activities.Statements.Sequence" ref="true" />
          <type api="T:System.Activities.Statements.Switch`1" ref="true" />
          <type api="T:System.Activities.Statements.TerminateWorkflow" ref="true" />
          <type api="T:System.Activities.Statements.TransactionScope" ref="true" />
          <type api="T:System.Activities.Statements.While" ref="true" />
          <type api="T:System.Activities.Statements.StateMachine" ref="true" />
          <type api="T:System.Activities.Statements.NoPersistScope" ref="true" />
          <type api="T:System.Activities.Statements.Interop" ref="true" />
          <type api="T:System.Activities.Validation.AddValidationError" ref="true" />
          <type api="T:System.Activities.Validation.AssertValidation" ref="true" />
          <type api="T:System.Activities.Validation.Constraint" ref="true" />
          <type api="T:System.ServiceModel.Activities.CorrelationScope" ref="true" />
          <type api="T:System.ServiceModel.Activities.InitializeCorrelation" ref="true" />
          <type api="T:System.ServiceModel.Activities.TransactedReceiveScope" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity.#ctor" />
        <element api="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="Overload:System.Activities.NativeActivity.CacheMetadata">
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.Activities.NativeActivity.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.NativeActivity.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity.Implementation" />
        <element api="P:System.Activities.NativeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivity">
      <topicdata name="NativeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivity" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="Overload:System.Activities.NativeActivity.CacheMetadata">
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.Activities.NativeActivity.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivity">
      <topicdata name="NativeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivity" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.NativeActivity.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity.Implementation" />
        <element api="P:System.Activities.NativeActivity.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivity.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivity.OnCreateDynamicUpdateMap">
      <topicdata name="OnCreateDynamicUpdateMap" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityAbortContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivity.CanInduceIdle">
      <topicdata group="api" />
      <apidata name="CanInduceIdle" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanInduceIdle" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.Execute(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivity.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.NativeActivity.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity.OnCreateDynamicUpdateMap" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity.OnCreateDynamicUpdateMap" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
      <topicdata group="api" />
      <apidata name="UpdateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="updateContext">
          <type api="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivity`1">
      <topicdata group="api" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Activities.NativeActivity`1" />
            </specialization>
          </type>
          <type api="T:System.Activities.ActivityWithResult" ref="true" />
          <type api="T:System.Activities.Activity" ref="true" contentProperty="P:System.Activities.Activity.Implementation" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Expressions.InvokeFunc`1" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`2" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`3" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`4" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`5" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`6" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`7" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`8" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`9" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`10" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`11" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`12" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`13" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`14" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`15" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`16" ref="true" />
          <type api="T:System.Activities.Expressions.InvokeFunc`17" ref="true" />
          <type api="T:System.Activities.Statements.CompensableActivity" ref="true" />
          <type api="T:System.Activities.Statements.CreateBookmarkScope" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity`1.#ctor" />
        <element api="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="Overload:System.Activities.NativeActivity`1.CacheMetadata">
          <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.NativeActivity`1.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity`1.Implementation" />
        <element api="P:System.Activities.NativeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivity`1">
      <topicdata name="NativeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivity`1" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Activities.Activity.ToString" />
        <element api="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)" />
        <element api="Overload:System.Activities.NativeActivity`1.CacheMetadata">
          <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
          <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
        </element>
        <element api="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)" />
        <element api="Overload:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap">
          <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
        </element>
        <element api="M:System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivity`1">
      <topicdata name="NativeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivity`1" />
      <apidata name="NativeActivity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Activities.Activity.CacheId" />
        <element api="P:System.Activities.Activity.Constraints" />
        <element api="P:System.Activities.Activity.DisplayName" />
        <element api="P:System.Activities.Activity.Id" />
        <element api="P:System.Activities.Activity`1.Result" />
        <element api="P:System.Activities.ActivityWithResult.ResultType" />
        <element api="P:System.Activities.NativeActivity`1.CanInduceIdle" />
        <element api="P:System.Activities.NativeActivity`1.Implementation" />
        <element api="P:System.Activities.NativeActivity`1.ImplementationVersion" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivity`1.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)" />
        <element api="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap">
      <topicdata name="OnCreateDynamicUpdateMap" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityAbortContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.CacheMetadata(System.Activities.ActivityMetadata)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.ActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity`1.CacheMetadata" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivity`1.CanInduceIdle">
      <topicdata group="api" />
      <apidata name="CanInduceIdle" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_CanInduceIdle" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.Execute(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivity`1.Implementation">
      <topicdata group="api" />
      <apidata name="Implementation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.Implementation">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Implementation" />
      <setter name="set_Implementation" />
      <returns>
        <type api="T:System.Func`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.NativeActivity`1.ImplementationVersion">
      <topicdata group="api" />
      <apidata name="ImplementationVersion" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="P:System.Activities.Activity.ImplementationVersion">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_ImplementationVersion" />
      <setter name="set_ImplementationVersion" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="OnCreateDynamicUpdateMap" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Activities.Activity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)">
          <type api="T:System.Activities.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="metadata">
          <type api="T:System.Activities.DynamicUpdate.UpdateMapMetadata" ref="true" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)">
      <topicdata group="api" />
      <apidata name="UpdateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="updateContext">
          <type api="T:System.Activities.DynamicUpdate.NativeActivityUpdateContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivity`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivityAbortContext">
      <topicdata group="api" />
      <apidata name="NativeActivityAbortContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityAbortContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityAbortContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityAbortContext.Reason" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivityAbortContext">
      <topicdata name="NativeActivityAbortContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivityAbortContext" />
      <apidata name="NativeActivityAbortContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityAbortContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityAbortContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityAbortContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivityAbortContext">
      <topicdata name="NativeActivityAbortContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivityAbortContext" />
      <apidata name="NativeActivityAbortContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityAbortContext.Reason" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityAbortContext" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityAbortContext.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityAbortContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivityContext">
      <topicdata group="api" />
      <apidata name="NativeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.NativeActivityFaultContext" ref="true" />
          <type api="T:System.Activities.NativeActivityTransactionContext" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivityContext">
      <topicdata name="NativeActivityContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivityContext" />
      <apidata name="NativeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivityContext">
      <topicdata name="NativeActivityContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivityContext" />
      <apidata name="NativeActivityContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.Abort">
      <topicdata name="Abort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.Abort" />
        <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.AbortChildInstance">
      <topicdata name="AbortChildInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AbortChildInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.CreateBookmark">
      <topicdata name="CreateBookmark" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
        <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.GetValue">
      <topicdata name="GetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
        <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
        <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
        <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.RemoveBookmark">
      <topicdata name="RemoveBookmark" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveBookmark" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
        <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
        <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.ScheduleAction">
      <topicdata name="ScheduleAction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.ScheduleActivity">
      <topicdata name="ScheduleActivity" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.ScheduleFunc">
      <topicdata name="ScheduleFunc" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityContext.SetValue">
      <topicdata name="SetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
        <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
        <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
        <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.Abort" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.Abort(System.Exception)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.Abort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)">
      <topicdata group="api" />
      <apidata name="AbortChildInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.AbortChildInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)">
      <topicdata group="api" />
      <apidata name="AbortChildInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.AbortChildInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)">
      <topicdata group="api" />
      <apidata name="CancelChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityInstance">
          <type api="T:System.Activities.ActivityInstance" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CancelChildren">
      <topicdata group="api" />
      <apidata name="CancelChildren" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Activities.BookmarkOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Activities.BookmarkOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.Activities.BookmarkScope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)">
      <topicdata group="api" />
      <apidata name="CreateBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.CreateBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.Activities.BookmarkScope" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Activities.BookmarkOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Bookmark" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityContext.DefaultBookmarkScope">
      <topicdata group="api" />
      <apidata name="DefaultBookmarkScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultBookmarkScope" />
      <returns>
        <type api="T:System.Activities.BookmarkScope" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.GetChildren">
      <topicdata group="api" />
      <apidata name="GetChildren" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.ActivityInstance" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.GetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityContext.IsCancellationRequested">
      <topicdata group="api" />
      <apidata name="IsCancellationRequested" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCancellationRequested" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.MarkCanceled">
      <topicdata group="api" />
      <apidata name="MarkCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityContext.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Activities.ExecutionProperties" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.RemoveAllBookmarks">
      <topicdata group="api" />
      <apidata name="RemoveAllBookmarks" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)">
      <topicdata group="api" />
      <apidata name="RemoveBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.RemoveBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.RemoveBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)">
      <topicdata group="api" />
      <apidata name="RemoveBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.RemoveBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="scope">
          <type api="T:System.Activities.BookmarkScope" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <topicdata group="api" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction" ref="true" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument">
          <template name="T" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`10" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`11" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`12" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`13" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`14" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`15" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument15">
          <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`16" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T16" index="15" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument15">
          <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument16">
          <template name="T16" index="15" api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`8" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleAction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleAction" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
      </templates>
      <parameters>
        <parameter name="activityAction">
          <type api="T:System.Activities.ActivityAction`9" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleActivity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleActivity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="onCompleted">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleActivity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="onCompleted">
          <type api="T:System.Activities.CompletionCallback" ref="true" />
        </parameter>
        <parameter name="onFaulted">
          <type api="T:System.Activities.FaultCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleActivity" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="onFaulted">
          <type api="T:System.Activities.FaultCallback" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleActivity" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleActivity" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
        <parameter name="inputParameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.DelegateCompletionCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`10" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
              <template name="TResult" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`11" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
              <template name="TResult" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`12" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
              <template name="TResult" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`13" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
              <template name="TResult" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`14" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
              <template name="TResult" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`15" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
              <template name="TResult" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`16" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
              <template name="TResult" index="15" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument15">
          <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="15" api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="T9" />
        <template name="T10" />
        <template name="T11" />
        <template name="T12" />
        <template name="T13" />
        <template name="T14" />
        <template name="T15" />
        <template name="T16" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`17" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="T16" index="15" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
              <template name="TResult" index="16" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument9">
          <template name="T9" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument10">
          <template name="T10" index="9" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument11">
          <template name="T11" index="10" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument12">
          <template name="T12" index="11" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument13">
          <template name="T13" index="12" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument14">
          <template name="T14" index="13" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument15">
          <template name="T15" index="14" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument16">
          <template name="T16" index="15" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="16" api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
              <template name="TResult" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument">
          <template name="T" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
              <template name="TResult" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
              <template name="TResult" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
              <template name="TResult" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
              <template name="TResult" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
              <template name="TResult" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`8" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
              <template name="TResult" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)">
      <topicdata group="api" />
      <apidata name="ScheduleFunc" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.ScheduleFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
        <template name="T8" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="activityFunc">
          <type api="T:System.Activities.ActivityFunc`9" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
              <template name="TResult" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="argument1">
          <template name="T1" index="0" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument2">
          <template name="T2" index="1" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument3">
          <template name="T3" index="2" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument4">
          <template name="T4" index="3" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument5">
          <template name="T5" index="4" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument6">
          <template name="T6" index="5" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument7">
          <template name="T7" index="6" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="argument8">
          <template name="T8" index="7" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
        </parameter>
        <parameter name="onCompleted" optional="true">
          <type api="T:System.Activities.CompletionCallback`1" ref="true">
            <specialization>
              <template name="TResult" index="8" api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="onFaulted" optional="true">
          <type api="T:System.Activities.FaultCallback" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.ActivityInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityContext.SetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)">
      <topicdata group="api" />
      <apidata name="Track" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="record">
          <type api="T:System.Activities.Tracking.CustomTrackingRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivityFaultContext">
      <topicdata group="api" />
      <apidata name="NativeActivityFaultContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Activities.NativeActivityFaultContext.HandleFault" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivityFaultContext">
      <topicdata name="NativeActivityFaultContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivityFaultContext" />
      <apidata name="NativeActivityFaultContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityFaultContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityFaultContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Activities.NativeActivityFaultContext.HandleFault" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityFaultContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivityFaultContext">
      <topicdata name="NativeActivityFaultContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivityFaultContext" />
      <apidata name="NativeActivityFaultContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityFaultContext" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityFaultContext.HandleFault">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityFaultContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivityMetadata">
      <topicdata group="api" />
      <apidata name="NativeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <family>
        <ancestors>
          <type api="T:System.ValueType" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddChild">
          <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddDelegate">
          <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddImportedChild">
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddImportedDelegate">
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddValidationError">
          <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddVariable">
          <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.NativeActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetHashCode" />
        <element api="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
        <element api="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
        <element api="Overload:System.Activities.NativeActivityMetadata.RequireExtension">
          <element api="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Activities.NativeActivityMetadata.Environment" />
        <element api="P:System.Activities.NativeActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivityMetadata">
      <topicdata name="NativeActivityMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivityMetadata" />
      <apidata name="NativeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddChild">
          <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddDelegate">
          <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)" />
        <element api="Overload:System.Activities.NativeActivityMetadata.AddImportedChild">
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddImportedDelegate">
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddValidationError">
          <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityMetadata.AddVariable">
          <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
        <element api="M:System.Activities.NativeActivityMetadata.Equals(System.Object)" />
        <element api="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection" />
        <element api="M:System.Activities.NativeActivityMetadata.GetHashCode" />
        <element api="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection" />
        <element api="Overload:System.Activities.NativeActivityMetadata.RequireExtension">
          <element api="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
          <element api="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
        </element>
        <element api="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
        <element api="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.NativeActivityMetadata">
      <topicdata name="NativeActivityMetadata" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.NativeActivityMetadata" />
      <apidata name="NativeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
        <element api="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivityMetadata">
      <topicdata name="NativeActivityMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivityMetadata" />
      <apidata name="NativeActivityMetadata" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Activities.NativeActivityMetadata.Environment" />
        <element api="P:System.Activities.NativeActivityMetadata.HasViolations" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddChild">
      <topicdata name="AddChild" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddDelegate">
      <topicdata name="AddDelegate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddDelegate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddImportedChild">
      <topicdata name="AddImportedChild" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddImportedDelegate">
      <topicdata name="AddImportedDelegate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddValidationError">
      <topicdata name="AddValidationError" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.AddVariable">
      <topicdata name="AddVariable" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="Overload:System.Activities.NativeActivityMetadata.RequireExtension">
      <topicdata name="RequireExtension" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
        <element api="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="AddArgument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="child">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)">
      <topicdata group="api" />
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="child">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="AddDefaultExtensionProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="extensionProvider">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)">
      <topicdata group="api" />
      <apidata name="AddDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)">
      <topicdata group="api" />
      <apidata name="AddDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="AddImplementationChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationChild">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)">
      <topicdata group="api" />
      <apidata name="AddImplementationDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="AddImplementationVariable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationVariable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddImportedChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChild">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)">
      <topicdata group="api" />
      <apidata name="AddImportedChild" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddImportedChild" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChild">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)">
      <topicdata group="api" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddImportedDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)">
      <topicdata group="api" />
      <apidata name="AddImportedDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddImportedDelegate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegate">
          <type api="T:System.Activities.ActivityDelegate" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationError">
          <type api="T:System.Activities.Validation.ValidationError" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)">
      <topicdata group="api" />
      <apidata name="AddValidationError" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddValidationError" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrorMessage">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)">
      <topicdata group="api" />
      <apidata name="AddVariable" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.AddVariable" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="binding">
          <type api="T:System.Activities.Argument" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:System.Activities.RuntimeArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityMetadata.Environment">
      <topicdata group="api" />
      <apidata name="Environment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Environment" />
      <returns>
        <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection">
      <topicdata group="api" />
      <apidata name="GetArgumentsWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.RuntimeArgument" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection">
      <topicdata group="api" />
      <apidata name="GetChildrenWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection">
      <topicdata group="api" />
      <apidata name="GetDelegatesWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.ActivityDelegate" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection">
      <topicdata group="api" />
      <apidata name="GetVariablesWithReflection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Variable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="P:System.Activities.NativeActivityMetadata.HasViolations">
      <topicdata group="api" />
      <apidata name="HasViolations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasViolations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.RequireExtension``1">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)">
      <topicdata group="api" />
      <apidata name="RequireExtension" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.NativeActivityMetadata.RequireExtension" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extensionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})">
      <topicdata group="api" />
      <apidata name="SetArgumentsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arguments">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.RuntimeArgument" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <topicdata group="api" />
      <apidata name="SetChildrenCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="children">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <topicdata group="api" />
      <apidata name="SetDelegatesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegates">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.ActivityDelegate" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <topicdata group="api" />
      <apidata name="SetImplementationChildrenCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationChildren">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <topicdata group="api" />
      <apidata name="SetImplementationDelegatesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationDelegates">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.ActivityDelegate" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <topicdata group="api" />
      <apidata name="SetImplementationVariablesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="implementationVariables">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Variable" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})">
      <topicdata group="api" />
      <apidata name="SetImportedChildrenCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedChildren">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})">
      <topicdata group="api" />
      <apidata name="SetImportedDelegatesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="importedDelegates">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.ActivityDelegate" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})">
      <topicdata group="api" />
      <apidata name="SetValidationErrorsCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="validationErrors">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Validation.ValidationError" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})">
      <topicdata group="api" />
      <apidata name="SetVariablesCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variables">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Variable" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityMetadata" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.NativeActivityTransactionContext">
      <topicdata group="api" />
      <apidata name="NativeActivityTransactionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
          <type api="T:System.Activities.ActivityContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.NativeActivityTransactionContext">
      <topicdata name="NativeActivityTransactionContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NativeActivityTransactionContext" />
      <apidata name="NativeActivityTransactionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.ActivityContext.GetExtension``1" />
        <element api="M:System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.Abort">
          <element api="M:System.Activities.NativeActivityContext.Abort" />
          <element api="M:System.Activities.NativeActivityContext.Abort(System.Exception)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.AbortChildInstance">
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance)" />
          <element api="M:System.Activities.NativeActivityContext.AbortChildInstance(System.Activities.ActivityInstance,System.Exception)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.CancelChild(System.Activities.ActivityInstance)" />
        <element api="M:System.Activities.NativeActivityContext.CancelChildren" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.CreateBookmark">
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkOptions)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope)" />
          <element api="M:System.Activities.NativeActivityContext.CreateBookmark(System.String,System.Activities.BookmarkCallback,System.Activities.BookmarkScope,System.Activities.BookmarkOptions)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.GetChildren" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.GetValue">
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.Argument)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)" />
          <element api="M:System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})" />
          <element api="M:System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue(System.Activities.Variable)" />
          <element api="M:System.Activities.NativeActivityContext.GetValue``1(System.Activities.Variable{``0})" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.MarkCanceled" />
        <element api="M:System.Activities.NativeActivityContext.RemoveAllBookmarks" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.RemoveBookmark">
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.Activities.Bookmark)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String)" />
          <element api="M:System.Activities.NativeActivityContext.RemoveBookmark(System.String,System.Activities.BookmarkScope)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleAction">
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction(System.Activities.ActivityAction,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``1(System.Activities.ActivityAction{``0},``0,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``2(System.Activities.ActivityAction{``0,``1},``0,``1,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``3(System.Activities.ActivityAction{``0,``1,``2},``0,``1,``2,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``4(System.Activities.ActivityAction{``0,``1,``2,``3},``0,``1,``2,``3,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``5(System.Activities.ActivityAction{``0,``1,``2,``3,``4},``0,``1,``2,``3,``4,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``6(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``7(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``8(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``9(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``10(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``11(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``12(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``13(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``14(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``15(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleAction``16(System.Activities.ActivityAction{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleActivity">
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity(System.Activities.Activity,System.Activities.CompletionCallback,System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleActivity``1(System.Activities.Activity{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.ScheduleDelegate(System.Activities.ActivityDelegate,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.DelegateCompletionCallback,System.Activities.FaultCallback)" />
        <element api="Overload:System.Activities.NativeActivityTransactionContext.ScheduleFunc">
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``1(System.Activities.ActivityFunc{``0},System.Activities.CompletionCallback{``0},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``2(System.Activities.ActivityFunc{``0,``1},``0,System.Activities.CompletionCallback{``1},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``3(System.Activities.ActivityFunc{``0,``1,``2},``0,``1,System.Activities.CompletionCallback{``2},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``4(System.Activities.ActivityFunc{``0,``1,``2,``3},``0,``1,``2,System.Activities.CompletionCallback{``3},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``5(System.Activities.ActivityFunc{``0,``1,``2,``3,``4},``0,``1,``2,``3,System.Activities.CompletionCallback{``4},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``6(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4,System.Activities.CompletionCallback{``5},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``7(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5,System.Activities.CompletionCallback{``6},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``8(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6,System.Activities.CompletionCallback{``7},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``9(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7,System.Activities.CompletionCallback{``8},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``10(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8,System.Activities.CompletionCallback{``9},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``11(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,System.Activities.CompletionCallback{``10},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``12(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,System.Activities.CompletionCallback{``11},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``13(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,System.Activities.CompletionCallback{``12},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``14(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,System.Activities.CompletionCallback{``13},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``15(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,System.Activities.CompletionCallback{``14},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``16(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,System.Activities.CompletionCallback{``15},System.Activities.FaultCallback)" />
          <element api="M:System.Activities.NativeActivityContext.ScheduleFunc``17(System.Activities.ActivityFunc{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,System.Activities.CompletionCallback{``16},System.Activities.FaultCallback)" />
        </element>
        <element api="Overload:System.Activities.NativeActivityTransactionContext.SetValue">
          <element api="M:System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)" />
          <element api="M:System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue(System.Activities.Variable,System.Object)" />
          <element api="M:System.Activities.NativeActivityContext.SetValue``1(System.Activities.Variable{``0},``0)" />
        </element>
        <element api="M:System.Activities.NativeActivityContext.Track(System.Activities.Tracking.CustomTrackingRecord)" />
        <element api="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityTransactionContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NativeActivityTransactionContext">
      <topicdata name="NativeActivityTransactionContext" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NativeActivityTransactionContext" />
      <apidata name="NativeActivityTransactionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.ActivityContext.ActivityInstanceId" />
        <element api="P:System.Activities.ActivityContext.DataContext" />
        <element api="P:System.Activities.ActivityContext.WorkflowInstanceId" />
        <element api="P:System.Activities.NativeActivityContext.DefaultBookmarkScope" />
        <element api="P:System.Activities.NativeActivityContext.IsCancellationRequested" />
        <element api="P:System.Activities.NativeActivityContext.Properties" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityTransactionContext" />
      </containers>
    </api>
    <api id="M:System.Activities.NativeActivityTransactionContext.SetRuntimeTransaction(System.Transactions.Transaction)">
      <topicdata group="api" />
      <apidata name="SetRuntimeTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="transaction">
          <type api="T:System.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NativeActivityTransactionContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.NoPersistHandle">
      <topicdata group="api" />
      <apidata name="NoPersistHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.NoPersistHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Handle" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Activities.NoPersistHandle.#ctor" />
        <element api="M:System.Activities.NoPersistHandle.Enter(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NoPersistHandle.Exit(System.Activities.NativeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.NoPersistHandle">
      <topicdata name="NoPersistHandle" group="list" subgroup="Methods" typeTopicId="T:System.Activities.NoPersistHandle" />
      <apidata name="NoPersistHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.NoPersistHandle.#ctor" />
      <elements>
        <element api="M:System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)" />
        <element api="M:System.Activities.Handle.ThrowIfUninitialized" />
        <element api="M:System.Activities.NoPersistHandle.Enter(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.NoPersistHandle.Exit(System.Activities.NativeActivityContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NoPersistHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.NoPersistHandle">
      <topicdata name="NoPersistHandle" group="list" subgroup="Properties" typeTopicId="T:System.Activities.NoPersistHandle" />
      <apidata name="NoPersistHandle" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Activities.NoPersistHandle.#ctor" />
      <elements>
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NoPersistHandle" />
      </containers>
    </api>
    <api id="M:System.Activities.NoPersistHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NoPersistHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NoPersistHandle.Enter(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Enter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NoPersistHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.NoPersistHandle.Exit(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.NoPersistHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.OutArgument">
      <topicdata group="api" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.OutArgument`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="Overload:System.Activities.OutArgument.CreateReference">
          <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
          <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.OutArgument">
      <topicdata name="OutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.OutArgument" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Argument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="Overload:System.Activities.OutArgument.CreateReference">
          <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
          <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.OutArgument">
      <topicdata name="OutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.OutArgument" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.Argument.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument" />
      </containers>
    </api>
    <api id="Overload:System.Activities.OutArgument.CreateReference">
      <topicdata name="CreateReference" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)" />
        <element api="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument.CreateReference(System.Activities.InOutArgument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.OutArgument.CreateReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.InOutArgument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument.CreateReference(System.Activities.OutArgument,System.String)">
      <topicdata group="api" />
      <apidata name="CreateReference" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.OutArgument.CreateReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="argumentToReference">
          <type api="T:System.Activities.OutArgument" ref="true" />
        </parameter>
        <parameter name="referencedArgumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.OutArgument`1">
      <topicdata group="api" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OutArgument`1.#ctor" contentProperty="P:System.Activities.OutArgument`1.Expression" />
      <family>
        <ancestors>
          <type api="T:System.Activities.OutArgument" ref="true" />
          <type api="T:System.Activities.Argument" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.OutArgument`1.#ctor">
          <element api="M:System.Activities.OutArgument`1.#ctor" />
          <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
          <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)" />
          <element api="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
          <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)" />
        </element>
        <element api="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.OutArgument`1.op_Implicit">
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}" />
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}" />
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}" />
        </element>
        <element api="Overload:System.Activities.OutArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.OutArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Expression</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.OutArgumentConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.OutArgument`1">
      <topicdata name="OutArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.OutArgument`1" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OutArgument`1.#ctor" contentProperty="P:System.Activities.OutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)" />
        <element api="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.OutArgument`1.Set">
          <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" />
      </containers>
    </api>
    <api id="Operators.T:System.Activities.OutArgument`1">
      <topicdata name="OutArgument" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Activities.OutArgument`1" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OutArgument`1.#ctor" contentProperty="P:System.Activities.OutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.OutArgument`1.op_Implicit">
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}" />
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}" />
          <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.OutArgument`1">
      <topicdata name="OutArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.OutArgument`1" />
      <apidata name="OutArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OutArgument`1.#ctor" contentProperty="P:System.Activities.OutArgument`1.Expression" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.Argument.ArgumentType" />
        <element api="P:System.Activities.Argument.Direction" />
        <element api="P:System.Activities.Argument.EvaluationOrder" />
        <element api="P:System.Activities.OutArgument`1.Expression" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.OutArgument`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.OutArgument`1.#ctor" />
        <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})" />
        <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)" />
        <element api="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.OutArgument`1.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}" />
        <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}" />
        <element api="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.OutArgument`1.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Argument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OutArgument`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.#ctor(System.Activities.Activity{System.Activities.Location{`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OutArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.#ctor(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OutArgument`1.#ctor" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.#ctor(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OutArgument`1.#ctor" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OutArgument`1.#ctor" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.OutArgument`1.Expression">
      <topicdata group="api" />
      <apidata name="Expression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expression" />
      <setter name="set_Expression" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Location`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.OutArgument`1.FromDelegateArgument(System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name="FromDelegateArgument" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.FromExpression(System.Activities.Activity{System.Activities.Location{`0}})">
      <topicdata group="api" />
      <apidata name="FromExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.FromVariable(System.Activities.Variable)">
      <topicdata group="api" />
      <apidata name="FromVariable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Activity{System.Activities.Location{`0}})~System.Activities.OutArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.OutArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expression">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <type api="T:System.Activities.Location`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.DelegateArgument)~System.Activities.OutArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.OutArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.op_Implicit(System.Activities.Variable)~System.Activities.OutArgument{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Activities.OutArgument`1.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:System.Activities.Variable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.OutArgument`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OutArgument`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.OutArgument`1.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.OutArgument`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OutArgument`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.OverloadGroupAttribute">
      <topicdata group="api" />
      <apidata name="OverloadGroupAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OverloadGroupAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Activities.OverloadGroupAttribute.#ctor">
          <element api="M:System.Activities.OverloadGroupAttribute.#ctor" />
          <element api="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)" />
        </element>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.OverloadGroupAttribute.GroupName" />
        <element api="P:System.Activities.OverloadGroupAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.OverloadGroupAttribute">
      <topicdata name="OverloadGroupAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Activities.OverloadGroupAttribute" />
      <apidata name="OverloadGroupAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OverloadGroupAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.OverloadGroupAttribute">
      <topicdata name="OverloadGroupAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Activities.OverloadGroupAttribute" />
      <apidata name="OverloadGroupAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.OverloadGroupAttribute.#ctor" />
      <elements>
        <element api="P:System.Activities.OverloadGroupAttribute.GroupName" />
        <element api="P:System.Activities.OverloadGroupAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Activities.OverloadGroupAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.OverloadGroupAttribute.#ctor" />
        <element api="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OverloadGroupAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OverloadGroupAttribute.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.OverloadGroupAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.OverloadGroupAttribute.#ctor" />
      <parameters>
        <parameter name="groupName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.OverloadGroupAttribute.GroupName">
      <topicdata group="api" />
      <apidata name="GroupName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupName" />
      <setter name="set_GroupName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.OverloadGroupAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.OverloadGroupAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.PersistableIdleAction">
      <topicdata group="api" />
      <apidata name="PersistableIdleAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.PersistableIdleAction.None" />
        <element api="F:System.Activities.PersistableIdleAction.Unload" />
        <element api="F:System.Activities.PersistableIdleAction.Persist" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="F:System.Activities.PersistableIdleAction.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.PersistableIdleAction.Persist">
      <topicdata group="api" notopic="" />
      <apidata name="Persist" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.PersistableIdleAction.Unload">
      <topicdata group="api" notopic="" />
      <apidata name="Unload" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.PersistableIdleAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.RegistrationContext">
      <topicdata group="api" />
      <apidata name="RegistrationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.RegistrationContext.FindProperty(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.RegistrationContext">
      <topicdata name="RegistrationContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.RegistrationContext" />
      <apidata name="RegistrationContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.RegistrationContext.FindProperty(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RegistrationContext" />
      </containers>
    </api>
    <api id="M:System.Activities.RegistrationContext.FindProperty(System.String)">
      <topicdata group="api" />
      <apidata name="FindProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RegistrationContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.RequiredArgumentAttribute">
      <topicdata group="api" />
      <apidata name="RequiredArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RequiredArgumentAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.RequiredArgumentAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.RequiredArgumentAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.RequiredArgumentAttribute">
      <topicdata name="RequiredArgumentAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Activities.RequiredArgumentAttribute" />
      <apidata name="RequiredArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RequiredArgumentAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RequiredArgumentAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.RequiredArgumentAttribute">
      <topicdata name="RequiredArgumentAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Activities.RequiredArgumentAttribute" />
      <apidata name="RequiredArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RequiredArgumentAttribute.#ctor" />
      <elements>
        <element api="P:System.Activities.RequiredArgumentAttribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RequiredArgumentAttribute" />
      </containers>
    </api>
    <api id="M:System.Activities.RequiredArgumentAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RequiredArgumentAttribute.TypeId">
      <topicdata group="api" />
      <apidata name="TypeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Attribute.TypeId">
          <type api="T:System.Attribute" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TypeId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RequiredArgumentAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.RuntimeArgument">
      <topicdata group="api" />
      <apidata name="RuntimeArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Activities.RuntimeArgument.#ctor">
          <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)" />
          <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)" />
          <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})" />
          <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})" />
        </element>
        <element api="Overload:System.Activities.RuntimeArgument.Get">
          <element api="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)" />
          <element api="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)" />
        </element>
        <element api="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.LocationReference.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.RuntimeArgument.Direction" />
        <element api="P:System.Activities.RuntimeArgument.IsRequired" />
        <element api="P:System.Activities.RuntimeArgument.OverloadGroupNames" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.RuntimeArgument">
      <topicdata name="RuntimeArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.RuntimeArgument" />
      <apidata name="RuntimeArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.RuntimeArgument.Get">
          <element api="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)" />
          <element api="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)" />
        </element>
        <element api="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.RuntimeArgument">
      <topicdata name="RuntimeArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.RuntimeArgument" />
      <apidata name="RuntimeArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.LocationReference.Name" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.RuntimeArgument.Direction" />
        <element api="P:System.Activities.RuntimeArgument.IsRequired" />
        <element api="P:System.Activities.RuntimeArgument.OverloadGroupNames" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" />
      </containers>
    </api>
    <api id="Overload:System.Activities.RuntimeArgument.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)" />
        <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)" />
        <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})" />
        <element api="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.RuntimeArgument.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeArgument.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argumentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeArgument.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argumentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
        <parameter name="isRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Boolean,System.Collections.Generic.List{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeArgument.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argumentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
        <parameter name="isRequired">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="overloadGroupNames">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Collections.Generic.List{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeArgument.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argumentType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
        <parameter name="overloadGroupNames">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeArgument.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Direction" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeArgument.Get" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeArgument.Get" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.Activities.RuntimeArgument.Get``1(System.Activities.ActivityContext)" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeArgument.IsRequired">
      <topicdata group="api" />
      <apidata name="IsRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeArgument.OverloadGroupNames">
      <topicdata group="api" />
      <apidata name="OverloadGroupNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OverloadGroupNames" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeArgument.Set(System.Activities.ActivityContext,System.Object)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.RuntimeDelegateArgument">
      <topicdata group="api" />
      <apidata name="RuntimeDelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.RuntimeDelegateArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Activities.DelegateArgument)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.RuntimeDelegateArgument.BoundArgument" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Direction" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Name" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.RuntimeDelegateArgument">
      <topicdata name="RuntimeDelegateArgument" group="list" subgroup="Methods" typeTopicId="T:System.Activities.RuntimeDelegateArgument" />
      <apidata name="RuntimeDelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.RuntimeDelegateArgument">
      <topicdata name="RuntimeDelegateArgument" group="list" subgroup="Properties" typeTopicId="T:System.Activities.RuntimeDelegateArgument" />
      <apidata name="RuntimeDelegateArgument" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.RuntimeDelegateArgument.BoundArgument" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Direction" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Name" />
        <element api="P:System.Activities.RuntimeDelegateArgument.Type" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeDelegateArgument.#ctor(System.String,System.Type,System.Activities.ArgumentDirection,System.Activities.DelegateArgument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.Activities.ArgumentDirection" ref="false" />
        </parameter>
        <parameter name="boundArgument">
          <type api="T:System.Activities.DelegateArgument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeDelegateArgument.BoundArgument">
      <topicdata group="api" />
      <apidata name="BoundArgument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BoundArgument" />
      <returns>
        <type api="T:System.Activities.DelegateArgument" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeDelegateArgument.Direction">
      <topicdata group="api" />
      <apidata name="Direction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Direction" />
      <returns>
        <type api="T:System.Activities.ArgumentDirection" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeDelegateArgument.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeDelegateArgument.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeDelegateArgument" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.RuntimeTransactionHandle">
      <topicdata group="api" />
      <apidata name="RuntimeTransactionHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RuntimeTransactionHandle.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Handle" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Activities.IExecutionProperty" ref="true" />
        <type api="T:System.Activities.IPropertyRegistrationCallback" ref="true" />
      </implements>
      <elements>
        <element api="Overload:System.Activities.RuntimeTransactionHandle.#ctor">
          <element api="M:System.Activities.RuntimeTransactionHandle.#ctor" />
          <element api="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)" />
        </element>
        <element api="Overload:System.Activities.RuntimeTransactionHandle.CompleteTransaction">
          <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)" />
        </element>
        <element api="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction">
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)" />
        </element>
        <element api="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
        <element api="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
        <element api="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.RuntimeTransactionHandle">
      <topicdata name="RuntimeTransactionHandle" group="list" subgroup="Methods" typeTopicId="T:System.Activities.RuntimeTransactionHandle" />
      <apidata name="RuntimeTransactionHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RuntimeTransactionHandle.#ctor" />
      <elements>
        <element api="Overload:System.Activities.RuntimeTransactionHandle.CompleteTransaction">
          <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)" />
        </element>
        <element api="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction">
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)" />
          <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)" />
        </element>
        <element api="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.RuntimeTransactionHandle">
      <topicdata name="RuntimeTransactionHandle" group="list" subgroup="Properties" typeTopicId="T:System.Activities.RuntimeTransactionHandle" />
      <apidata name="RuntimeTransactionHandle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.RuntimeTransactionHandle.#ctor" />
      <elements>
        <element api="P:System.Activities.Handle.ExecutionPropertyName" />
        <element api="P:System.Activities.Handle.Owner" />
        <element api="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure" />
        <element api="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" />
      </containers>
    </api>
    <api id="Overload:System.Activities.RuntimeTransactionHandle.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.RuntimeTransactionHandle.#ctor" />
        <element api="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.RuntimeTransactionHandle.CompleteTransaction">
      <topicdata name="CompleteTransaction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CompleteTransaction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction">
      <topicdata name="GetCurrentTransaction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetCurrentTransaction" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)" />
        <element api="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeTransactionHandle.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.#ctor(System.Transactions.Transaction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.RuntimeTransactionHandle.#ctor" />
      <parameters>
        <parameter name="rootTransaction">
          <type api="T:System.Transactions.Transaction" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeTransactionHandle.AbortInstanceOnTransactionFailure">
      <topicdata group="api" />
      <apidata name="AbortInstanceOnTransactionFailure" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AbortInstanceOnTransactionFailure" />
      <setter name="set_AbortInstanceOnTransactionFailure" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="CompleteTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeTransactionHandle.CompleteTransaction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.CompleteTransaction(System.Activities.NativeActivityContext,System.Activities.BookmarkCallback)">
      <topicdata group="api" />
      <apidata name="CompleteTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeTransactionHandle.CompleteTransaction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Activities.BookmarkCallback" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.AsyncCodeActivityContext)">
      <topicdata group="api" />
      <apidata name="GetCurrentTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.AsyncCodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.CodeActivityContext)">
      <topicdata group="api" />
      <apidata name="GetCurrentTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.CodeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction(System.Activities.NativeActivityContext)">
      <topicdata group="api" />
      <apidata name="GetCurrentTransaction" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.RuntimeTransactionHandle.GetCurrentTransaction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Transactions.Transaction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.RequestTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="RequestTransactionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Activities.NativeActivityTransactionContext" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.RequireTransactionContext(System.Activities.NativeActivityContext,System.Action{System.Activities.NativeActivityTransactionContext,System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="RequireTransactionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.NativeActivityContext" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Activities.NativeActivityTransactionContext" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.RuntimeTransactionHandle.SuppressTransaction">
      <topicdata group="api" />
      <apidata name="SuppressTransaction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SuppressTransaction" />
      <setter name="set_SuppressTransaction" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#CleanupWorkflowThread">
      <topicdata group="api" eiiName="IExecutionProperty.CleanupWorkflowThread" />
      <apidata name="CleanupWorkflowThread" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Activities.IExecutionProperty.CleanupWorkflowThread">
          <type api="T:System.Activities.IExecutionProperty" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.System#Activities#IExecutionProperty#SetupWorkflowThread">
      <topicdata group="api" eiiName="IExecutionProperty.SetupWorkflowThread" />
      <apidata name="SetupWorkflowThread" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Activities.IExecutionProperty.SetupWorkflowThread">
          <type api="T:System.Activities.IExecutionProperty" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Register(System.Activities.RegistrationContext)">
      <topicdata group="api" eiiName="IPropertyRegistrationCallback.Register" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.RegistrationContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Activities.IPropertyRegistrationCallback.Register(System.Activities.RegistrationContext)">
          <type api="T:System.Activities.IPropertyRegistrationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.RuntimeTransactionHandle.System#Activities#IPropertyRegistrationCallback#Unregister(System.Activities.RegistrationContext)">
      <topicdata group="api" eiiName="IPropertyRegistrationCallback.Unregister" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.RegistrationContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Activities.IPropertyRegistrationCallback.Unregister(System.Activities.RegistrationContext)">
          <type api="T:System.Activities.IPropertyRegistrationCallback" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.RuntimeTransactionHandle" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.UnhandledExceptionAction">
      <topicdata group="api" />
      <apidata name="UnhandledExceptionAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.UnhandledExceptionAction.Abort" />
        <element api="F:System.Activities.UnhandledExceptionAction.Cancel" />
        <element api="F:System.Activities.UnhandledExceptionAction.Terminate" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="F:System.Activities.UnhandledExceptionAction.Abort">
      <topicdata group="api" notopic="" />
      <apidata name="Abort" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.UnhandledExceptionAction.Cancel">
      <topicdata group="api" notopic="" />
      <apidata name="Cancel" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.UnhandledExceptionAction.Terminate">
      <topicdata group="api" notopic="" />
      <apidata name="Terminate" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.ValidationException">
      <topicdata group="api" />
      <apidata name="ValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.ValidationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.ValidationException.#ctor">
          <element api="M:System.Activities.ValidationException.#ctor" />
          <element api="M:System.Activities.ValidationException.#ctor(System.String)" />
          <element api="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.ValidationException">
      <topicdata name="ValidationException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.ValidationException" />
      <apidata name="ValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.ValidationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.ValidationException">
      <topicdata name="ValidationException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.ValidationException" />
      <apidata name="ValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.ValidationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.ValidationException">
      <topicdata name="ValidationException" group="list" subgroup="Events" typeTopicId="T:System.Activities.ValidationException" />
      <apidata name="ValidationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.ValidationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.ValidationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.ValidationException.#ctor" />
        <element api="M:System.Activities.ValidationException.#ctor(System.String)" />
        <element api="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ValidationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.ValidationException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.ValidationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ValidationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.ValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.ValidationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.ValidationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.ValidationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Variable">
      <topicdata group="api" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.Variable`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)" />
        <element api="M:System.Activities.Variable.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
        <element api="P:System.Activities.Variable.Default" />
        <element api="P:System.Activities.Variable.Modifiers" />
        <element api="P:System.Activities.Variable.Name" />
        <element api="P:System.Activities.Variable.NameCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Variable">
      <topicdata name="Variable" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Variable" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)" />
        <element api="M:System.Activities.Variable.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Variable">
      <topicdata name="Variable" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Variable" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.LocationReference.TypeCore" />
        <element api="P:System.Activities.Variable.Default" />
        <element api="P:System.Activities.Variable.Modifiers" />
        <element api="P:System.Activities.Variable.Name" />
        <element api="P:System.Activities.Variable.NameCore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable.Create(System.String,System.Type,System.Activities.VariableModifiers)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="modifiers">
          <type api="T:System.Activities.VariableModifiers" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Variable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Variable.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Default" />
      <setter name="set_Default" />
      <returns>
        <type api="T:System.Activities.ActivityWithResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.IgnoreDataMemberAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.Variable.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Activities.LocationReference.GetLocation(System.Activities.ActivityContext)">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Variable.Modifiers">
      <topicdata group="api" />
      <apidata name="Modifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Modifiers" />
      <setter name="set_Modifiers" />
      <returns>
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Activities.VariableModifiers" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Variable.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.Variable.NameCore">
      <topicdata group="api" />
      <apidata name="NameCore" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.LocationReference.NameCore">
          <type api="T:System.Activities.LocationReference" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_NameCore" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.Variable`1">
      <topicdata group="api" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Variable`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Variable" ref="true" />
          <type api="T:System.Activities.LocationReference" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:System.Activities.Variable`1.#ctor">
          <element api="M:System.Activities.Variable`1.#ctor" />
          <element api="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
          <element api="M:System.Activities.Variable`1.#ctor(System.String)" />
          <element api="M:System.Activities.Variable`1.#ctor(System.String,`0)" />
          <element api="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        </element>
        <element api="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.Variable`1.Set">
          <element api="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.Variable.Modifiers" />
        <element api="P:System.Activities.Variable.Name" />
        <element api="P:System.Activities.Variable`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.Variable`1">
      <topicdata name="Variable" group="list" subgroup="Methods" typeTopicId="T:System.Activities.Variable`1" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Variable`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)" />
        <element api="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)" />
        <element api="Overload:System.Activities.Variable`1.Set">
          <element api="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)" />
          <element api="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.Variable`1">
      <topicdata name="Variable" group="list" subgroup="Properties" typeTopicId="T:System.Activities.Variable`1" />
      <apidata name="Variable" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Activities.Variable`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Activities.LocationReference.Type" />
        <element api="P:System.Activities.Variable.Modifiers" />
        <element api="P:System.Activities.Variable.Name" />
        <element api="P:System.Activities.Variable`1.Default" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Variable`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.Variable`1.#ctor" />
        <element api="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
        <element api="M:System.Activities.Variable`1.#ctor(System.String)" />
        <element api="M:System.Activities.Variable`1.#ctor(System.String,`0)" />
        <element api="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.Variable`1.Set">
      <topicdata name="Set" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Set" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.Variable.Set(System.Activities.ActivityContext,System.Object)" />
        <element api="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Variable`1.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Variable`1.#ctor" />
      <parameters>
        <parameter name="defaultExpression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.Variable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Variable`1.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.#ctor(System.String,System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,`0}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Variable`1.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultExpression">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Activities.ActivityContext" ref="true" />
                  <template name="T" index="0" api="T:System.Activities.Variable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.#ctor(System.String,`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.Variable`1.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="T:System.Activities.Variable`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.Variable`1.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Default" />
      <setter name="set_Default" />
      <returns>
        <type api="T:System.Activities.Activity`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.Variable`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Activities.Variable`1.Get(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Activities.Variable`1" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.GetLocation(System.Activities.ActivityContext)">
      <topicdata group="api" />
      <apidata name="GetLocation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Location`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Activities.Variable`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.Variable`1.Set(System.Activities.ActivityContext,`0)">
      <topicdata group="api" />
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.Variable`1.Set" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Activities.ActivityContext" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Activities.Variable`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.Variable`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.VariableModifiers">
      <topicdata group="api" />
      <apidata name="VariableModifiers" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.VariableModifiers.None" />
        <element api="F:System.Activities.VariableModifiers.ReadOnly" />
        <element api="F:System.Activities.VariableModifiers.Mapped" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Activities.VariableModifiers.Mapped">
      <topicdata group="api" notopic="" />
      <apidata name="Mapped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.VariableModifiers.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.VariableModifiers.ReadOnly">
      <topicdata group="api" notopic="" />
      <apidata name="ReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VariableModifiers" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.VersionMismatchException">
      <topicdata group="api" />
      <apidata name="VersionMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.VersionMismatchException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.VersionMismatchException.#ctor">
          <element api="M:System.Activities.VersionMismatchException.#ctor" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.String)" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)" />
          <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Exception)" />
        </element>
        <element api="M:System.Activities.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.VersionMismatchException.ActualVersion" />
        <element api="P:System.Activities.VersionMismatchException.ExpectedVersion" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.VersionMismatchException">
      <topicdata name="VersionMismatchException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.VersionMismatchException" />
      <apidata name="VersionMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.VersionMismatchException.#ctor" />
      <elements>
        <element api="M:System.Activities.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.VersionMismatchException">
      <topicdata name="VersionMismatchException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.VersionMismatchException" />
      <apidata name="VersionMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.VersionMismatchException.#ctor" />
      <elements>
        <element api="P:System.Activities.VersionMismatchException.ActualVersion" />
        <element api="P:System.Activities.VersionMismatchException.ExpectedVersion" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.VersionMismatchException">
      <topicdata name="VersionMismatchException" group="list" subgroup="Events" typeTopicId="T:System.Activities.VersionMismatchException" />
      <apidata name="VersionMismatchException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.VersionMismatchException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.VersionMismatchException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.VersionMismatchException.#ctor" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.String)" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)" />
        <element api="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="expectedVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="actualVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expectedVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="actualVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentity,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="expectedVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="actualVersion">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.VersionMismatchException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.VersionMismatchException.ActualVersion">
      <topicdata group="api" />
      <apidata name="ActualVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ActualVersion" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.VersionMismatchException.ExpectedVersion">
      <topicdata group="api" />
      <apidata name="ExpectedVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExpectedVersion" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.VersionMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.VersionMismatchException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Activities.WorkflowApplication">
      <topicdata group="api" />
      <apidata name="WorkflowApplication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.Hosting.WorkflowInstance" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Activities.WorkflowApplication.#ctor">
          <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
          <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
          <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Abort">
          <element api="M:System.Activities.WorkflowApplication.Abort" />
          <element api="M:System.Activities.WorkflowApplication.Abort(System.String)" />
        </element>
        <element api="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
        <element api="Overload:System.Activities.WorkflowApplication.BeginCancel">
          <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginGetInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginGetRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginLoad">
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginLoadRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginPersist">
          <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark">
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginRun">
          <element api="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginTerminate">
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginUnload">
          <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Cancel">
          <element api="M:System.Activities.WorkflowApplication.Cancel" />
          <element api="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
          <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
        <element api="Overload:System.Activities.WorkflowApplication.GetBookmarks">
          <element api="M:System.Activities.WorkflowApplication.GetBookmarks" />
          <element api="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.GetInstance">
          <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.GetRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Load">
          <element api="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
          <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Persist">
          <element api="M:System.Activities.WorkflowApplication.Persist" />
          <element api="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.ResumeBookmark">
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Run">
          <element api="M:System.Activities.WorkflowApplication.Run" />
          <element api="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Terminate">
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Unload">
          <element api="M:System.Activities.WorkflowApplication.Unload" />
          <element api="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
        <element api="P:System.Activities.WorkflowApplication.Aborted" />
        <element api="P:System.Activities.WorkflowApplication.Completed" />
        <element api="P:System.Activities.WorkflowApplication.Extensions" />
        <element api="P:System.Activities.WorkflowApplication.Id" />
        <element api="P:System.Activities.WorkflowApplication.Idle" />
        <element api="P:System.Activities.WorkflowApplication.InstanceStore" />
        <element api="P:System.Activities.WorkflowApplication.OnUnhandledException" />
        <element api="P:System.Activities.WorkflowApplication.PersistableIdle" />
        <element api="P:System.Activities.WorkflowApplication.Unloaded" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplication">
      <topicdata name="WorkflowApplication" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplication" />
      <apidata name="WorkflowApplication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.WorkflowApplication.Abort">
          <element api="M:System.Activities.WorkflowApplication.Abort" />
          <element api="M:System.Activities.WorkflowApplication.Abort(System.String)" />
        </element>
        <element api="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})" />
        <element api="Overload:System.Activities.WorkflowApplication.BeginCancel">
          <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginGetInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginGetRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginLoad">
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginLoadRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginPersist">
          <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark">
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginRun">
          <element api="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginTerminate">
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.BeginUnload">
          <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Cancel">
          <element api="M:System.Activities.WorkflowApplication.Cancel" />
          <element api="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
          <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner">
          <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)" />
        <element api="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)" />
        <element api="Overload:System.Activities.WorkflowApplication.GetBookmarks">
          <element api="M:System.Activities.WorkflowApplication.GetBookmarks" />
          <element api="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.GetInstance">
          <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.GetRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
          <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Load">
          <element api="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
          <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Persist">
          <element api="M:System.Activities.WorkflowApplication.Persist" />
          <element api="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.ResumeBookmark">
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Run">
          <element api="M:System.Activities.WorkflowApplication.Run" />
          <element api="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Terminate">
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplication.Unload">
          <element api="M:System.Activities.WorkflowApplication.Unload" />
          <element api="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplication">
      <topicdata name="WorkflowApplication" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplication" />
      <apidata name="WorkflowApplication" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.Hosting.WorkflowInstance.DefinitionIdentity" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.HostEnvironment" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.SynchronizationContext" />
        <element api="P:System.Activities.Hosting.WorkflowInstance.WorkflowDefinition" />
        <element api="P:System.Activities.WorkflowApplication.Aborted" />
        <element api="P:System.Activities.WorkflowApplication.Completed" />
        <element api="P:System.Activities.WorkflowApplication.Extensions" />
        <element api="P:System.Activities.WorkflowApplication.Id" />
        <element api="P:System.Activities.WorkflowApplication.Idle" />
        <element api="P:System.Activities.WorkflowApplication.InstanceStore" />
        <element api="P:System.Activities.WorkflowApplication.OnUnhandledException" />
        <element api="P:System.Activities.WorkflowApplication.PersistableIdle" />
        <element api="P:System.Activities.WorkflowApplication.Unloaded" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)" />
        <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Abort">
      <topicdata name="Abort" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abort" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Abort" />
        <element api="M:System.Activities.WorkflowApplication.Abort(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginCancel">
      <topicdata name="BeginCancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner">
      <topicdata name="BeginCreateDefaultInstanceOwner" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginCreateDefaultInstanceOwner" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner">
      <topicdata name="BeginDeleteDefaultInstanceOwner" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginDeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginGetInstance">
      <topicdata name="BeginGetInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginGetInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginGetRunnableInstance">
      <topicdata name="BeginGetRunnableInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginGetRunnableInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginLoad">
      <topicdata name="BeginLoad" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginLoadRunnableInstance">
      <topicdata name="BeginLoadRunnableInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginLoadRunnableInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginPersist">
      <topicdata name="BeginPersist" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginPersist" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark">
      <topicdata name="BeginResumeBookmark" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginResumeBookmark" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginRun">
      <topicdata name="BeginRun" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginTerminate">
      <topicdata name="BeginTerminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.BeginUnload">
      <topicdata name="BeginUnload" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginUnload" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Cancel">
      <topicdata name="Cancel" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Cancel" />
        <element api="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner">
      <topicdata name="CreateDefaultInstanceOwner" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CreateDefaultInstanceOwner" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)" />
        <element api="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner">
      <topicdata name="DeleteDefaultInstanceOwner" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="DeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)" />
        <element api="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.GetBookmarks">
      <topicdata name="GetBookmarks" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetBookmarks" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.GetBookmarks" />
        <element api="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.GetInstance">
      <topicdata name="GetInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)" />
        <element api="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.GetRunnableInstance">
      <topicdata name="GetRunnableInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetRunnableInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)" />
        <element api="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Load(System.Guid)" />
        <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)" />
        <element api="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)" />
        <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.LoadRunnableInstance">
      <topicdata name="LoadRunnableInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="LoadRunnableInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance" />
        <element api="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Persist">
      <topicdata name="Persist" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Persist" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Persist" />
        <element api="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.ResumeBookmark">
      <topicdata name="ResumeBookmark" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)" />
        <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Run">
      <topicdata name="Run" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Run" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Run" />
        <element api="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Terminate">
      <topicdata name="Terminate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception)" />
        <element api="M:System.Activities.WorkflowApplication.Terminate(System.String)" />
        <element api="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplication.Unload">
      <topicdata name="Unload" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Unload" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplication.Unload" />
        <element api="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplication.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplication.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplication.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplication.#ctor" />
      <parameters>
        <parameter name="workflowDefinition">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Abort">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Abort" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Abort(System.String)">
      <topicdata group="api" />
      <apidata name="Abort" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Abort" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Aborted">
      <topicdata group="api" />
      <apidata name="Aborted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Aborted" />
      <setter name="set_Aborted" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationAbortedEventArgs" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
      <topicdata group="api" />
      <apidata name="AddInitialInstanceValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writeOnlyValues">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.Xml.Linq.XName" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginCancel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginCancel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCreateDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="identityFilter">
          <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginCreateDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="identityFilter">
          <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginGetInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginGetInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginGetRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginGetRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.BeginGetRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="updateMap">
          <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="updateMap">
          <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoad" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoad" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoadRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoadRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginLoadRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginLoadRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginPersist" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginPersist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginPersist" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginPersist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginRun" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRun" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginRun" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginTerminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnload" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginUnload" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginUnload" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.BeginUnload" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Cancel" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Cancel" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Completed" />
      <setter name="set_Completed" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
      <topicdata group="api" />
      <apidata name="CreateDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="identityFilter">
          <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="CreateDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="definitionIdentity">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
        <parameter name="identityFilter">
          <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
      <topicdata group="api" />
      <apidata name="DeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="DeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndCreateDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDeleteDefaultInstanceOwner" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndGetRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndLoad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndLoadRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndPersist" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRun" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndTerminate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndUnload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetBookmarks">
      <topicdata group="api" />
      <apidata name="GetBookmarks" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.GetBookmarks" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Hosting.BookmarkInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetBookmarks" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.GetBookmarks" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Hosting.BookmarkInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
      <topicdata group="api" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.GetInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.GetInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
      <topicdata group="api" />
      <apidata name="GetRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.GetRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowApplication.GetRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceStore">
          <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Activities.Hosting.WorkflowInstance.Id">
          <type api="T:System.Activities.Hosting.WorkflowInstance" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Idle">
      <topicdata group="api" />
      <apidata name="Idle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Idle" />
      <setter name="set_Idle" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.InstanceStore">
      <topicdata group="api" />
      <apidata name="InstanceStore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceStore" />
      <setter name="set_InstanceStore" />
      <returns>
        <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="updateMap">
          <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="updateMap">
          <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Guid)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
      <topicdata group="api" />
      <apidata name="LoadRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="LoadRunnableInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.LoadRunnableInstance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.OnUnhandledException">
      <topicdata group="api" />
      <apidata name="OnUnhandledException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnUnhandledException" />
      <setter name="set_OnUnhandledException" />
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" ref="true" />
            <type api="T:System.Activities.UnhandledExceptionAction" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Persist">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Persist" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Persist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.PersistableIdle">
      <topicdata group="api" />
      <apidata name="PersistableIdle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PersistableIdle" />
      <setter name="set_PersistableIdle" />
      <returns>
        <type api="T:System.Func`2" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" ref="true" />
            <type api="T:System.Activities.PersistableIdleAction" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
      <topicdata group="api" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.ResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.ResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmark">
          <type api="T:System.Activities.Bookmark" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.ResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ResumeBookmark" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.ResumeBookmark" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bookmarkName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.BookmarkResumptionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Run">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Run" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Terminate(System.String)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Terminate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Terminate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Unload">
      <topicdata group="api" />
      <apidata name="Unload" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Unload" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Unload" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplication.Unload" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplication.Unloaded">
      <topicdata group="api" />
      <apidata name="Unloaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Unloaded" />
      <setter name="set_Unloaded" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplication" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationAbortedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <topicdata name="WorkflowApplicationAbortedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationAbortedEventArgs" />
      <apidata name="WorkflowApplicationAbortedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationAbortedEventArgs">
      <topicdata name="WorkflowApplicationAbortedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationAbortedEventArgs" />
      <apidata name="WorkflowApplicationAbortedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationAbortedEventArgs.Reason">
      <topicdata group="api" />
      <apidata name="Reason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Reason" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationAbortedException">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor">
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)" />
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)" />
          <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)" />
        </element>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationAbortedException">
      <topicdata name="WorkflowApplicationAbortedException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationAbortedException" />
      <apidata name="WorkflowApplicationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationAbortedException">
      <topicdata name="WorkflowApplicationAbortedException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationAbortedException" />
      <apidata name="WorkflowApplicationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowApplicationAbortedException">
      <topicdata name="WorkflowApplicationAbortedException" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowApplicationAbortedException" />
      <apidata name="WorkflowApplicationAbortedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor" />
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)" />
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)" />
        <element api="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationAbortedException.#ctor(System.String,System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationAbortedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState" />
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs" />
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <topicdata name="WorkflowApplicationCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationCompletedEventArgs" />
      <apidata name="WorkflowApplicationCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationCompletedEventArgs">
      <topicdata name="WorkflowApplicationCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationCompletedEventArgs" />
      <apidata name="WorkflowApplicationCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState" />
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs" />
        <element api="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationCompletedEventArgs.CompletionState">
      <topicdata group="api" />
      <apidata name="CompletionState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompletionState" />
      <returns>
        <type api="T:System.Activities.ActivityInstanceState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationCompletedEventArgs.Outputs">
      <topicdata group="api" />
      <apidata name="Outputs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Outputs" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationCompletedEventArgs.TerminationException">
      <topicdata group="api" />
      <apidata name="TerminationException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TerminationException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationCompletedException">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationCompletedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor">
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)" />
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)" />
          <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)" />
        </element>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationCompletedException">
      <topicdata name="WorkflowApplicationCompletedException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationCompletedException" />
      <apidata name="WorkflowApplicationCompletedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationCompletedException">
      <topicdata name="WorkflowApplicationCompletedException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationCompletedException" />
      <apidata name="WorkflowApplicationCompletedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowApplicationCompletedException">
      <topicdata name="WorkflowApplicationCompletedException" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowApplicationCompletedException" />
      <apidata name="WorkflowApplicationCompletedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor" />
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)" />
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)" />
        <element api="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationCompletedException.#ctor(System.String,System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationCompletedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationEventArgs">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.WorkflowApplicationAbortedEventArgs" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationCompletedEventArgs" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationEventArgs">
      <topicdata name="WorkflowApplicationEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationEventArgs" />
      <apidata name="WorkflowApplicationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationEventArgs">
      <topicdata name="WorkflowApplicationEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationEventArgs" />
      <apidata name="WorkflowApplicationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationEventArgs" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1">
      <topicdata group="api" />
      <apidata name="GetInstanceExtensions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationEventArgs.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationException">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Activities.WorkflowApplicationAbortedException" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="Overload:System.Activities.WorkflowApplicationException.#ctor">
          <element api="M:System.Activities.WorkflowApplicationException.#ctor" />
          <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String)" />
          <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)" />
          <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)" />
        </element>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationException">
      <topicdata name="WorkflowApplicationException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationException" />
      <apidata name="WorkflowApplicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationException.#ctor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationException">
      <topicdata name="WorkflowApplicationException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationException" />
      <apidata name="WorkflowApplicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationException.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowApplicationException">
      <topicdata name="WorkflowApplicationException" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowApplicationException" />
      <apidata name="WorkflowApplicationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.#ctor" />
        <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String)" />
        <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)" />
        <element api="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.#ctor(System.String,System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Activities.WorkflowApplicationException.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationIdleEventArgs">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationIdleEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationIdleEventArgs">
      <topicdata name="WorkflowApplicationIdleEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationIdleEventArgs" />
      <apidata name="WorkflowApplicationIdleEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationIdleEventArgs">
      <topicdata name="WorkflowApplicationIdleEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationIdleEventArgs" />
      <apidata name="WorkflowApplicationIdleEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationIdleEventArgs.Bookmarks">
      <topicdata group="api" />
      <apidata name="Bookmarks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Bookmarks" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Hosting.BookmarkInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationIdleEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationInstance">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Activities.WorkflowApplicationInstance.Abandon">
          <element api="M:System.Activities.WorkflowApplicationInstance.Abandon" />
          <element api="M:System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplicationInstance.BeginAbandon">
          <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)" />
        <element api="M:System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationInstance.DefinitionIdentity" />
        <element api="P:System.Activities.WorkflowApplicationInstance.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationInstance.InstanceStore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationInstance">
      <topicdata name="WorkflowApplicationInstance" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationInstance" />
      <apidata name="WorkflowApplicationInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.WorkflowApplicationInstance.Abandon">
          <element api="M:System.Activities.WorkflowApplicationInstance.Abandon" />
          <element api="M:System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowApplicationInstance.BeginAbandon">
          <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)" />
        <element api="M:System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationInstance">
      <topicdata name="WorkflowApplicationInstance" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationInstance" />
      <apidata name="WorkflowApplicationInstance" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationInstance.DefinitionIdentity" />
        <element api="P:System.Activities.WorkflowApplicationInstance.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationInstance.InstanceStore" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationInstance.Abandon">
      <topicdata name="Abandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationInstance.Abandon" />
        <element api="M:System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationInstance.BeginAbandon">
      <topicdata name="BeginAbandon" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.Abandon">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplicationInstance.Abandon" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.Abandon(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Abandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplicationInstance.Abandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplicationInstance.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.BeginAbandon(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowApplicationInstance.BeginAbandon" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.CanApplyUpdate(System.Activities.DynamicUpdate.DynamicUpdateMap,System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}@)">
      <topicdata group="api" />
      <apidata name="CanApplyUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="updateMap">
          <type api="T:System.Activities.DynamicUpdate.DynamicUpdateMap" ref="true" />
        </parameter>
        <parameter name="activitiesBlockingUpdate" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.Activities.DynamicUpdate.ActivityBlockingUpdate" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationInstance.DefinitionIdentity">
      <topicdata group="api" />
      <apidata name="DefinitionIdentity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefinitionIdentity" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationInstance.EndAbandon(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndAbandon" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationInstance.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationInstance.InstanceStore">
      <topicdata group="api" />
      <apidata name="InstanceStore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceStore" />
      <returns>
        <type api="T:System.Runtime.DurableInstancing.InstanceStore" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationTerminatedException">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationCompletedException" ref="true" />
          <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor">
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)" />
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)" />
          <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationTerminatedException">
      <topicdata name="WorkflowApplicationTerminatedException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationTerminatedException" />
      <apidata name="WorkflowApplicationTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationTerminatedException">
      <topicdata name="WorkflowApplicationTerminatedException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationTerminatedException" />
      <apidata name="WorkflowApplicationTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowApplicationTerminatedException">
      <topicdata name="WorkflowApplicationTerminatedException" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowApplicationTerminatedException" />
      <apidata name="WorkflowApplicationTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)" />
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)" />
        <element api="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationTerminatedException.#ctor(System.String,System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
      <topicdata name="WorkflowApplicationUnhandledExceptionEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
      <apidata name="WorkflowApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationEventArgs.GetInstanceExtensions``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs">
      <topicdata name="WorkflowApplicationUnhandledExceptionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
      <apidata name="WorkflowApplicationUnhandledExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationEventArgs.InstanceId" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId" />
        <element api="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSource">
      <topicdata group="api" />
      <apidata name="ExceptionSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExceptionSource" />
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.ExceptionSourceInstanceId">
      <topicdata group="api" />
      <apidata name="ExceptionSourceInstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExceptionSourceInstanceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs.UnhandledException">
      <topicdata group="api" />
      <apidata name="UnhandledException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnhandledException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowApplicationUnloadedException">
      <topicdata group="api" />
      <apidata name="WorkflowApplicationUnloadedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Activities.WorkflowApplicationException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor">
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String)" />
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Exception)" />
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid)" />
          <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid,System.Exception)" />
        </element>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowApplicationUnloadedException">
      <topicdata name="WorkflowApplicationUnloadedException" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowApplicationUnloadedException" />
      <apidata name="WorkflowApplicationUnloadedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowApplicationUnloadedException">
      <topicdata name="WorkflowApplicationUnloadedException" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowApplicationUnloadedException" />
      <apidata name="WorkflowApplicationUnloadedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowApplicationException.InstanceId" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowApplicationUnloadedException">
      <topicdata name="WorkflowApplicationUnloadedException" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowApplicationUnloadedException" />
      <apidata name="WorkflowApplicationUnloadedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String)" />
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Exception)" />
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid)" />
        <element api="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowApplicationUnloadedException.#ctor(System.String,System.Guid,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowApplicationUnloadedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowApplicationUnloadedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowDataContext">
      <topicdata group="api" />
      <apidata name="WorkflowDataContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Activities.WorkflowDataContext.PropertyChanged" />
        <element api="M:System.Activities.WorkflowDataContext.Dispose" />
        <element api="Overload:System.Activities.WorkflowDataContext.GetProperties">
          <element api="M:System.Activities.WorkflowDataContext.GetProperties" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.Activities.WorkflowDataContext.GetEvents">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowDataContext">
      <topicdata name="WorkflowDataContext" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowDataContext" />
      <apidata name="WorkflowDataContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Activities.WorkflowDataContext.Dispose" />
        <element api="Overload:System.Activities.WorkflowDataContext.GetProperties">
          <element api="M:System.Activities.WorkflowDataContext.GetProperties" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetConverter" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultProperty" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEditor(System.Type)" />
        <element api="Overload:System.Activities.WorkflowDataContext.GetEvents">
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
          <element api="M:System.ComponentModel.CustomTypeDescriptor.GetEvents(System.Attribute[])" />
        </element>
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowDataContext">
      <topicdata name="WorkflowDataContext" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowDataContext" />
      <apidata name="WorkflowDataContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Activities.WorkflowDataContext.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowDataContext.GetProperties">
      <topicdata name="GetProperties" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowDataContext.GetProperties" />
        <element api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties(System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowDataContext.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowDataContext.GetProperties">
      <topicdata group="api" />
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowDataContext.GetProperties" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.CustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.CustomTypeDescriptor" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties">
          <type api="T:System.ComponentModel.ICustomTypeDescriptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
      </containers>
    </api>
    <api id="E:System.Activities.WorkflowDataContext.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowDataContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowIdentity">
      <topicdata group="api" />
      <apidata name="WorkflowIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowIdentity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Activities.WorkflowIdentity" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:System.Activities.WorkflowIdentity.#ctor">
          <element api="M:System.Activities.WorkflowIdentity.#ctor" />
          <element api="M:System.Activities.WorkflowIdentity.#ctor(System.String,System.Version,System.String)" />
        </element>
        <element api="Overload:System.Activities.WorkflowIdentity.Equals">
          <element api="M:System.Activities.WorkflowIdentity.Equals(System.Object)" />
          <element api="M:System.Activities.WorkflowIdentity.Equals(System.Activities.WorkflowIdentity)" />
        </element>
        <element api="M:System.Activities.WorkflowIdentity.GetHashCode" />
        <element api="M:System.Activities.WorkflowIdentity.Parse(System.String)" />
        <element api="M:System.Activities.WorkflowIdentity.ToString" />
        <element api="M:System.Activities.WorkflowIdentity.TryParse(System.String,System.Activities.WorkflowIdentity@)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Activities.WorkflowIdentity.Name" />
        <element api="P:System.Activities.WorkflowIdentity.Package" />
        <element api="P:System.Activities.WorkflowIdentity.Version" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Activities.XamlIntegration.WorkflowIdentityConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Activities.WorkflowIdentity">
      <topicdata name="WorkflowIdentity" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowIdentity" />
      <apidata name="WorkflowIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowIdentity.#ctor" />
      <elements>
        <element api="Overload:System.Activities.WorkflowIdentity.Equals">
          <element api="M:System.Activities.WorkflowIdentity.Equals(System.Object)" />
          <element api="M:System.Activities.WorkflowIdentity.Equals(System.Activities.WorkflowIdentity)" />
        </element>
        <element api="M:System.Activities.WorkflowIdentity.GetHashCode" />
        <element api="M:System.Activities.WorkflowIdentity.Parse(System.String)" />
        <element api="M:System.Activities.WorkflowIdentity.ToString" />
        <element api="M:System.Activities.WorkflowIdentity.TryParse(System.String,System.Activities.WorkflowIdentity@)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowIdentity">
      <topicdata name="WorkflowIdentity" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowIdentity" />
      <apidata name="WorkflowIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Activities.WorkflowIdentity.#ctor" />
      <elements>
        <element api="P:System.Activities.WorkflowIdentity.Name" />
        <element api="P:System.Activities.WorkflowIdentity.Package" />
        <element api="P:System.Activities.WorkflowIdentity.Version" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowIdentity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Activities.WorkflowIdentity.#ctor" />
        <element api="M:System.Activities.WorkflowIdentity.#ctor(System.String,System.Version,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowIdentity.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowIdentity.Equals(System.Object)" />
        <element api="M:System.Activities.WorkflowIdentity.Equals(System.Activities.WorkflowIdentity)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowIdentity.#ctor" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.#ctor(System.String,System.Version,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Activities.WorkflowIdentity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.Version" ref="true" />
        </parameter>
        <parameter name="package">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.Equals(System.Activities.WorkflowIdentity)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowIdentity.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Activities.WorkflowIdentity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Activities.WorkflowIdentity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowIdentity.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowIdentity.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowIdentity.Package">
      <topicdata group="api" />
      <apidata name="Package" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Package" />
      <setter name="set_Package" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowIdentity.TryParse(System.String,System.Activities.WorkflowIdentity@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:System.Activities.WorkflowIdentity" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowIdentity.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowIdentityFilter">
      <topicdata group="api" />
      <apidata name="WorkflowIdentityFilter" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Activities.WorkflowIdentityFilter.Exact" />
        <element api="F:System.Activities.WorkflowIdentityFilter.Any" />
        <element api="F:System.Activities.WorkflowIdentityFilter.AnyRevision" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="F:System.Activities.WorkflowIdentityFilter.Any">
      <topicdata group="api" notopic="" />
      <apidata name="Any" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.WorkflowIdentityFilter.AnyRevision">
      <topicdata group="api" notopic="" />
      <apidata name="AnyRevision" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </containers>
    </api>
    <api id="F:System.Activities.WorkflowIdentityFilter.Exact">
      <topicdata group="api" notopic="" />
      <apidata name="Exact" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowIdentityFilter" ref="false" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowInspectionServices">
      <topicdata group="api" />
      <apidata name="WorkflowInspectionServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.Activities.WorkflowInspectionServices.CacheMetadata">
          <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)" />
          <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)" />
        </element>
        <element api="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowInspectionServices">
      <topicdata name="WorkflowInspectionServices" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowInspectionServices" />
      <apidata name="WorkflowInspectionServices" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.WorkflowInspectionServices.CacheMetadata">
          <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)" />
          <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)" />
        </element>
        <element api="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowInspectionServices.CacheMetadata">
      <topicdata name="CacheMetadata" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInspectionServices.CacheMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rootActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)">
      <topicdata group="api" />
      <apidata name="CacheMetadata" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInspectionServices.CacheMetadata" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rootActivity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="hostEnvironment">
          <type api="T:System.Activities.LocationReferenceEnvironment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="CanInduceIdle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="GetActivities" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Activities.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="GetImplementationVersion" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="root">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Activities.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInspectionServices" ref="true" />
      </containers>
    </api>
    <api id="T:System.Activities.WorkflowInvoker">
      <topicdata group="api" />
      <apidata name="WorkflowInvoker" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Activities.WorkflowInvoker.InvokeCompleted" />
        <element api="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)" />
        <element api="Overload:System.Activities.WorkflowInvoker.BeginInvoke">
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Activities.WorkflowInvoker.CancelAsync(System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.EndInvoke(System.IAsyncResult)" />
        <element api="Overload:System.Activities.WorkflowInvoker.Invoke">
          <element api="M:System.Activities.WorkflowInvoker.Invoke" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowInvoker.InvokeAsync">
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Activities.WorkflowInvoker.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
      </containers>
    </api>
    <api id="Methods.T:System.Activities.WorkflowInvoker">
      <topicdata name="WorkflowInvoker" group="list" subgroup="Methods" typeTopicId="T:System.Activities.WorkflowInvoker" />
      <apidata name="WorkflowInvoker" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Activities.WorkflowInvoker.BeginInvoke">
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="M:System.Activities.WorkflowInvoker.CancelAsync(System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.EndInvoke(System.IAsyncResult)" />
        <element api="Overload:System.Activities.WorkflowInvoker.Invoke">
          <element api="M:System.Activities.WorkflowInvoker.Invoke" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)" />
        </element>
        <element api="Overload:System.Activities.WorkflowInvoker.InvokeAsync">
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)" />
          <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" />
      </containers>
    </api>
    <api id="Properties.T:System.Activities.WorkflowInvoker">
      <topicdata name="WorkflowInvoker" group="list" subgroup="Properties" typeTopicId="T:System.Activities.WorkflowInvoker" />
      <apidata name="WorkflowInvoker" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Activities.WorkflowInvoker.Extensions" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" />
      </containers>
    </api>
    <api id="Events.T:System.Activities.WorkflowInvoker">
      <topicdata name="WorkflowInvoker" group="list" subgroup="Events" typeTopicId="T:System.Activities.WorkflowInvoker" />
      <apidata name="WorkflowInvoker" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Activities.WorkflowInvoker.InvokeCompleted" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowInvoker.BeginInvoke">
      <topicdata name="BeginInvoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowInvoker.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowInvoker.Invoke" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Activities.WorkflowInvoker.InvokeAsync">
      <topicdata name="InvokeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)" />
        <element api="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.#ctor(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.BeginInvoke(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.BeginInvoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.BeginInvoke(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.BeginInvoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.CancelAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.EndInvoke(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="P:System.Activities.WorkflowInvoker.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Activities.Hosting.WorkflowInstanceExtensionManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Activities.Activity,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="additionalOutputs" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object}@,System.TimeSpan)" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="workflow">
          <type api="T:System.Activities.Activity`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.Activities.WorkflowInvoker.Invoke``1(System.Activities.Activity{``0},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)" />
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.Invoke(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputs">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="M:System.Activities.WorkflowInvoker.InvokeAsync(System.TimeSpan,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Activities.WorkflowInvoker.InvokeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
    <api id="E:System.Activities.WorkflowInvoker.InvokeCompleted">
      <topicdata group="api" />
      <apidata name="InvokeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_InvokeCompleted" />
      <remover name="remove_InvokeCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Activities.InvokeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Activities.InvokeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Activities" module="System.Activities" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Activities" />
        <type api="T:System.Activities.WorkflowInvoker" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>