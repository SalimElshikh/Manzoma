<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Discovery">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Discovery.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Discovery.Configuration">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Discovery.Configuration" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" />
        <element api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
        <element api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" />
        <element api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" />
      </elements>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection">
      <topicdata group="api" />
      <apidata name="AnnouncementChannelEndpointElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>endpoint</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection">
      <topicdata name="AnnouncementChannelEndpointElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" />
      <apidata name="AnnouncementChannelEndpointElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection">
      <topicdata name="AnnouncementChannelEndpointElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" />
      <apidata name="AnnouncementChannelEndpointElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement">
      <topicdata group="api" />
      <apidata name="AnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.AnnouncementEndpoint" ref="true" />
              <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement">
      <topicdata name="AnnouncementEndpointCollectionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" />
      <apidata name="AnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement">
      <topicdata name="AnnouncementEndpointCollectionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" />
      <apidata name="AnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointCollectionElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement">
      <topicdata group="api" />
      <apidata name="AnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement">
      <topicdata name="AnnouncementEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" />
      <apidata name="AnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement">
      <topicdata name="AnnouncementEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" />
      <apidata name="AnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration">
      <topicdata name="OnApplyConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate">
      <topicdata name="OnInitializeAndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <topicdata group="api" />
      <apidata name="CreateServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryVersion" />
      <setter name="set_DiscoveryVersion" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>discoveryVersion</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>WSDiscovery11</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.StandardEndpointElement.EndpointType">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="InitializeFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.MaxAnnouncementDelay">
      <topicdata group="api" />
      <apidata name="MaxAnnouncementDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAnnouncementDelay" />
      <setter name="set_MaxAnnouncementDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxAnnouncementDelay</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>00:00:00</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="channelEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.StandardEndpointElement.Properties">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement">
      <topicdata group="api" />
      <apidata name="ContractTypeNameElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor">
          <element api="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
          <element api="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement">
      <topicdata name="ContractTypeNameElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" />
      <apidata name="ContractTypeNameElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement">
      <topicdata name="ContractTypeNameElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" />
      <apidata name="ContractTypeNameElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Namespace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.StringValidatorAttribute" ref="true" />
          <assignment name="MinLength">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>namespace</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>http://tempuri.org/</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection">
      <topicdata group="api" />
      <apidata name="ContractTypeNameElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection">
      <topicdata name="ContractTypeNameElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" />
      <apidata name="ContractTypeNameElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection">
      <topicdata name="ContractTypeNameElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" />
      <apidata name="ContractTypeNameElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement">
      <topicdata group="api" />
      <apidata name="DiscoveryClientElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BindingElementExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.BindingElementType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.DiscoveryEndpoint" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement">
      <topicdata name="DiscoveryClientElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />
      <apidata name="DiscoveryClientElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement">
      <topicdata name="DiscoveryClientElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />
      <apidata name="DiscoveryClientElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.BindingElementType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.DiscoveryEndpoint" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.BindingElementExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
          <type api="T:System.ServiceModel.Configuration.BindingElementExtensionElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bindingElement">
          <type api="T:System.ServiceModel.Channels.BindingElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.BindingElementType">
      <topicdata group="api" />
      <apidata name="BindingElementType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BindingElementExtensionElement.BindingElementType">
          <type api="T:System.ServiceModel.Configuration.BindingElementExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BindingElementType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <topicdata group="api" />
      <apidata name="CopyFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="from">
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.DiscoveryEndpoint">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryEndpoint" />
      <returns>
        <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpoint</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement.FindCriteria">
      <topicdata group="api" />
      <apidata name="FindCriteria" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FindCriteria" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>findCriteria</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement">
      <topicdata group="api" />
      <apidata name="DiscoveryClientSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.DiscoveryEndpoint" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement">
      <topicdata name="DiscoveryClientSettingsElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" />
      <apidata name="DiscoveryClientSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement">
      <topicdata name="DiscoveryClientSettingsElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" />
      <apidata name="DiscoveryClientSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.DiscoveryEndpoint" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.FindCriteria" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.DiscoveryEndpoint">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryEndpoint" />
      <returns>
        <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpoint</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement.FindCriteria">
      <topicdata group="api" />
      <apidata name="FindCriteria" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FindCriteria" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>findCriteria</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.DiscoveryEndpoint" ref="true" />
              <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement">
      <topicdata name="DiscoveryEndpointCollectionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" />
      <apidata name="DiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement">
      <topicdata name="DiscoveryEndpointCollectionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" />
      <apidata name="DiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointCollectionElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement">
      <topicdata group="api" />
      <apidata name="DiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement">
      <topicdata name="DiscoveryEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" />
      <apidata name="DiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement">
      <topicdata name="DiscoveryEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" />
      <apidata name="DiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration">
      <topicdata name="OnApplyConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate">
      <topicdata name="OnInitializeAndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <topicdata group="api" />
      <apidata name="CreateServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryMode">
      <topicdata group="api" />
      <apidata name="DiscoveryMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryMode" />
      <setter name="set_DiscoveryMode" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>discoveryMode</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
            <enumValue>
              <field name="Managed" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion">
      <topicdata group="api" />
      <apidata name="DiscoveryVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryVersion" />
      <setter name="set_DiscoveryVersion" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.DiscoveryVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>discoveryVersion</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>WSDiscovery11</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.StandardEndpointElement.EndpointType">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="InitializeFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.MaxResponseDelay">
      <topicdata group="api" />
      <apidata name="MaxResponseDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResponseDelay" />
      <setter name="set_MaxResponseDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxResponseDelay</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>00:00:00</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="channelEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.StandardEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.StandardEndpointElement.Properties">
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter">
      <topicdata group="api" />
      <apidata name="DiscoveryVersionConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter">
      <topicdata name="DiscoveryVersionConverter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />
      <apidata name="DiscoveryVersionConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor" />
      <elements>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFromInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFromString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertToInvariantString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertToString">
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CreateInstance">
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
          <element api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
        <element api="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetCreateInstanceSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetProperties">
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetPropertiesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValues">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValuesExclusive">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.GetStandardValuesSupported">
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
          <element api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.IsValid">
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
          <element api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        </element>
        <element api="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom">
          <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo">
          <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom">
      <topicdata name="CanConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo">
      <topicdata name="CanConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom">
      <topicdata name="ConvertFrom" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo">
      <topicdata name="ConvertTo" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.CanConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <topicdata group="api" />
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertFrom" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter.ConvertTo" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryVersionConverter" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement">
      <topicdata group="api" />
      <apidata name="DynamicEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.DynamicEndpoint" ref="true" />
              <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement">
      <topicdata name="DynamicEndpointCollectionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" />
      <apidata name="DynamicEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement">
      <topicdata name="DynamicEndpointCollectionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" />
      <apidata name="DynamicEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointCollectionElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement">
      <topicdata group="api" />
      <apidata name="DynamicEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.DiscoveryClientSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement">
      <topicdata name="DynamicEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" />
      <apidata name="DynamicEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement">
      <topicdata name="DynamicEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" />
      <apidata name="DynamicEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.DiscoveryClientSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement.DiscoveryClientSettings">
      <topicdata group="api" />
      <apidata name="DiscoveryClientSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DiscoveryClientSettings" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryClientSettingsElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.DynamicEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>discoveryClientSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement">
      <topicdata group="api" />
      <apidata name="EndpointDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.BehaviorType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Enabled" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Extensions" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement">
      <topicdata name="EndpointDiscoveryElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />
      <apidata name="EndpointDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement">
      <topicdata name="EndpointDiscoveryElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />
      <apidata name="EndpointDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.BehaviorType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Enabled" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Extensions" />
        <element api="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.ContractTypeNames">
      <topicdata group="api" />
      <apidata name="ContractTypeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractTypeNames" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>types</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enabled</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.Configuration.XmlElementElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>extensions</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement.Scopes">
      <topicdata group="api" />
      <apidata name="Scopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scopes" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.EndpointDiscoveryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scopes</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement">
      <topicdata group="api" />
      <apidata name="FindCriteriaElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Duration" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Extensions" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.MaxResults" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ScopeMatchBy" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement">
      <topicdata name="FindCriteriaElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />
      <apidata name="FindCriteriaElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement">
      <topicdata name="FindCriteriaElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />
      <apidata name="FindCriteriaElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ContractTypeNames" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Duration" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Extensions" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.MaxResults" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ScopeMatchBy" />
        <element api="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Scopes" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ContractTypeNames">
      <topicdata group="api" />
      <apidata name="ContractTypeNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractTypeNames" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.ContractTypeNameElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>types</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Duration" />
      <setter name="set_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>duration</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>00:00:20</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.ServiceModel.Configuration.XmlElementElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>extensions</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.MaxResults">
      <topicdata group="api" />
      <apidata name="MaxResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResults" />
      <setter name="set_MaxResults" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxResults</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.ScopeMatchBy">
      <topicdata group="api" />
      <apidata name="ScopeMatchBy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScopeMatchBy" />
      <setter name="set_ScopeMatchBy" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scopeMatchBy</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.FindCriteriaElement.Scopes">
      <topicdata group="api" />
      <apidata name="Scopes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scopes" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.FindCriteriaElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scopes</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.ScopeElement">
      <topicdata group="api" />
      <apidata name="ScopeElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Scope" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.ScopeElement">
      <topicdata name="ScopeElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
      <apidata name="ScopeElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.ScopeElement">
      <topicdata name="ScopeElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
      <apidata name="ScopeElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Scope" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ScopeElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.ScopeElement.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Scope" />
      <setter name="set_Scope" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>scope</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.CallbackValidatorAttribute" ref="true" />
          <assignment name="CallbackMethodName">
            <type api="T:System.String" ref="true" />
            <value>ScopeValidatorCallback</value>
          </assignment>
          <assignment name="Type">
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
            </typeValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection">
      <topicdata group="api" />
      <apidata name="ScopeElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection">
      <topicdata name="ScopeElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
      <apidata name="ScopeElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Clear" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.ContainsKey(System.Object)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.CopyTo">
          <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CopyTo(`0[],System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.IndexOf(`0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Remove(`0)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.RemoveAt">
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Int32)" />
          <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.RemoveAt(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection">
      <topicdata name="ScopeElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
      <apidata name="ScopeElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.CollectionType" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.Item">
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Configuration.ServiceModelConfigurationElementCollection`1.Item(System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ScopeElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ScopeElementCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement">
      <topicdata group="api" />
      <apidata name="ServiceDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.AnnouncementEndpoints" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.BehaviorType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement">
      <topicdata name="ServiceDiscoveryElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" />
      <apidata name="ServiceDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement">
      <topicdata name="ServiceDiscoveryElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" />
      <apidata name="ServiceDiscoveryElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.AnnouncementEndpoints" />
        <element api="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.BehaviorType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.AnnouncementEndpoints">
      <topicdata group="api" />
      <apidata name="AnnouncementEndpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AnnouncementEndpoints" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementChannelEndpointElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>announcementEndpoints</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.ServiceDiscoveryElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement">
      <topicdata group="api" />
      <apidata name="UdpAnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.UdpAnnouncementEndpoint" ref="true" />
              <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement">
      <topicdata name="UdpAnnouncementEndpointCollectionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" />
      <apidata name="UdpAnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement">
      <topicdata name="UdpAnnouncementEndpointCollectionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" />
      <apidata name="UdpAnnouncementEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointCollectionElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement">
      <topicdata group="api" />
      <apidata name="UdpAnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Properties" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement">
      <topicdata name="UdpAnnouncementEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" />
      <apidata name="UdpAnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement">
      <topicdata name="UdpAnnouncementEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" />
      <apidata name="UdpAnnouncementEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MaxAnnouncementDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Properties" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration">
      <topicdata name="OnApplyConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate">
      <topicdata name="OnInitializeAndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <topicdata group="api" />
      <apidata name="CreateServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.EndpointType">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="InitializeFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MaxAnnouncementDelay">
      <topicdata group="api" />
      <apidata name="MaxAnnouncementDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAnnouncementDelay" />
      <setter name="set_MaxAnnouncementDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxAnnouncementDelay</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>00:00:00.500</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.MulticastAddress">
      <topicdata group="api" />
      <apidata name="MulticastAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastAddress" />
      <setter name="set_MulticastAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>multicastAddress</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>soap.udp://239.255.255.250:3702</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="channelEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement.Properties">
          <type api="T:System.ServiceModel.Discovery.Configuration.AnnouncementEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement.TransportSettings">
      <topicdata group="api" />
      <apidata name="TransportSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportSettings" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpAnnouncementEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>transportSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement">
      <topicdata group="api" />
      <apidata name="UdpDiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Discovery.UdpDiscoveryEndpoint" ref="true" />
              <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
            </specialization>
          </type>
          <type api="T:System.ServiceModel.Configuration.EndpointCollectionElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement">
      <topicdata name="UdpDiscoveryEndpointCollectionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />
      <apidata name="UdpDiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ContainsKey(System.String)" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.GetDefaultStandardEndpointElement" />
        <element api="M:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.TryAdd(System.String,System.ServiceModel.Description.ServiceEndpoint,System.Configuration.Configuration)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement">
      <topicdata name="UdpDiscoveryEndpointCollectionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />
      <apidata name="UdpDiscoveryEndpointCollectionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.EndpointCollectionElement.EndpointName" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.ConfiguredEndpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Endpoints" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.EndpointType" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointCollectionElement`2.Properties" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointCollectionElement" ref="true" />
      </containers>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement">
      <topicdata group="api" />
      <apidata name="UdpDiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.StandardEndpointElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Properties" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement">
      <topicdata name="UdpDiscoveryEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" />
      <apidata name="UdpDiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.ApplyConfiguration">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.ApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeAndValidate">
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.InitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="M:System.ServiceModel.Configuration.StandardEndpointElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate">
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
          <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement">
      <topicdata name="UdpDiscoveryEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" />
      <apidata name="UdpDiscoveryEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.StandardEndpointElement.Name" />
        <element api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.DiscoveryVersion" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.DiscoveryMode" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.EndpointType" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MaxResponseDelay" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MulticastAddress" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Properties" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.TransportSettings" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration">
      <topicdata name="OnApplyConfiguration" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate">
      <topicdata name="OnInitializeAndValidate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
      <topicdata group="api" />
      <apidata name="CreateServiceEndpoint" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.CreateServiceEndpoint(System.ServiceModel.Description.ContractDescription)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="contractDescription">
          <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.DiscoveryMode">
      <topicdata group="api" />
      <apidata name="DiscoveryMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DiscoveryMode" />
      <setter name="set_DiscoveryMode" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>discoveryMode</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.ServiceModel.Discovery.ServiceDiscoveryMode" ref="false" />
            <enumValue>
              <field name="Adhoc" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.EndpointType">
      <topicdata group="api" />
      <apidata name="EndpointType" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.EndpointType">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_EndpointType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name="InitializeFrom" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.InitializeFrom(System.ServiceModel.Description.ServiceEndpoint)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MaxResponseDelay">
      <topicdata group="api" />
      <apidata name="MaxResponseDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResponseDelay" />
      <setter name="set_MaxResponseDelay" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxResponseDelay</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>00:00:00.500</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.MulticastAddress">
      <topicdata group="api" />
      <apidata name="MulticastAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastAddress" />
      <setter name="set_MulticastAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>multicastAddress</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <value>soap.udp://239.255.255.250:3702</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnApplyConfiguration" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnApplyConfiguration(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ChannelEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="channelEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ChannelEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
      <topicdata group="api" />
      <apidata name="OnInitializeAndValidate" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.OnInitializeAndValidate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.OnInitializeAndValidate(System.ServiceModel.Configuration.ServiceEndpointElement)">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceEndpointElement">
          <type api="T:System.ServiceModel.Configuration.ServiceEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement.Properties">
          <type api="T:System.ServiceModel.Discovery.Configuration.DiscoveryEndpointElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement.TransportSettings">
      <topicdata group="api" />
      <apidata name="TransportSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransportSettings" />
      <returns>
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpDiscoveryEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>transportSettings</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement">
      <topicdata group="api" />
      <apidata name="UdpTransportSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxMulticastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxPendingMessageCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxUnicastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.SocketReceiveBufferSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.TimeToLive" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
      </containers>
    </api>
    <api id="Methods.T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement">
      <topicdata name="UdpTransportSettingsElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" />
      <apidata name="UdpTransportSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor" />
      <elements>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" />
      </containers>
    </api>
    <api id="Properties.T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement">
      <topicdata name="UdpTransportSettingsElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" />
      <apidata name="UdpTransportSettingsElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.DuplicateMessageHistoryLength" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxBufferPoolSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxMulticastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxPendingMessageCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxReceivedMessageSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxUnicastRetransmitCount" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MulticastInterfaceId" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.SocketReceiveBufferSize" />
        <element api="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.TimeToLive" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" />
      </containers>
    </api>
    <api id="M:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.DuplicateMessageHistoryLength">
      <topicdata group="api" />
      <apidata name="DuplicateMessageHistoryLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DuplicateMessageHistoryLength" />
      <setter name="set_DuplicateMessageHistoryLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>duplicateMessageHistoryLength</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>4112</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxBufferPoolSize">
      <topicdata group="api" />
      <apidata name="MaxBufferPoolSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferPoolSize" />
      <setter name="set_MaxBufferPoolSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxBufferPoolSize</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int64" ref="false" />
            <value>524288</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int64" ref="false" />
            <value>1</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int64" ref="false" />
            <value>9223372036854775807</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxMulticastRetransmitCount">
      <topicdata group="api" />
      <apidata name="MaxMulticastRetransmitCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxMulticastRetransmitCount" />
      <setter name="set_MaxMulticastRetransmitCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxMulticastRetransmitCount</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxPendingMessageCount">
      <topicdata group="api" />
      <apidata name="MaxPendingMessageCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxPendingMessageCount" />
      <setter name="set_MaxPendingMessageCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxPendingMessageCount</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>32</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxReceivedMessageSize">
      <topicdata group="api" />
      <apidata name="MaxReceivedMessageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxReceivedMessageSize" />
      <setter name="set_MaxReceivedMessageSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxReceivedMessageSize</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.LongValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int64" ref="false" />
            <value>1</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int64" ref="false" />
            <value>65536</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MaxUnicastRetransmitCount">
      <topicdata group="api" />
      <apidata name="MaxUnicastRetransmitCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxUnicastRetransmitCount" />
      <setter name="set_MaxUnicastRetransmitCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxUnicastRetransmitCount</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.MulticastInterfaceId">
      <topicdata group="api" />
      <apidata name="MulticastInterfaceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MulticastInterfaceId" />
      <setter name="set_MulticastInterfaceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>multicastInterfaceId</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.SocketReceiveBufferSize">
      <topicdata group="api" />
      <apidata name="SocketReceiveBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SocketReceiveBufferSize" />
      <setter name="set_SocketReceiveBufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>socketReceiveBufferSize</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>65536</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>2147483647</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement.TimeToLive">
      <topicdata group="api" />
      <apidata name="TimeToLive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeToLive" />
      <setter name="set_TimeToLive" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Discovery" module="System.ServiceModel.Discovery" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Discovery.Configuration" />
        <type api="T:System.ServiceModel.Discovery.Configuration.UdpTransportSettingsElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>timeToLive</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Configuration.IntegerValidatorAttribute" ref="true" />
          <assignment name="MinValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="MaxValue">
            <type api="T:System.Int32" ref="false" />
            <value>255</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
  </apis>
</reflection>