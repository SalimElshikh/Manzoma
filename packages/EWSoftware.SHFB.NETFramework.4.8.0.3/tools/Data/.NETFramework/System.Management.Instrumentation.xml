<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Management">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Management.Instrumentation">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.Instrumentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.Instrumentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Management.Instrumentation.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Management.Instrumentation">
      <topicdata group="api" />
      <apidata name="System.Management.Instrumentation" group="namespace" />
      <elements>
        <element api="T:System.Management.Instrumentation.ManagementEntityAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementHostingModel" />
        <element api="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementMemberAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementBindAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementCreateAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementProbeAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementTaskAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementKeyAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementConfigurationType" />
        <element api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementCommitAttribute" />
        <element api="T:System.Management.Instrumentation.ManagementNameAttribute" />
        <element api="T:System.Management.Instrumentation.InstrumentationBaseException" />
        <element api="T:System.Management.Instrumentation.InstrumentationException" />
        <element api="T:System.Management.Instrumentation.InstanceNotFoundException" />
        <element api="T:System.Management.Instrumentation.InstrumentedAttribute" />
        <element api="T:System.Management.Instrumentation.InstrumentationType" />
        <element api="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
        <element api="T:System.Management.Instrumentation.ManagedNameAttribute" />
        <element api="T:System.Management.Instrumentation.IgnoreMemberAttribute" />
        <element api="T:System.Management.Instrumentation.Instrumentation" />
        <element api="T:System.Management.Instrumentation.IEvent" />
        <element api="T:System.Management.Instrumentation.BaseEvent" />
        <element api="T:System.Management.Instrumentation.IInstance" />
        <element api="T:System.Management.Instrumentation.Instance" />
        <element api="T:System.Management.Instrumentation.ManagementInstaller" />
        <element api="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
        <element api="T:System.Management.Instrumentation.ManagementQualifierFlavors" />
        <element api="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
        <element api="T:System.Management.Instrumentation.ManagedCommonProvider" />
        <element api="T:System.Management.Instrumentation.DefaultManagementInstaller" />
        <element api="T:System.Management.Instrumentation.InstrumentationManager" />
        <element api="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      </elements>
    </api>
    <api id="T:System.Management.Instrumentation.BaseEvent">
      <topicdata group="api" />
      <apidata name="BaseEvent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Management.Instrumentation.IEvent" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Management.Instrumentation.BaseEvent.#ctor" />
        <element api="M:System.Management.Instrumentation.BaseEvent.Fire" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
          <argument>
            <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
            <enumValue>
              <field name="Event" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.BaseEvent">
      <topicdata name="BaseEvent" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.BaseEvent" />
      <apidata name="BaseEvent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Management.Instrumentation.BaseEvent.Fire" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.BaseEvent" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.BaseEvent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.BaseEvent" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.BaseEvent.Fire">
      <topicdata group="api" />
      <apidata name="Fire" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Management.Instrumentation.IEvent.Fire">
          <type api="T:System.Management.Instrumentation.IEvent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.BaseEvent" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.DefaultManagementInstaller">
      <topicdata group="api" />
      <apidata name="DefaultManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.DefaultManagementInstaller">
      <topicdata name="DefaultManagementInstaller" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      <apidata name="DefaultManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor" />
      <elements>
        <element api="Overload:System.Management.Instrumentation.DefaultManagementInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.DefaultManagementInstaller">
      <topicdata name="DefaultManagementInstaller" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      <apidata name="DefaultManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.DefaultManagementInstaller">
      <topicdata name="DefaultManagementInstaller" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      <apidata name="DefaultManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementInstaller" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.DefaultManagementInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <topicdata group="api" />
      <apidata name="DefaultManagementProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementProjectInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementProjectInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <topicdata name="DefaultManagementProjectInstaller" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      <apidata name="DefaultManagementProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor" />
      <elements>
        <element api="Overload:System.Management.Instrumentation.DefaultManagementProjectInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.DefaultManagementProjectInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <topicdata name="DefaultManagementProjectInstaller" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      <apidata name="DefaultManagementProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.HelpText" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.DefaultManagementProjectInstaller">
      <topicdata name="DefaultManagementProjectInstaller" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      <apidata name="DefaultManagementProjectInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.DefaultManagementProjectInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.DefaultManagementProjectInstaller" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.IEvent">
      <topicdata group="api" />
      <apidata name="IEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Management.Instrumentation.BaseEvent" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Management.Instrumentation.IEvent.Fire" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.IEvent">
      <topicdata name="IEvent" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.IEvent" />
      <apidata name="IEvent" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Management.Instrumentation.IEvent.Fire" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IEvent" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.IEvent.Fire">
      <topicdata group="api" />
      <apidata name="Fire" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IEvent" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <topicdata group="api" />
      <apidata name="IgnoreMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <topicdata name="IgnoreMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.IgnoreMemberAttribute" />
      <apidata name="IgnoreMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IgnoreMemberAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.IgnoreMemberAttribute">
      <topicdata name="IgnoreMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.IgnoreMemberAttribute" />
      <apidata name="IgnoreMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IgnoreMemberAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.IgnoreMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IgnoreMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.IInstance">
      <topicdata group="api" />
      <apidata name="IInstance" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Management.Instrumentation.Instance" ref="true" />
      </implementors>
      <elements>
        <element api="P:System.Management.Instrumentation.IInstance.Published" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.IInstance">
      <topicdata name="IInstance" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.IInstance" />
      <apidata name="IInstance" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Management.Instrumentation.IInstance.Published" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IInstance" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.IInstance.Published">
      <topicdata group="api" />
      <apidata name="Published" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Published" />
      <setter name="set_Published" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.IInstance" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.Instance">
      <topicdata group="api" />
      <apidata name="Instance" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Management.Instrumentation.IInstance" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Management.Instrumentation.Instance.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Management.Instrumentation.Instance.Published" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
          <argument>
            <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
            <enumValue>
              <field name="Instance" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.Instance">
      <topicdata name="Instance" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.Instance" />
      <apidata name="Instance" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instance" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.Instance">
      <topicdata name="Instance" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.Instance" />
      <apidata name="Instance" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Management.Instrumentation.Instance.Published" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instance" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instance.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instance" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.Instance.Published">
      <topicdata group="api" />
      <apidata name="Published" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Published" />
      <setter name="set_Published" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Management.Instrumentation.IInstance.Published">
          <type api="T:System.Management.Instrumentation.IInstance" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instance" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Management.Instrumentation.IgnoreMemberAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata group="api" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
          <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.InstanceNotFoundException">
      <topicdata name="InstanceNotFoundException" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.InstanceNotFoundException" />
      <apidata name="InstanceNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstanceNotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstanceNotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.Instrumentation">
      <topicdata group="api" />
      <apidata name="Instrumentation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.Instrumentation.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Management.Instrumentation.Instrumentation.#ctor" />
        <element api="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.Instrumentation">
      <topicdata name="Instrumentation" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.Instrumentation" />
      <apidata name="Instrumentation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.Instrumentation.#ctor" />
      <elements>
        <element api="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)" />
        <element api="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.Fire(System.Object)">
      <topicdata group="api" />
      <apidata name="Fire" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="eventData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.IsAssemblyRegistered(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="IsAssemblyRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyToRegister">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.Publish(System.Object)">
      <topicdata group="api" />
      <apidata name="Publish" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.RegisterAssembly(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="RegisterAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assemblyToRegister">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.Revoke(System.Object)">
      <topicdata group="api" />
      <apidata name="Revoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instanceData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.Instrumentation.SetBatchSize(System.Type,System.Int32)">
      <topicdata group="api" />
      <apidata name="SetBatchSize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instrumentationClass">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="batchSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.Instrumentation" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata group="api" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata name="InstrumentationBaseException" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata name="InstrumentationBaseException" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.InstrumentationBaseException">
      <topicdata name="InstrumentationBaseException" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.InstrumentationBaseException" />
      <apidata name="InstrumentationBaseException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationBaseException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationBaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <topicdata group="api" />
      <apidata name="InstrumentationClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)" />
          <element api="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType" />
        <element api="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <topicdata name="InstrumentationClassAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
      <apidata name="InstrumentationClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.InstrumentationClassAttribute">
      <topicdata name="InstrumentationClassAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
      <apidata name="InstrumentationClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType" />
        <element api="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)" />
        <element api="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor" />
      <parameters>
        <parameter name="instrumentationType">
          <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor(System.Management.Instrumentation.InstrumentationType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationClassAttribute.#ctor" />
      <parameters>
        <parameter name="instrumentationType">
          <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
        </parameter>
        <parameter name="managedBaseClassName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.InstrumentationClassAttribute.InstrumentationType">
      <topicdata group="api" />
      <apidata name="InstrumentationType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstrumentationType" />
      <returns>
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.InstrumentationClassAttribute.ManagedBaseClassName">
      <topicdata group="api" />
      <apidata name="ManagedBaseClassName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ManagedBaseClassName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationClassAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationException">
      <topicdata group="api" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.InstrumentationBaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.InstanceNotFoundException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Management.Instrumentation.InstrumentationException.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstrumentationException">
      <topicdata name="InstrumentationException" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.InstrumentationException">
      <topicdata name="InstrumentationException" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.InstrumentationException">
      <topicdata name="InstrumentationException" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.InstrumentationException" />
      <apidata name="InstrumentationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationManager">
      <topicdata group="api" />
      <apidata name="InstrumentationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationManager.Publish(System.Object)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.RegisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.RegisterType(System.Type)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.Revoke(System.Object)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.UnregisterType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstrumentationManager">
      <topicdata name="InstrumentationManager" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstrumentationManager" />
      <apidata name="InstrumentationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentationManager.Publish(System.Object)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.RegisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.RegisterType(System.Type)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.Revoke(System.Object)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly(System.Reflection.Assembly)" />
        <element api="M:System.Management.Instrumentation.InstrumentationManager.UnregisterType(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.Publish(System.Object)">
      <topicdata group="api" />
      <apidata name="Publish" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.RegisterAssembly(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="RegisterAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="managementAssembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.RegisterType(System.Type)">
      <topicdata group="api" />
      <apidata name="RegisterType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="managementType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.Revoke(System.Object)">
      <topicdata group="api" />
      <apidata name="Revoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name="UnregisterAssembly" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="managementAssembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentationManager.UnregisterType(System.Type)">
      <topicdata group="api" />
      <apidata name="UnregisterType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="managementType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentationType">
      <topicdata group="api" />
      <apidata name="InstrumentationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Management.Instrumentation.InstrumentationType.Instance" />
        <element api="F:System.Management.Instrumentation.InstrumentationType.Event" />
        <element api="F:System.Management.Instrumentation.InstrumentationType.Abstract" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.InstrumentationType.Abstract">
      <topicdata group="api" notopic="" />
      <apidata name="Abstract" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.InstrumentationType.Event">
      <topicdata group="api" notopic="" />
      <apidata name="Event" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.InstrumentationType.Instance">
      <topicdata group="api" notopic="" />
      <apidata name="Instance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentationType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.InstrumentedAttribute">
      <topicdata group="api" />
      <apidata name="InstrumentedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="Overload:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
          <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
          <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName" />
        <element api="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.InstrumentedAttribute">
      <topicdata name="InstrumentedAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.InstrumentedAttribute" />
      <apidata name="InstrumentedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.InstrumentedAttribute">
      <topicdata name="InstrumentedAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.InstrumentedAttribute" />
      <apidata name="InstrumentedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName" />
        <element api="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
        <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <parameters>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.InstrumentedAttribute.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.InstrumentedAttribute.#ctor" />
      <parameters>
        <parameter name="namespaceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="securityDescriptor">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.InstrumentedAttribute.NamespaceName">
      <topicdata group="api" />
      <apidata name="NamespaceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.InstrumentedAttribute.SecurityDescriptor">
      <topicdata group="api" />
      <apidata name="SecurityDescriptor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SecurityDescriptor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.InstrumentedAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagedCommonProvider">
      <topicdata group="api" />
      <apidata name="ManagedCommonProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ClassInterfaceAttribute" ref="true" />
          <argument>
            <type api="T:System.Runtime.InteropServices.ClassInterfaceType" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2A7B042D-578A-4366-9A3D-154C0498458E</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagedCommonProvider">
      <topicdata name="ManagedCommonProvider" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagedCommonProvider" />
      <apidata name="ManagedCommonProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedCommonProvider" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagedCommonProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedCommonProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagedNameAttribute">
      <topicdata group="api" />
      <apidata name="ManagedNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagedNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagedNameAttribute">
      <topicdata name="ManagedNameAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagedNameAttribute" />
      <apidata name="ManagedNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagedNameAttribute">
      <topicdata name="ManagedNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagedNameAttribute" />
      <apidata name="ManagedNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagedNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedNameAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagedNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagedNameAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagedNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata group="api" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata name="ManagementBindAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementBindAttribute" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementBindAttribute">
      <topicdata name="ManagementBindAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementBindAttribute" />
      <apidata name="ManagementBindAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementBindAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementBindAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementBindAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementCommitAttribute">
      <topicdata group="api" />
      <apidata name="ManagementCommitAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementCommitAttribute">
      <topicdata name="ManagementCommitAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementCommitAttribute" />
      <apidata name="ManagementCommitAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementCommitAttribute">
      <topicdata name="ManagementCommitAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementCommitAttribute" />
      <apidata name="ManagementCommitAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementCommitAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata group="api" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata name="ManagementConfigurationAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementConfigurationAttribute">
      <topicdata name="ManagementConfigurationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      <apidata name="ManagementConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode" />
        <element api="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementConfigurationAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Mode">
      <topicdata group="api" />
      <apidata name="Mode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Mode" />
      <setter name="set_Mode" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementConfigurationAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementConfigurationType">
      <topicdata group="api" />
      <apidata name="ManagementConfigurationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Management.Instrumentation.ManagementConfigurationType.Apply" />
        <element api="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementConfigurationType.Apply">
      <topicdata group="api" notopic="" />
      <apidata name="Apply" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementConfigurationType.OnCommit">
      <topicdata group="api" notopic="" />
      <apidata name="OnCommit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementConfigurationType" ref="false" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementCreateAttribute">
      <topicdata group="api" />
      <apidata name="ManagementCreateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementCreateAttribute">
      <topicdata name="ManagementCreateAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementCreateAttribute" />
      <apidata name="ManagementCreateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementCreateAttribute">
      <topicdata name="ManagementCreateAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementCreateAttribute" />
      <apidata name="ManagementCreateAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementCreateAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata group="api" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata name="ManagementEntityAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementEntityAttribute">
      <topicdata name="ManagementEntityAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      <apidata name="ManagementEntityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.External">
      <topicdata group="api" />
      <apidata name="External" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_External" />
      <setter name="set_External" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton">
      <topicdata group="api" />
      <apidata name="Singleton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Singleton" />
      <setter name="set_Singleton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEntityAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata group="api" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata name="ManagementEnumeratorAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementEnumeratorAttribute">
      <topicdata name="ManagementEnumeratorAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      <apidata name="ManagementEnumeratorAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementEnumeratorAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementEnumeratorAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementHostingModel">
      <topicdata group="api" />
      <apidata name="ManagementHostingModel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.Decoupled" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.NetworkService" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.LocalService" />
        <element api="F:System.Management.Instrumentation.ManagementHostingModel.LocalSystem" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.Decoupled">
      <topicdata group="api" notopic="" />
      <apidata name="Decoupled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.LocalService">
      <topicdata group="api" notopic="" />
      <apidata name="LocalService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.LocalSystem">
      <topicdata group="api" notopic="" />
      <apidata name="LocalSystem" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementHostingModel.NetworkService">
      <topicdata group="api" notopic="" />
      <apidata name="NetworkService" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementInstaller">
      <topicdata group="api" />
      <apidata name="ManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementInstaller.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.Install.Installer" ref="true" />
          <type api="T:System.ComponentModel.Component" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
        <element api="Overload:System.Management.Instrumentation.ManagementInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.#ctor" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.ManagementInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Management.Instrumentation.ManagementInstaller.HelpText" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementInstaller">
      <topicdata name="ManagementInstaller" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementInstaller" />
      <apidata name="ManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementInstaller.#ctor" />
      <elements>
        <element api="Overload:System.Management.Instrumentation.ManagementInstaller.Dispose">
          <element api="M:System.ComponentModel.Component.Dispose" />
          <element api="M:System.ComponentModel.Component.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Component.Finalize" />
        <element api="M:System.ComponentModel.Component.GetService(System.Type)" />
        <element api="M:System.ComponentModel.Component.ToString" />
        <element api="M:System.Configuration.Install.Installer.OnAfterInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnAfterUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeInstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeRollback(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnBeforeUninstall(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitted(System.Collections.IDictionary)" />
        <element api="M:System.Configuration.Install.Installer.OnCommitting(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)" />
        <element api="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)" />
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.Management.Instrumentation.ManagementInstaller.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementInstaller">
      <topicdata name="ManagementInstaller" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementInstaller" />
      <apidata name="ManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementInstaller.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Component.CanRaiseEvents" />
        <element api="P:System.ComponentModel.Component.Container" />
        <element api="P:System.ComponentModel.Component.DesignMode" />
        <element api="P:System.ComponentModel.Component.Events" />
        <element api="P:System.ComponentModel.Component.Site" />
        <element api="P:System.Configuration.Install.Installer.Context" />
        <element api="P:System.Configuration.Install.Installer.Installers" />
        <element api="P:System.Configuration.Install.Installer.Parent" />
        <element api="P:System.Management.Instrumentation.ManagementInstaller.HelpText" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.ManagementInstaller">
      <topicdata name="ManagementInstaller" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.ManagementInstaller" />
      <apidata name="ManagementInstaller" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementInstaller.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Component.Disposed" />
        <element api="E:System.Configuration.Install.Installer.AfterInstall" />
        <element api="E:System.Configuration.Install.Installer.AfterRollback" />
        <element api="E:System.Configuration.Install.Installer.AfterUninstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeInstall" />
        <element api="E:System.Configuration.Install.Installer.BeforeRollback" />
        <element api="E:System.Configuration.Install.Installer.BeforeUninstall" />
        <element api="E:System.Configuration.Install.Installer.Committed" />
        <element api="E:System.Configuration.Install.Installer.Committing" />
      </elements>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementInstaller.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementInstaller.Commit(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Commit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Commit(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementInstaller.HelpText">
      <topicdata group="api" />
      <apidata name="HelpText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Configuration.Install.Installer.HelpText">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HelpText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementInstaller.Install(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Install" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Install(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementInstaller.Rollback(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Rollback" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Rollback(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementInstaller.Uninstall(System.Collections.IDictionary)">
      <topicdata group="api" />
      <apidata name="Uninstall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.Install.Installer.Uninstall(System.Collections.IDictionary)">
          <type api="T:System.Configuration.Install.Installer" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="savedState">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management" module="System.Management" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementInstaller" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementKeyAttribute">
      <topicdata group="api" />
      <apidata name="ManagementKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementKeyAttribute">
      <topicdata name="ManagementKeyAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementKeyAttribute" />
      <apidata name="ManagementKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementKeyAttribute">
      <topicdata name="ManagementKeyAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementKeyAttribute" />
      <apidata name="ManagementKeyAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata group="api" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementKeyAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementConfigurationAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementCommitAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementMemberAttribute.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata name="ManagementMemberAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementMemberAttribute">
      <topicdata name="ManagementMemberAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      <apidata name="ManagementMemberAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementMemberAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementMemberAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata group="api" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata name="ManagementNameAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementNameAttribute" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementNameAttribute">
      <topicdata name="ManagementNameAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementNameAttribute" />
      <apidata name="ManagementNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementNameAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementNameAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNameAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <topicdata group="api" />
      <apidata name="ManagementNewInstanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Management.Instrumentation.ManagementBindAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementCreateAttribute" ref="true" />
          <type api="T:System.Management.Instrumentation.ManagementEnumeratorAttribute" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementNewInstanceAttribute.#ctor" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <topicdata name="ManagementNewInstanceAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      <apidata name="ManagementNewInstanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementNewInstanceAttribute">
      <topicdata name="ManagementNewInstanceAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      <apidata name="ManagementNewInstanceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementNewInstanceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementNewInstanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata group="api" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata name="ManagementProbeAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementProbeAttribute">
      <topicdata name="ManagementProbeAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      <apidata name="ManagementProbeAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementProbeAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementProbeAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementProbeAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementQualifierAttribute">
      <topicdata group="api" />
      <apidata name="ManagementQualifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementQualifierAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementQualifierAttribute">
      <topicdata name="ManagementQualifierAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
      <apidata name="ManagementQualifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementQualifierAttribute">
      <topicdata name="ManagementQualifierAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
      <apidata name="ManagementQualifierAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementQualifierAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementQualifierAttribute.Flavor">
      <topicdata group="api" />
      <apidata name="Flavor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Flavor" />
      <setter name="set_Flavor" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementQualifierAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementQualifierAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementQualifierFlavors">
      <topicdata group="api" />
      <apidata name="ManagementQualifierFlavors" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Management.Instrumentation.ManagementQualifierFlavors.Amended" />
        <element api="F:System.Management.Instrumentation.ManagementQualifierFlavors.DisableOverride" />
        <element api="F:System.Management.Instrumentation.ManagementQualifierFlavors.ClassOnly" />
        <element api="F:System.Management.Instrumentation.ManagementQualifierFlavors.ThisClassOnly" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementQualifierFlavors.Amended">
      <topicdata group="api" notopic="" />
      <apidata name="Amended" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementQualifierFlavors.ClassOnly">
      <topicdata group="api" notopic="" />
      <apidata name="ClassOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementQualifierFlavors.DisableOverride">
      <topicdata group="api" notopic="" />
      <apidata name="DisableOverride" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </containers>
    </api>
    <api id="F:System.Management.Instrumentation.ManagementQualifierFlavors.ThisClassOnly">
      <topicdata group="api" notopic="" />
      <apidata name="ThisClassOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementQualifierFlavors" ref="false" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata group="api" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
              <field name="Field" />
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata name="ManagementReferenceAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementReferenceAttribute">
      <topicdata name="ManagementReferenceAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      <apidata name="ManagementReferenceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementReferenceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementReferenceAttribute.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementReferenceAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata group="api" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata name="ManagementRemoveAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementRemoveAttribute">
      <topicdata name="ManagementRemoveAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      <apidata name="ManagementRemoveAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementRemoveAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementRemoveAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementRemoveAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata group="api" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Management.Instrumentation.ManagementMemberAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata name="ManagementTaskAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.ManagementTaskAttribute">
      <topicdata name="ManagementTaskAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      <apidata name="ManagementTaskAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.ManagementMemberAttribute.Name" />
        <element api="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.ManagementTaskAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.ManagementTaskAttribute.Schema">
      <topicdata group="api" />
      <apidata name="Schema" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Schema" />
      <setter name="set_Schema" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.ManagementTaskAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata group="api" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata name="WmiConfigurationAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.WmiConfigurationAttribute">
      <topicdata name="WmiConfigurationAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      <apidata name="WmiConfigurationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
        <element api="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="scope">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup">
      <topicdata group="api" />
      <apidata name="HostingGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostingGroup" />
      <setter name="set_HostingGroup" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel">
      <topicdata group="api" />
      <apidata name="HostingModel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HostingModel" />
      <setter name="set_HostingModel" />
      <returns>
        <type api="T:System.Management.Instrumentation.ManagementHostingModel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel">
      <topicdata group="api" />
      <apidata name="IdentifyLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IdentifyLevel" />
      <setter name="set_IdentifyLevel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity">
      <topicdata group="api" />
      <apidata name="NamespaceSecurity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NamespaceSecurity" />
      <setter name="set_NamespaceSecurity" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scope" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction">
      <topicdata group="api" />
      <apidata name="SecurityRestriction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityRestriction" />
      <setter name="set_SecurityRestriction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiConfigurationAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Management.Instrumentation.WmiProviderInstallationException">
      <topicdata group="api" />
      <apidata name="WmiProviderInstallationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor">
          <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
          <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String)" />
          <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
      </containers>
    </api>
    <api id="Methods.T:System.Management.Instrumentation.WmiProviderInstallationException">
      <topicdata name="WmiProviderInstallationException" group="list" subgroup="Methods" typeTopicId="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      <apidata name="WmiProviderInstallationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      </containers>
    </api>
    <api id="Properties.T:System.Management.Instrumentation.WmiProviderInstallationException">
      <topicdata name="WmiProviderInstallationException" group="list" subgroup="Properties" typeTopicId="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      <apidata name="WmiProviderInstallationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      </containers>
    </api>
    <api id="Events.T:System.Management.Instrumentation.WmiProviderInstallationException">
      <topicdata name="WmiProviderInstallationException" group="list" subgroup="Events" typeTopicId="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      <apidata name="WmiProviderInstallationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" />
      </containers>
    </api>
    <api id="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
        <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String)" />
        <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Management.Instrumentation.WmiProviderInstallationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Management.Instrumentation.WmiProviderInstallationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Management.Instrumentation" module="System.Management.Instrumentation" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Management.Instrumentation" />
        <type api="T:System.Management.Instrumentation.WmiProviderInstallationException" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>