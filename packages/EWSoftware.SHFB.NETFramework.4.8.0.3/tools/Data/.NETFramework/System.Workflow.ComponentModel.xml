<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Workflow.ComponentModel">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.Compiler</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.Serialization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.Design</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml/workflow</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>wf</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.XmlnsPrefixAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/winfx/2006/xaml</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>x</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Workflow.ComponentModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Workflow.ComponentModel">
      <topicdata group="api" />
      <apidata name="System.Workflow.ComponentModel" group="namespace" />
      <elements>
        <element api="T:System.Workflow.ComponentModel.WorkflowChanges" />
        <element api="T:System.Workflow.ComponentModel.WorkflowChangeAction" />
        <element api="T:System.Workflow.ComponentModel.ActivityChangeAction" />
        <element api="T:System.Workflow.ComponentModel.AddedActivityAction" />
        <element api="T:System.Workflow.ComponentModel.RemovedActivityAction" />
        <element api="T:System.Workflow.ComponentModel.DependencyObject" />
        <element api="T:System.Workflow.ComponentModel.Activity" />
        <element api="T:System.Workflow.ComponentModel.CompositeActivity" />
        <element api="T:System.Workflow.ComponentModel.IActivityEventListener`1" />
        <element api="T:System.Workflow.ComponentModel.QueueEventArgs" />
        <element api="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
        <element api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />
        <element api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
        <element api="T:System.Workflow.ComponentModel.ActivityCollection" />
        <element api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" />
        <element api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
        <element api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
        <element api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" />
        <element api="T:System.Workflow.ComponentModel.ActivityExecutionResult" />
        <element api="T:System.Workflow.ComponentModel.IStartWorkflow" />
        <element api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" />
        <element api="T:System.Workflow.ComponentModel.ICompensatableActivity" />
        <element api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" />
        <element api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" />
        <element api="T:System.Workflow.ComponentModel.ActivityCondition" />
        <element api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" />
        <element api="T:System.Workflow.ComponentModel.GetValueOverride" />
        <element api="T:System.Workflow.ComponentModel.SetValueOverride" />
        <element api="T:System.Workflow.ComponentModel.PropertyMetadata" />
        <element api="T:System.Workflow.ComponentModel.DependencyProperty" />
        <element api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
        <element api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />
        <element api="T:System.Workflow.ComponentModel.ActivityBind" />
        <element api="T:System.Workflow.ComponentModel.SuspendActivity" />
        <element api="T:System.Workflow.ComponentModel.TerminateActivity" />
        <element api="T:System.Workflow.ComponentModel.ThrowActivity" />
        <element api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
        <element api="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
        <element api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
        <element api="T:System.Workflow.ComponentModel.CompensateActivity" />
        <element api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
        <element api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
        <element api="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
        <element api="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
        <element api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      </elements>
    </api>
    <api id="T:System.Workflow.ComponentModel.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
          <type api="T:System.Workflow.Activities.SetStateActivity" ref="true" />
          <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
          <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
          <type api="T:System.Workflow.Activities.WebServiceFaultActivity" ref="true" />
          <type api="T:System.Workflow.Activities.PolicyActivity" ref="true" />
          <type api="T:System.Workflow.Activities.CodeActivity" ref="true" />
          <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
          <type api="T:System.Workflow.Activities.InvokeWorkflowActivity" ref="true" />
          <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
          <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
          <type api="T:System.Workflow.Activities.SendActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty" />
        <element api="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.#ctor">
          <element api="M:System.Workflow.ComponentModel.Activity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.Activity.Load">
          <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Design.Resources.Activity.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.RuntimeNamePropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Name</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.Activity">
      <topicdata name="Activity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.Activity.Load">
          <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.Activity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.Activity">
      <topicdata name="Activity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.Activity">
      <topicdata name="Activity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.Activity">
      <topicdata name="Activity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.Activity" />
      <apidata name="Activity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.Activity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty" />
        <element api="F:System.Workflow.ComponentModel.Activity.CancelingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.ClosedEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.CompensatingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.ExecutingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.FaultingEvent" />
        <element api="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.GetActivityByName">
      <topicdata name="GetActivityByName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
        <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.Activity.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.Activity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.Activity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty">
      <topicdata group="api" />
      <apidata name="ActivityContextGuidProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.Canceling">
      <topicdata group="api" />
      <apidata name="Canceling" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Canceling" />
      <remover name="remove_Canceling" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.CancelingEvent">
      <topicdata group="api" />
      <apidata name="CancelingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.Closed">
      <topicdata group="api" />
      <apidata name="Closed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Closed" />
      <remover name="remove_Closed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.ClosedEvent">
      <topicdata group="api" />
      <apidata name="ClosedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.Compensating">
      <topicdata group="api" />
      <apidata name="Compensating" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Compensating" />
      <remover name="remove_Compensating" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.CompensatingEvent">
      <topicdata group="api" />
      <apidata name="CompensatingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ComponentModel.Design.MultilineStringEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.Executing">
      <topicdata group="api" />
      <apidata name="Executing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Executing" />
      <remover name="remove_Executing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.ExecutingEvent">
      <topicdata group="api" />
      <apidata name="ExecutingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.ExecutionResult">
      <topicdata group="api" />
      <apidata name="ExecutionResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionResult" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.ExecutionStatus">
      <topicdata group="api" />
      <apidata name="ExecutionStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionStatus" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.Faulting">
      <topicdata group="api" />
      <apidata name="Faulting" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Faulting" />
      <remover name="remove_Faulting" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.FaultingEvent">
      <topicdata group="api" />
      <apidata name="FaultingEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.Activity.GetActivityByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityQualifiedName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="GetActivityByName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.Activity.GetActivityByName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activityQualifiedName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="withinThisActivityOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.Activity.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.EventArgs" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="handler">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="e">
          <template name="T" index="0" api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.Activity.Invoke" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.EventArgs" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="eventListener">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="e">
          <template name="T" index="0" api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity">
      <topicdata group="api" />
      <apidata name="IsDynamicActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDynamicActivity" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.Activity.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="outerActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.Activity.Load" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="outerActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="formatter">
          <type api="T:System.Runtime.Serialization.IFormatter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnActivityExecutionContextLoad" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnActivityExecutionContextUnload" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.QualifiedName">
      <topicdata group="api" />
      <apidata name="QualifiedName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QualifiedName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)">
      <topicdata group="api" />
      <apidata name="RaiseEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyEvent">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)">
      <topicdata group="api" />
      <apidata name="RaiseGenericEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.EventArgs" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="dependencyEvent">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <template name="T" index="0" api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="RegisterForStatusChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProp">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="activityStatusChangeListener">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.Activity.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.Activity.Save" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="formatter">
          <type api="T:System.Runtime.Serialization.IFormatter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.Activity.StatusChanged">
      <topicdata group="api" />
      <apidata name="StatusChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_StatusChanged" />
      <remover name="remove_StatusChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.Activity.StatusChangedEvent">
      <topicdata group="api" />
      <apidata name="StatusChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)">
      <topicdata group="api" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.Activity.TrackData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.Activity.TrackData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userDataKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Uninitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})">
      <topicdata group="api" />
      <apidata name="UnregisterForStatusChange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProp">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="activityStatusChangeListener">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId">
      <topicdata group="api" />
      <apidata name="WorkflowInstanceId" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkflowInstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityBind">
      <topicdata group="api" />
      <apidata name="ActivityBind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Serialization.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityBind.#ctor">
          <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor" />
          <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String)" />
          <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String,System.String)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue">
          <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityBind.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.SetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.ToString" />
        <element api="P:System.Workflow.ComponentModel.ActivityBind.Name" />
        <element api="P:System.Workflow.ComponentModel.ActivityBind.Path" />
        <element api="P:System.Workflow.ComponentModel.ActivityBind.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.ActivityBindTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityBind">
      <topicdata name="ActivityBind" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityBind" />
      <apidata name="ActivityBind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue">
          <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityBind.ProvideValue(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.SetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityBind">
      <topicdata name="ActivityBind" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityBind" />
      <apidata name="ActivityBind" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityBind.Name" />
        <element api="P:System.Workflow.ComponentModel.ActivityBind.Path" />
        <element api="P:System.Workflow.ComponentModel.ActivityBind.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityBind.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue">
      <topicdata name="GetRuntimeValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetRuntimeValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityBind.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetRuntimeValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Type)">
      <topicdata group="api" />
      <apidata name="GetRuntimeValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityBind.GetRuntimeValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityBind.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.ConstructorArgumentAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityBind.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.ProvideValue(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Serialization.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Serialization.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.SetRuntimeValue(System.Workflow.ComponentModel.Activity,System.Object)">
      <topicdata group="api" />
      <apidata name="SetRuntimeValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityBind.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityBind.UserData">
      <topicdata group="api" />
      <apidata name="UserData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserData" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityChangeAction">
      <topicdata group="api" />
      <apidata name="ActivityChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityChangeAction.#ctor">
          <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor" />
          <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor(System.Workflow.ComponentModel.CompositeActivity)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityChangeAction">
      <topicdata name="ActivityChangeAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityChangeAction" />
      <apidata name="ActivityChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityChangeAction">
      <topicdata name="ActivityChangeAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityChangeAction" />
      <apidata name="ActivityChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityChangeAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor" />
        <element api="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor(System.Workflow.ComponentModel.CompositeActivity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityChangeAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityChangeAction.#ctor(System.Workflow.ComponentModel.CompositeActivity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityChangeAction.#ctor" />
      <parameters>
        <parameter name="compositeActivity">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath">
      <topicdata group="api" />
      <apidata name="OwnerActivityDottedPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwnerActivityDottedPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ValidateChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="contextActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityCollection">
      <topicdata group="api" />
      <apidata name="ActivityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.IndexOf">
          <element api="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator">
          <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
          <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Item">
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly">
          <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityCollection">
      <topicdata name="ActivityCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityCollection" />
      <apidata name="ActivityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Append``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Append" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension">
          <apidata name="Prepend" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="element">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="ToHashSet" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.HashSet`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.Collections.Generic.List`1.AsReadOnly" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.BinarySearch">
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0)" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.CopyTo">
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[])" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.Find(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.FindIndex">
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.FindLastIndex">
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})" />
          <element api="M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ForEach(System.Action{`0})" />
        <element api="M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.LastIndexOf">
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})" />
        <element api="M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Reverse">
          <element api="M:System.Collections.Generic.List`1.Reverse" />
          <element api="M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Sort">
          <element api="M:System.Collections.Generic.List`1.Sort" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})" />
          <element api="M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})" />
        </element>
        <element api="M:System.Collections.Generic.List`1.ToArray" />
        <element api="M:System.Collections.Generic.List`1.TrimExcess" />
        <element api="M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.IndexOf">
          <element api="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
          <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator">
          <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
          <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityCollection">
      <topicdata name="ActivityCollection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityCollection" />
      <apidata name="ActivityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.Capacity" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.Count" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.Item">
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly">
          <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
          <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.ActivityCollection">
      <topicdata name="ActivityCollection" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.ActivityCollection" />
      <apidata name="ActivityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityCollection.IndexOf">
      <topicdata name="IndexOf" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)" />
        <element api="M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly">
      <topicdata name="IsReadOnly" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator">
      <topicdata name="GetEnumerator" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="owner">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.Add(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.Contains(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.IndexOf(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityCollection.IndexOf" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.ActivityCollection.ListChanged">
      <topicdata group="api" />
      <apidata name="ListChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ListChanged" />
      <remover name="remove_ListChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.Remove(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.RemoveAt(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Add(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" eiiName="ICollection`1.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Clear">
      <topicdata group="api" eiiName="ICollection`1.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Contains(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" eiiName="ICollection`1.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#CopyTo(System.Workflow.ComponentModel.Activity[],System.Int32)">
      <topicdata group="api" eiiName="ICollection`1.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Count">
      <topicdata group="api" eiiName="ICollection`1.Count" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection`1.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" overload="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#IsReadOnly" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Workflow.ComponentModel.Activity&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#ICollection{System#Workflow#ComponentModel#Activity}#Remove(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" eiiName="ICollection`1.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable`1.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IEnumerable{System#Workflow#ComponentModel#Activity}#GetEnumerator" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#IndexOf(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" eiiName="IList`1.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Insert(System.Int32,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" eiiName="IList`1.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#Item(System.Int32)">
      <topicdata group="api" eiiName="IList`1.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item" />
      <setter name="set_System.Collections.Generic.IList&lt;System.Workflow.ComponentModel.Activity&gt;.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#Generic#IList{System#Workflow#ComponentModel#Activity}#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList`1.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollection.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction">
      <topicdata group="api" />
      <apidata name="ActivityCollectionChangeAction" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Add" />
        <element api="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Remove" />
        <element api="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Replace" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityCollectionChangeAction.Replace">
      <topicdata group="api" notopic="" />
      <apidata name="Replace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs">
      <topicdata group="api" />
      <apidata name="ActivityCollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor">
          <element api="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)" />
          <element api="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Action" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.AddedItems" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Index" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Owner" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.RemovedItems" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs">
      <topicdata name="ActivityCollectionChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      <apidata name="ActivityCollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs">
      <topicdata name="ActivityCollectionChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      <apidata name="ActivityCollectionChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Action" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.AddedItems" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Index" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Owner" />
        <element api="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.RemovedItems" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)" />
        <element api="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="removedItems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="addedItems">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="owner">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.ActivityCollectionChangeAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.#ctor" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="removedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="addedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="owner">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeAction" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.AddedItems">
      <topicdata group="api" />
      <apidata name="AddedItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedItems" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.Owner">
      <topicdata group="api" />
      <apidata name="Owner" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Owner" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs.RemovedItems">
      <topicdata group="api" />
      <apidata name="RemovedItems" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedItems" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityCondition">
      <topicdata group="api" />
      <apidata name="ActivityCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.CodeCondition" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleConditionReference" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityCondition.#ctor" />
        <element api="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Compiler.ConditionValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityCondition">
      <topicdata name="ActivityCondition" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityCondition" />
      <apidata name="ActivityCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityCondition.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityCondition">
      <topicdata name="ActivityCondition" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityCondition" />
      <apidata name="ActivityCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.ActivityCondition">
      <topicdata name="ActivityCondition" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.ActivityCondition" />
      <apidata name="ActivityCondition" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <topicdata group="api" />
      <apidata name="ActivityExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionContext.CurrentExceptionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.CancelActivity(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.CloseActivity" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.GetService">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.System#IDisposable#Dispose" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.ExecutionContextManager" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <topicdata name="ActivityExecutionContext" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      <apidata name="ActivityExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.CancelActivity(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.CloseActivity" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity(System.Workflow.ComponentModel.Activity)" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.GetService">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.System#IDisposable#Dispose" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <topicdata name="ActivityExecutionContext" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      <apidata name="ActivityExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContext.ExecutionContextManager" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.ActivityExecutionContext">
      <topicdata name="ActivityExecutionContext" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      <apidata name="ActivityExecutionContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionContext.CurrentExceptionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.GetService">
      <topicdata name="GetService" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetService" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData">
      <topicdata name="TrackData" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionContext.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.CancelActivity(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="CancelActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.CloseActivity">
      <topicdata group="api" />
      <apidata name="CloseActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid">
      <topicdata group="api" />
      <apidata name="ContextGuid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContextGuid" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionContext.CurrentExceptionProperty">
      <topicdata group="api" />
      <apidata name="CurrentExceptionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.ExecuteActivity(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ExecuteActivity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionContext.ExecutionContextManager">
      <topicdata group="api" />
      <apidata name="ExecutionContextManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionContextManager" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.GetService" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService``1" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.GetService" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.System#IDisposable#Dispose">
      <topicdata group="api" eiiName="IDisposable.Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.Object)">
      <topicdata group="api" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="TrackData" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContext.TrackData" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userDataKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userData">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityExecutionContextManager">
      <topicdata group="api" />
      <apidata name="ActivityExecutionContextManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CreateExecutionContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetExecutionContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetPersistedExecutionContext(System.Guid)" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.PersistedExecutionContexts" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityExecutionContextManager">
      <topicdata name="ActivityExecutionContextManager" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />
      <apidata name="ActivityExecutionContextManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext">
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)" />
          <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CreateExecutionContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetExecutionContext(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetPersistedExecutionContext(System.Guid)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityExecutionContextManager">
      <topicdata name="ActivityExecutionContextManager" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />
      <apidata name="ActivityExecutionContextManager" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.PersistedExecutionContexts" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext">
      <topicdata name="CompleteExecutionContext" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="CompleteExecutionContext" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="CompleteExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CompleteExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.ActivityExecutionContextManager.CompleteExecutionContext" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="childContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="forcePersist">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.CreateExecutionContext(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="CreateExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.ExecutionContexts">
      <topicdata group="api" />
      <apidata name="ExecutionContexts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionContexts" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetExecutionContext(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionContextManager.GetPersistedExecutionContext(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetPersistedExecutionContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="contextGuid">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionContextManager.PersistedExecutionContexts">
      <topicdata group="api" />
      <apidata name="PersistedExecutionContexts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PersistedExecutionContexts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionContextManager" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityExecutionResult">
      <topicdata group="api" />
      <apidata name="ActivityExecutionResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.None" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.Canceled" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.Compensated" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.Faulted" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionResult.Uninitialized" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.Canceled">
      <topicdata group="api" notopic="" />
      <apidata name="Canceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.Compensated">
      <topicdata group="api" notopic="" />
      <apidata name="Compensated" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.Succeeded">
      <topicdata group="api" notopic="" />
      <apidata name="Succeeded" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionResult.Uninitialized">
      <topicdata group="api" notopic="" />
      <apidata name="Uninitialized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityExecutionStatus">
      <topicdata group="api" />
      <apidata name="ActivityExecutionStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Executing" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Canceling" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Compensating" />
        <element api="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Faulting" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Canceling">
      <topicdata group="api" notopic="" />
      <apidata name="Canceling" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Closed">
      <topicdata group="api" notopic="" />
      <apidata name="Closed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Compensating">
      <topicdata group="api" notopic="" />
      <apidata name="Compensating" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Executing">
      <topicdata group="api" notopic="" />
      <apidata name="Executing" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Faulting">
      <topicdata group="api" notopic="" />
      <apidata name="Faulting" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.ActivityExecutionStatus.Initialized">
      <topicdata group="api" notopic="" />
      <apidata name="Initialized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs">
      <topicdata group="api" />
      <apidata name="ActivityExecutionStatusChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ToString" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.Activity" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionStatus" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs">
      <topicdata name="ActivityExecutionStatusChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      <apidata name="ActivityExecutionStatusChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs">
      <topicdata name="ActivityExecutionStatusChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      <apidata name="ActivityExecutionStatusChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.Activity" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionStatus" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.Activity">
      <topicdata group="api" />
      <apidata name="Activity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionResult">
      <topicdata group="api" />
      <apidata name="ExecutionResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionResult" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ExecutionStatus">
      <topicdata group="api" />
      <apidata name="ExecutionStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExecutionStatus" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.AddedActivityAction">
      <topicdata group="api" />
      <apidata name="AddedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.AddedActivityAction.#ctor">
          <element api="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
          <element api="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
        <element api="P:System.Workflow.ComponentModel.AddedActivityAction.AddedActivity" />
        <element api="P:System.Workflow.ComponentModel.AddedActivityAction.Index" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.AddedActivityAction">
      <topicdata name="AddedActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.AddedActivityAction" />
      <apidata name="AddedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.AddedActivityAction">
      <topicdata name="AddedActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.AddedActivityAction" />
      <apidata name="AddedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
        <element api="P:System.Workflow.ComponentModel.AddedActivityAction.AddedActivity" />
        <element api="P:System.Workflow.ComponentModel.AddedActivityAction.Index" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.AddedActivityAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
        <element api="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.AddedActivityAction.#ctor(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.AddedActivityAction.#ctor" />
      <parameters>
        <parameter name="compositeActivity">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </parameter>
        <parameter name="activityAdded">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.AddedActivityAction.AddedActivity">
      <topicdata group="api" />
      <apidata name="AddedActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedActivity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.AddedActivityAction.Index">
      <topicdata group="api" />
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AddedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute">
      <topicdata group="api" />
      <apidata name="AlternateFlowActivityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute">
      <topicdata name="AlternateFlowActivityAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" />
      <apidata name="AlternateFlowActivityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute">
      <topicdata name="AlternateFlowActivityAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" />
      <apidata name="AlternateFlowActivityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.AlternateFlowActivityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <topicdata group="api" />
      <apidata name="CancellationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.CancellationHandler.bmp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <topicdata name="CancellationHandlerActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      <apidata name="CancellationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <topicdata name="CancellationHandlerActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      <apidata name="CancellationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.CancellationHandlerActivity">
      <topicdata name="CancellationHandlerActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      <apidata name="CancellationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CancellationHandlerActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CancellationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <topicdata group="api" />
      <apidata name="CompensatableTransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <topicdata name="CompensatableTransactionScopeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      <apidata name="CompensatableTransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <topicdata name="CompensatableTransactionScopeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      <apidata name="CompensatableTransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity">
      <topicdata name="CompensatableTransactionScopeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      <apidata name="CompensatableTransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.System#Workflow#ComponentModel#ICompensatableActivity#Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" eiiName="ICompensatableActivity.Compensate" />
      <apidata name="Compensate" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
          <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity.TransactionOptions">
      <topicdata group="api" />
      <apidata name="TransactionOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionOptions" />
      <setter name="set_TransactionOptions" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.ComponentModel.CompensateActivity">
      <topicdata group="api" />
      <apidata name="CompensateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.CompensateActivity.TargetActivityNameProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensateActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.CompensateActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompensateActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Compensate.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.CompensateActivity">
      <topicdata name="CompensateActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.CompensateActivity" />
      <apidata name="CompensateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompensateActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.CompensateActivity">
      <topicdata name="CompensateActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.CompensateActivity" />
      <apidata name="CompensateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.CompensateActivity">
      <topicdata name="CompensateActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.CompensateActivity" />
      <apidata name="CompensateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.CompensateActivity">
      <topicdata name="CompensateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.CompensateActivity" />
      <apidata name="CompensateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.CompensateActivity.TargetActivityNameProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CompensateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.CompensateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensateActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.CompensateActivity.TargetActivityName">
      <topicdata group="api" />
      <apidata name="TargetActivityName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetActivityName" />
      <setter name="set_TargetActivityName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.CompensateActivity.TargetActivityNameProperty">
      <topicdata group="api" />
      <apidata name="TargetActivityNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <topicdata group="api" />
      <apidata name="CompensationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Compensation.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <topicdata name="CompensationHandlerActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      <apidata name="CompensationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <topicdata name="CompensationHandlerActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      <apidata name="CompensationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.CompensationHandlerActivity">
      <topicdata name="CompensationHandlerActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      <apidata name="CompensationHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompensationHandlerActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompensationHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.CompositeActivity">
      <topicdata group="api" />
      <apidata name="CompositeActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
          <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
          <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
          <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
          <type api="T:System.Workflow.Activities.StateActivity" ref="true" />
          <type api="T:System.Workflow.Activities.ReplicatorActivity" ref="true" />
          <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Serialization.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Activities</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityCodeGeneratorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityCodeGenerator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Compiler.CompositeActivityValidator" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.CompositeActivity">
      <topicdata name="CompositeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.CompositeActivity" />
      <apidata name="CompositeActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="M:System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Invoke">
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)" />
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.TrackData">
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)" />
        <element api="Overload:System.Workflow.ComponentModel.CompositeActivity.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.CompositeActivity">
      <topicdata name="CompositeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.CompositeActivity" />
      <apidata name="CompositeActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.Activity.WorkflowInstanceId" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.CompositeActivity">
      <topicdata name="CompositeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.CompositeActivity" />
      <apidata name="CompositeActivity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CompositeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.CompositeActivity.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.Collections.Generic.IEnumerable{System.Workflow.ComponentModel.Activity})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
      <parameters>
        <parameter name="children">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.CompositeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.CompositeActivity.Activities">
      <topicdata group="api" />
      <apidata name="Activities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Activities" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)">
      <topicdata group="api" />
      <apidata name="ApplyWorkflowChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="workflowChanges">
          <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities">
      <topicdata group="api" />
      <apidata name="CanModifyActivities" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanModifyActivities" />
      <setter name="set_CanModifyActivities" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.CompositeActivity.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities">
      <topicdata group="api" />
      <apidata name="EnabledActivities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnabledActivities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="GetDynamicActivities" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleFault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeAdd" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="addedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="OnActivityChangeRemove" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
        <parameter name="removedActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnActivityExecutionContextLoad" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="OnActivityExecutionContextUnload" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnListChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="OnWorkflowChangesCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="rootContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)">
      <topicdata group="api" />
      <apidata name="Uninitialize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="provider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.DependencyObject">
      <topicdata group="api" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.ContextToken" ref="true" />
          <type api="T:System.Workflow.Activities.ChannelToken" ref="true" />
          <type api="T:System.Workflow.Activities.OperationInfoBase" ref="true" />
          <type api="T:System.Workflow.Activities.OperationParameterInfo" ref="true" />
          <type api="T:System.Workflow.Activities.WorkflowServiceAttributes" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleSetReference" ref="true" />
          <type api="T:System.Workflow.Runtime.CorrelationToken" ref="true" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.ActivityCondition" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IComponent" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.#ctor" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.DependencyObject.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.DependencyObject.Dispose">
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
          <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.DependencyObject">
      <topicdata name="DependencyObject" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.DependencyObject" />
      <apidata name="DependencyObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.DependencyObject.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name="AddHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyEvent">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyObject.DesignMode">
      <topicdata group="api" />
      <apidata name="DesignMode" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DesignMode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.DependencyObject.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Workflow.ComponentModel.DependencyObject.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetInvocationList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="dependencyEvent">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties">
      <topicdata group="api" />
      <apidata name="InitializeProperties" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="IsBindingSet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)">
      <topicdata group="api" />
      <apidata name="MetaEquals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject">
      <topicdata group="api" />
      <apidata name="ParentDependencyObject" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParentDependencyObject" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name="RemoveHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyEvent">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)">
      <topicdata group="api" />
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)">
      <topicdata group="api" />
      <apidata name="SetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="bind">
          <type api="T:System.Workflow.ComponentModel.ActivityBind" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name="SetReadOnlyPropertyValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed">
      <topicdata group="api" eiiName="IComponent.Disposed" />
      <apidata name="Disposed" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.IComponent.Disposed" />
      <remover name="remove_System.ComponentModel.IComponent.Disposed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.IComponent.Disposed">
          <type api="T:System.ComponentModel.IComponent" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyObject.UserData">
      <topicdata group="api" />
      <apidata name="UserData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserData" />
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.ComponentModel.DependencyProperty">
      <topicdata group="api" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.FromName(System.String,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.FromType(System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.GetHashCode" />
        <element api="Overload:System.Workflow.ComponentModel.DependencyProperty.Register">
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached">
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.ToString" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.DefaultMetadata" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.IsEvent" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.Name" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.PropertyType" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.DependencyProperty">
      <topicdata name="DependencyProperty" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.FromName(System.String,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.FromType(System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.GetHashCode" />
        <element api="Overload:System.Workflow.ComponentModel.DependencyProperty.Register">
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached">
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
          <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.DependencyProperty">
      <topicdata name="DependencyProperty" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.DependencyProperty" />
      <apidata name="DependencyProperty" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.DefaultMetadata" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.IsEvent" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.Name" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.PropertyType" />
        <element api="P:System.Workflow.ComponentModel.DependencyProperty.ValidatorType" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.DependencyProperty.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached">
      <topicdata name="RegisterAttached" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RegisterAttached" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)" />
        <element api="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.DefaultMetadata">
      <topicdata group="api" />
      <apidata name="DefaultMetadata" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultMetadata" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.FromName(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="FromName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.FromType(System.Type)">
      <topicdata group="api" />
      <apidata name="FromType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached">
      <topicdata group="api" />
      <apidata name="IsAttached" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAttached" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.IsEvent">
      <topicdata group="api" />
      <apidata name="IsEvent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEvent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.OwnerType">
      <topicdata group="api" />
      <apidata name="OwnerType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OwnerType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.PropertyType">
      <topicdata group="api" />
      <apidata name="PropertyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.DependencyProperty.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.Register(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.DependencyProperty.Register" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultMetadata">
          <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
      <topicdata group="api" />
      <apidata name="RegisterAttached" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata)">
      <topicdata group="api" />
      <apidata name="RegisterAttached" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultMetadata">
          <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Workflow.ComponentModel.PropertyMetadata,System.Type)">
      <topicdata group="api" />
      <apidata name="RegisterAttached" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="propertyType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="ownerType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="defaultMetadata">
          <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
        </parameter>
        <parameter name="validatorType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.DependencyProperty.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.DependencyProperty.ValidatorType">
      <topicdata group="api" />
      <apidata name="ValidatorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidatorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.DependencyPropertyOptions">
      <topicdata group="api" />
      <apidata name="DependencyPropertyOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Default" />
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly" />
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Optional" />
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata" />
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized" />
        <element api="F:System.Workflow.ComponentModel.DependencyPropertyOptions.DelegateProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Default">
      <topicdata group="api" notopic="" />
      <apidata name="Default" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.DelegateProperty">
      <topicdata group="api" notopic="" />
      <apidata name="DelegateProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Metadata">
      <topicdata group="api" notopic="" />
      <apidata name="Metadata" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.NonSerialized">
      <topicdata group="api" notopic="" />
      <apidata name="NonSerialized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.Optional">
      <topicdata group="api" notopic="" />
      <apidata name="Optional" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.DependencyPropertyOptions.ReadOnly">
      <topicdata group="api" notopic="" />
      <apidata name="ReadOnly" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <topicdata group="api" />
      <apidata name="FaultHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.FaultHandlerActivity.FaultTypeProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.Fault" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Exception.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <topicdata name="FaultHandlerActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      <apidata name="FaultHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <topicdata name="FaultHandlerActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      <apidata name="FaultHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.Fault" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType" />
        <element api="P:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <topicdata name="FaultHandlerActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      <apidata name="FaultHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.FaultHandlerActivity">
      <topicdata name="FaultHandlerActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      <apidata name="FaultHandlerActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.FaultHandlerActivity.FaultTypeProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.FaultHandlerActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.FaultHandlerActivity.Fault">
      <topicdata group="api" />
      <apidata name="Fault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Fault" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.FaultHandlerActivity.FaultType">
      <topicdata group="api" />
      <apidata name="FaultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FaultType" />
      <setter name="set_FaultType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.FaultHandlerActivity.FaultTypeProperty">
      <topicdata group="api" />
      <apidata name="FaultTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <topicdata group="api" eiiName="ITypeFilterProvider.CanFilterType" />
      <apidata name="CanFilterType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <topicdata group="api" eiiName="ITypeFilterProvider.FilterDescription" />
      <apidata name="FilterDescription" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlerActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <topicdata group="api" />
      <apidata name="FaultHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Exceptions.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.AlternateFlowActivityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <topicdata name="FaultHandlersActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      <apidata name="FaultHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <topicdata name="FaultHandlersActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      <apidata name="FaultHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.FaultHandlersActivity">
      <topicdata name="FaultHandlersActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      <apidata name="FaultHandlersActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.FaultHandlersActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.FaultHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.GetValueOverride">
      <topicdata group="api" />
      <apidata name="GetValueOverride" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.IActivityEventListener`1">
      <topicdata group="api" />
      <apidata name="IActivityEventListener" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.EventArgs" ref="true" />
          </constrained>
        </template>
      </templates>
      <implementors>
        <type api="T:System.Workflow.Activities.IfElseActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ConditionedActivityGroup" ref="true" />
        <type api="T:System.Workflow.Activities.EventHandlingScopeActivity" ref="true" />
        <type api="T:System.Workflow.Activities.EventHandlersActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ListenActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ParallelActivity" ref="true" />
        <type api="T:System.Workflow.Activities.SequenceActivity" ref="true" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
        <type api="T:System.Workflow.Activities.WhileActivity" ref="true" />
        <type api="T:System.Workflow.Activities.DelayActivity" ref="true" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
        <type api="T:System.Workflow.Activities.ReceiveActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.CompensateActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.CompensationHandlerActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.CancellationHandlerActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlersActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.IActivityEventListener`1">
      <topicdata name="IActivityEventListener" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.IActivityEventListener`1" />
      <apidata name="IActivityEventListener" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.EventArgs" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
      <topicdata group="api" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <template name="T" index="0" api="T:System.Workflow.ComponentModel.IActivityEventListener`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ICompensatableActivity">
      <topicdata group="api" />
      <apidata name="ICompensatableActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Workflow.Activities.CompensatableSequenceActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.CompensatableTransactionScopeActivity" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ICompensatableActivity">
      <topicdata name="ICompensatableActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ICompensatableActivity" />
      <apidata name="ICompensatableActivity" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ICompensatableActivity.Compensate(System.Workflow.ComponentModel.ActivityExecutionContext)">
      <topicdata group="api" />
      <apidata name="Compensate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="executionContext">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ICompensatableActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
      <topicdata group="api" />
      <apidata name="IDynamicPropertyTypeProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.Workflow.Activities.InvokeWebServiceActivity" ref="true" />
        <type api="T:System.Workflow.Activities.WebServiceInputActivity" ref="true" />
        <type api="T:System.Workflow.Activities.WebServiceOutputActivity" ref="true" />
        <type api="T:System.Workflow.Activities.HandleExternalEventActivity" ref="true" />
        <type api="T:System.Workflow.Activities.CallExternalMethodActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
        <type api="T:System.Workflow.ComponentModel.FaultHandlerActivity" ref="true" />
      </implementors>
      <elements>
        <element api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
      <topicdata name="IDynamicPropertyTypeProvider" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
      <apidata name="IDynamicPropertyTypeProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.IStartWorkflow">
      <topicdata group="api" />
      <apidata name="IStartWorkflow" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.IStartWorkflow">
      <topicdata name="IStartWorkflow" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.IStartWorkflow" />
      <apidata name="IStartWorkflow" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IStartWorkflow" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.IStartWorkflow.StartWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="StartWorkflow" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="workflowType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="namedArgumentValues">
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.IStartWorkflow" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.PersistOnCloseAttribute">
      <topicdata group="api" />
      <apidata name="PersistOnCloseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.PersistOnCloseAttribute">
      <topicdata name="PersistOnCloseAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" />
      <apidata name="PersistOnCloseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.PersistOnCloseAttribute">
      <topicdata name="PersistOnCloseAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" />
      <apidata name="PersistOnCloseAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PersistOnCloseAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.PropertyMetadata">
      <topicdata group="api" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor">
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Attribute[])" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions)" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object)" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Attribute[])" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions)" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride)" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride,System.Attribute[])" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.OnApply(System.Workflow.ComponentModel.DependencyProperty,System.Type)" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.GetValueOverride" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsMetaProperty" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsNonSerialized" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsReadOnly" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.Options" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.SetValueOverride" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.PropertyMetadata">
      <topicdata name="PropertyMetadata" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes" />
          <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.OnApply(System.Workflow.ComponentModel.DependencyProperty,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.PropertyMetadata">
      <topicdata name="PropertyMetadata" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.PropertyMetadata" />
      <apidata name="PropertyMetadata" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.GetValueOverride" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsMetaProperty" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsNonSerialized" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsReadOnly" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.Options" />
        <element api="P:System.Workflow.ComponentModel.PropertyMetadata.SetValueOverride" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Attribute[])" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions)" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Attribute[])" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions)" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride)" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride,System.Attribute[])" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
      <topicdata name="GetAttributes" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes" />
        <element api="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
        <parameter name="getValueOverride">
          <type api="T:System.Workflow.ComponentModel.GetValueOverride" ref="true" />
        </parameter>
        <parameter name="setValueOverride">
          <type api="T:System.Workflow.ComponentModel.SetValueOverride" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Object,System.Workflow.ComponentModel.DependencyPropertyOptions,System.Workflow.ComponentModel.GetValueOverride,System.Workflow.ComponentModel.SetValueOverride,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="defaultValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
        <parameter name="getValueOverride">
          <type api="T:System.Workflow.ComponentModel.GetValueOverride" ref="true" />
        </parameter>
        <parameter name="setValueOverride">
          <type api="T:System.Workflow.ComponentModel.SetValueOverride" ref="true" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.#ctor(System.Workflow.ComponentModel.DependencyPropertyOptions,System.Attribute[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.#ctor" />
      <parameters>
        <parameter name="options">
          <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
        </parameter>
        <parameter name="attributes" params="true">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.DefaultValue">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultValue" />
      <setter name="set_DefaultValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Attribute" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes(System.Type)">
      <topicdata group="api" />
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Workflow.ComponentModel.PropertyMetadata.GetAttributes" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="attributeType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Attribute" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.GetValueOverride">
      <topicdata group="api" />
      <apidata name="GetValueOverride" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GetValueOverride" />
      <setter name="set_GetValueOverride" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.GetValueOverride" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.IsMetaProperty">
      <topicdata group="api" />
      <apidata name="IsMetaProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMetaProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.IsNonSerialized">
      <topicdata group="api" />
      <apidata name="IsNonSerialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNonSerialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.IsSealed">
      <topicdata group="api" />
      <apidata name="IsSealed" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSealed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.PropertyMetadata.OnApply(System.Workflow.ComponentModel.DependencyProperty,System.Type)">
      <topicdata group="api" />
      <apidata name="OnApply" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="dependencyProperty">
          <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Options" />
      <setter name="set_Options" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyPropertyOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.PropertyMetadata.SetValueOverride">
      <topicdata group="api" />
      <apidata name="SetValueOverride" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SetValueOverride" />
      <setter name="set_SetValueOverride" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.SetValueOverride" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.PropertyMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.QueueEventArgs">
      <topicdata group="api" />
      <apidata name="QueueEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Workflow.ComponentModel.QueueEventArgs.QueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.QueueEventArgs">
      <topicdata name="QueueEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.QueueEventArgs" />
      <apidata name="QueueEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.QueueEventArgs" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.QueueEventArgs">
      <topicdata name="QueueEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.QueueEventArgs" />
      <apidata name="QueueEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.QueueEventArgs.QueueName" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.QueueEventArgs" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.QueueEventArgs.QueueName">
      <topicdata group="api" />
      <apidata name="QueueName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QueueName" />
      <returns>
        <type api="T:System.IComparable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.QueueEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.RemovedActivityAction">
      <topicdata group="api" />
      <apidata name="RemovedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Workflow.ComponentModel.RemovedActivityAction.#ctor">
          <element api="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
          <element api="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
        <element api="P:System.Workflow.ComponentModel.RemovedActivityAction.OriginalRemovedActivity" />
        <element api="P:System.Workflow.ComponentModel.RemovedActivityAction.RemovedActivityIndex" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.RemovedActivityAction">
      <topicdata name="RemovedActivityAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.RemovedActivityAction" />
      <apidata name="RemovedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.RemovedActivityAction">
      <topicdata name="RemovedActivityAction" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.RemovedActivityAction" />
      <apidata name="RemovedActivityAction" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.ActivityChangeAction.OwnerActivityDottedPath" />
        <element api="P:System.Workflow.ComponentModel.RemovedActivityAction.OriginalRemovedActivity" />
        <element api="P:System.Workflow.ComponentModel.RemovedActivityAction.RemovedActivityIndex" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.RemovedActivityAction.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
        <element api="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.RemovedActivityAction.#ctor(System.Int32,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.RemovedActivityAction.#ctor" />
      <parameters>
        <parameter name="removedActivityIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="originalActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
        <parameter name="clonedParentActivity">
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.RemovedActivityAction.OriginalRemovedActivity">
      <topicdata group="api" />
      <apidata name="OriginalRemovedActivity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalRemovedActivity" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Hidden" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.RemovedActivityAction.RemovedActivityIndex">
      <topicdata group="api" />
      <apidata name="RemovedActivityIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedActivityIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.RemovedActivityAction" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Visible" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.ComponentModel.SetValueOverride">
      <topicdata group="api" />
      <apidata name="SetValueOverride" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.SuspendActivity">
      <topicdata group="api" />
      <apidata name="SuspendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.SuspendActivity.ErrorProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.SuspendActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.SuspendActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.SuspendActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.SuspendActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.SuspendActivity.Error" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Suspend.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.SuspendActivity">
      <topicdata name="SuspendActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.SuspendActivity" />
      <apidata name="SuspendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.SuspendActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.SuspendActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.SuspendActivity">
      <topicdata name="SuspendActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.SuspendActivity" />
      <apidata name="SuspendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.SuspendActivity.Error" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.SuspendActivity">
      <topicdata name="SuspendActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.SuspendActivity" />
      <apidata name="SuspendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.SuspendActivity">
      <topicdata name="SuspendActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.SuspendActivity" />
      <apidata name="SuspendActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.SuspendActivity.ErrorProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.SuspendActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.SuspendActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.SuspendActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.SuspendActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.SuspendActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.SuspendActivity.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Error" />
      <setter name="set_Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.SuspendActivity.ErrorProperty">
      <topicdata group="api" />
      <apidata name="ErrorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SuspendActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <topicdata group="api" />
      <apidata name="SynchronizationScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.SynchronizationScopeActivity.SynchronizationHandles" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <topicdata name="SynchronizationScopeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      <apidata name="SynchronizationScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <topicdata name="SynchronizationScopeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      <apidata name="SynchronizationScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.SynchronizationScopeActivity.SynchronizationHandles" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.SynchronizationScopeActivity">
      <topicdata name="SynchronizationScopeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      <apidata name="SynchronizationScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.SynchronizationScopeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.SynchronizationScopeActivity.SynchronizationHandles">
      <topicdata group="api" />
      <apidata name="SynchronizationHandles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizationHandles" />
      <setter name="set_SynchronizationHandles" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.SynchronizationScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.SynchronizationScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.TerminateActivity">
      <topicdata group="api" />
      <apidata name="TerminateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.TerminateActivity.ErrorProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.TerminateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.TerminateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.TerminateActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.TerminateActivity.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.TerminateActivity.Error" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Terminate.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.TerminateActivity">
      <topicdata name="TerminateActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.TerminateActivity" />
      <apidata name="TerminateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.TerminateActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.TerminateActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.TerminateActivity">
      <topicdata name="TerminateActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.TerminateActivity" />
      <apidata name="TerminateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.TerminateActivity.Error" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.TerminateActivity">
      <topicdata name="TerminateActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.TerminateActivity" />
      <apidata name="TerminateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.TerminateActivity">
      <topicdata name="TerminateActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.TerminateActivity" />
      <apidata name="TerminateActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.TerminateActivity.ErrorProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.TerminateActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.TerminateActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.TerminateActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.TerminateActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.TerminateActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.TerminateActivity.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Error" />
      <setter name="set_Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.TerminateActivity.ErrorProperty">
      <topicdata group="api" />
      <apidata name="ErrorProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TerminateActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.ThrowActivity">
      <topicdata group="api" />
      <apidata name="ThrowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
        <element api="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.ThrowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.ThrowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.ThrowActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.Fault" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Throw.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.ThrowActivity">
      <topicdata name="ThrowActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.ThrowActivity" />
      <apidata name="ThrowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.ThrowActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.ThrowActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.ThrowActivity">
      <topicdata name="ThrowActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.ThrowActivity" />
      <apidata name="ThrowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.Fault" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.FaultType" />
        <element api="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.ThrowActivity">
      <topicdata name="ThrowActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.ThrowActivity" />
      <apidata name="ThrowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.ThrowActivity">
      <topicdata name="ThrowActivity" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.ThrowActivity" />
      <apidata name="ThrowActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty" />
        <element api="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.ThrowActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ThrowActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ThrowActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.ThrowActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ThrowActivity.Fault">
      <topicdata group="api" />
      <apidata name="Fault" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Fault" />
      <setter name="set_Fault" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.ThrowActivity.FaultProperty">
      <topicdata group="api" />
      <apidata name="FaultProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.Workflow.ComponentModel.ThrowActivity.FaultType">
      <topicdata group="api" />
      <apidata name="FaultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FaultType" />
      <setter name="set_FaultType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.Design.TypeBrowserEditor" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Drawing.Design.UITypeEditor" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.ThrowActivity.FaultTypeProperty">
      <topicdata group="api" />
      <apidata name="FaultTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
      <topicdata group="api" eiiName="ITypeFilterProvider.CanFilterType" />
      <apidata name="CanFilterType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.Design.ITypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
      <topicdata group="api" eiiName="ITypeFilterProvider.FilterDescription" />
      <apidata name="FilterDescription" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Workflow.ComponentModel.Design.ITypeFilterProvider.FilterDescription">
          <type api="T:System.Workflow.ComponentModel.Design.ITypeFilterProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetAccessType" />
      <apidata name="GetAccessType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.AccessTypes" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.ThrowActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
      <topicdata group="api" eiiName="IDynamicPropertyTypeProvider.GetPropertyType" />
      <apidata name="GetPropertyType" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)">
          <type api="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.ThrowActivity" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <topicdata group="api" />
      <apidata name="TransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" contentProperty="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
          <specialization>
            <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor">
          <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
          <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Drawing.ToolboxBitmapAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Resources.Sequence.png</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Workflow.ComponentModel.PersistOnCloseAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <topicdata name="TransactionScopeActivity" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      <apidata name="TransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Workflow.ComponentModel.Activity.Clone" />
        <element api="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.GetActivityByName">
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)" />
          <element api="M:System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.Save">
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)" />
          <element api="M:System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)" />
        </element>
        <element api="M:System.Workflow.ComponentModel.Activity.ToString" />
        <element api="M:System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <topicdata name="TransactionScopeActivity" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      <apidata name="TransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.Activity.Description" />
        <element api="P:System.Workflow.ComponentModel.Activity.Enabled" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionResult" />
        <element api="P:System.Workflow.ComponentModel.Activity.ExecutionStatus" />
        <element api="P:System.Workflow.ComponentModel.Activity.IsDynamicActivity" />
        <element api="P:System.Workflow.ComponentModel.Activity.Name" />
        <element api="P:System.Workflow.ComponentModel.Activity.Parent" />
        <element api="P:System.Workflow.ComponentModel.Activity.QualifiedName" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.Activities" />
        <element api="P:System.Workflow.ComponentModel.CompositeActivity.EnabledActivities" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.TransactionScopeActivity">
      <topicdata name="TransactionScopeActivity" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      <apidata name="TransactionScopeActivity" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.Activity.Canceling" />
        <element api="E:System.Workflow.ComponentModel.Activity.Closed" />
        <element api="E:System.Workflow.ComponentModel.Activity.Compensating" />
        <element api="E:System.Workflow.ComponentModel.Activity.Executing" />
        <element api="E:System.Workflow.ComponentModel.Activity.Faulting" />
        <element api="E:System.Workflow.ComponentModel.Activity.StatusChanged" />
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
        <element api="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.TransactionScopeActivity.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.TransactionScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
      <topicdata group="api" eiiName="IActivityEventListener`1.OnEvent" />
      <apidata name="OnEvent" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)">
          <type api="T:System.Workflow.ComponentModel.IActivityEventListener`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.TransactionScopeActivity.TransactionOptions">
      <topicdata group="api" />
      <apidata name="TransactionOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionOptions" />
      <setter name="set_TransactionOptions" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.TransactionScopeActivity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.DesignerSerializationVisibility" ref="false" />
            <enumValue>
              <field name="Content" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowChangeAction">
      <topicdata group="api" />
      <apidata name="WorkflowChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Workflow.Activities.Rules.RuleConditionChangeAction" ref="true" />
          <type api="T:System.Workflow.Activities.Rules.RuleSetChangeAction" ref="true" />
          <type api="T:System.Workflow.ComponentModel.ActivityChangeAction" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.#ctor" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowChangeAction">
      <topicdata name="WorkflowChangeAction" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowChangeAction" />
      <apidata name="WorkflowChangeAction" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChangeAction.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChangeAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ApplyTo" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="rootActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name="ValidateChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="activity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChangeAction" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowChanges">
      <topicdata group="api" />
      <apidata name="WorkflowChanges" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
        <element api="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowChanges">
      <topicdata name="WorkflowChanges" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowChanges" />
      <apidata name="WorkflowChanges" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowChanges.Validate" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.WorkflowChanges">
      <topicdata name="WorkflowChanges" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.WorkflowChanges" />
      <apidata name="WorkflowChanges" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.WorkflowChanges">
      <topicdata name="WorkflowChanges" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.WorkflowChanges" />
      <apidata name="WorkflowChanges" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChanges.#ctor(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rootActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.WorkflowChanges.ConditionProperty">
      <topicdata group="api" />
      <apidata name="ConditionProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChanges.GetCondition(System.Object)">
      <topicdata group="api" />
      <apidata name="GetCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChanges.SetCondition(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetCondition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dependencyObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.WorkflowChanges.TransientWorkflow">
      <topicdata group="api" />
      <apidata name="TransientWorkflow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransientWorkflow" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.CompositeActivity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowChanges.Validate">
      <topicdata group="api" />
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.Compiler.ValidationErrorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowChanges" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <topicdata group="api" />
      <apidata name="WorkflowParameterBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterNameProperty" />
        <element api="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ValueProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor">
          <element api="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
          <element api="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor(System.String)" />
        </element>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" />
        <element api="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <topicdata name="WorkflowParameterBinding" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      <apidata name="WorkflowParameterBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <topicdata name="WorkflowParameterBinding" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      <apidata name="WorkflowParameterBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName" />
        <element api="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <topicdata name="WorkflowParameterBinding" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      <apidata name="WorkflowParameterBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.WorkflowParameterBinding">
      <topicdata name="WorkflowParameterBinding" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      <apidata name="WorkflowParameterBinding" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterNameProperty" />
        <element api="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ValueProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
        <element api="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.WorkflowParameterBinding.#ctor" />
      <parameters>
        <parameter name="parameterName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterName">
      <topicdata group="api" />
      <apidata name="ParameterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ParameterName" />
      <setter name="set_ParameterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ParameterNameProperty">
      <topicdata group="api" />
      <apidata name="ParameterNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.WorkflowParameterBinding.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <nullValue />
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.WorkflowParameterBinding.ValueProperty">
      <topicdata group="api" />
      <apidata name="ValueProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection">
      <topicdata group="api" />
      <apidata name="WorkflowParameterBindingCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Contains">
          <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
          <element api="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Remove">
          <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
          <element api="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.#ctor(System.Workflow.ComponentModel.Activity)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.GetItem(System.String)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Item">
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
          <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection">
      <topicdata name="WorkflowParameterBindingCollection" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />
      <apidata name="WorkflowParameterBindingCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Contains">
          <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
          <element api="M:System.Collections.ObjectModel.KeyedCollection`2.Contains(`0)" />
        </element>
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Remove">
          <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
          <element api="M:System.Collections.ObjectModel.KeyedCollection`2.Remove(`0)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.GetItem(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection">
      <topicdata name="WorkflowParameterBindingCollection" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />
      <apidata name="WorkflowParameterBindingCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Comparer" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.Item">
          <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
          <element api="P:System.Collections.ObjectModel.KeyedCollection`2.Item(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.#ctor(System.Workflow.ComponentModel.Activity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="ownerActivity">
          <type api="T:System.Workflow.ComponentModel.Activity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowParameterBindingCollection.GetItem(System.String)">
      <topicdata group="api" />
      <apidata name="GetItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowTerminatedException">
      <topicdata group="api" />
      <apidata name="WorkflowTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor">
          <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
          <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String)" />
          <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowTerminatedException">
      <topicdata name="WorkflowTerminatedException" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTerminatedException" />
      <apidata name="WorkflowTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.WorkflowTerminatedException">
      <topicdata name="WorkflowTerminatedException" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTerminatedException" />
      <apidata name="WorkflowTerminatedException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" />
      </containers>
    </api>
    <api id="Overload:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
        <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Workflow.ComponentModel.WorkflowTerminatedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTerminatedException" ref="true" />
      </containers>
    </api>
    <api id="T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <topicdata group="api" />
      <apidata name="WorkflowTransactionOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Workflow.ComponentModel.DependencyObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
        <element api="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevelProperty" />
        <element api="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDurationProperty" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel" />
        <element api="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <topicdata name="WorkflowTransactionOptions" group="list" subgroup="Methods" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      <apidata name="WorkflowTransactionOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
        <element api="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      </containers>
    </api>
    <api id="Properties.T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <topicdata name="WorkflowTransactionOptions" group="list" subgroup="Properties" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      <apidata name="WorkflowTransactionOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
      <elements>
        <element api="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
        <element api="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel" />
        <element api="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      </containers>
    </api>
    <api id="Events.T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <topicdata name="WorkflowTransactionOptions" group="list" subgroup="Events" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      <apidata name="WorkflowTransactionOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
      <elements>
        <element api="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      </containers>
    </api>
    <api id="Fields.T:System.Workflow.ComponentModel.WorkflowTransactionOptions">
      <topicdata name="WorkflowTransactionOptions" group="list" subgroup="Fields" typeTopicId="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      <apidata name="WorkflowTransactionOptions" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor" />
      <elements>
        <element api="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevelProperty" />
        <element api="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDurationProperty" />
      </elements>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" />
      </containers>
    </api>
    <api id="M:System.Workflow.ComponentModel.WorkflowTransactionOptions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevel">
      <topicdata group="api" />
      <apidata name="IsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsolationLevel" />
      <setter name="set_IsolationLevel" />
      <returns>
        <type api="T:System.Transactions.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </containers>
    </api>
    <api id="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.IsolationLevelProperty">
      <topicdata group="api" />
      <apidata name="IsolationLevelProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </containers>
    </api>
    <api id="P:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDuration">
      <topicdata group="api" />
      <apidata name="TimeoutDuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TimeoutDuration" />
      <setter name="set_TimeoutDuration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DefaultValueAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.TimeSpan" ref="false" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0:0:30</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="F:System.Workflow.ComponentModel.WorkflowTransactionOptions.TimeoutDurationProperty">
      <topicdata group="api" />
      <apidata name="TimeoutDurationProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Workflow.ComponentModel.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Workflow.ComponentModel" module="System.Workflow.ComponentModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Workflow.ComponentModel" />
        <type api="T:System.Workflow.ComponentModel.WorkflowTransactionOptions" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>