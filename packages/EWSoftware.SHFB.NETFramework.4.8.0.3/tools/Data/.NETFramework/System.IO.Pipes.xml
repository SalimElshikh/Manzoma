<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.8.3761.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.IO.Pipes">
      <topicdata group="api" />
      <apidata name="System.IO.Pipes" group="namespace" />
      <elements>
        <element api="T:System.IO.Pipes.PipeDirection" />
        <element api="T:System.IO.Pipes.PipeTransmissionMode" />
        <element api="T:System.IO.Pipes.PipeOptions" />
        <element api="T:System.IO.Pipes.AnonymousPipeServerStream" />
        <element api="T:System.IO.Pipes.AnonymousPipeClientStream" />
        <element api="T:System.IO.Pipes.PipeStreamImpersonationWorker" />
        <element api="T:System.IO.Pipes.NamedPipeServerStream" />
        <element api="T:System.IO.Pipes.NamedPipeClientStream" />
        <element api="T:System.IO.Pipes.PipeStream" />
        <element api="T:System.IO.Pipes.PipeAccessRights" />
        <element api="T:System.IO.Pipes.PipeAccessRule" />
        <element api="T:System.IO.Pipes.PipeAuditRule" />
        <element api="T:System.IO.Pipes.PipeSecurity" />
      </elements>
    </api>
    <api id="T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata group="api" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor">
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
        </element>
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata name="AnonymousPipeClientStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeClientStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.AnonymousPipeClientStream">
      <topicdata name="AnonymousPipeClientStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.AnonymousPipeClientStream" />
      <apidata name="AnonymousPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="pipeHandleAsString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeClientStream.#ctor" />
      <parameters>
        <parameter name="pipeHandleAsString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.ReadMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata set="true" />
      <setter name="set_ReadMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TransmissionMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata group="api" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
          <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
        </element>
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata name="AnonymousPipeServerStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.AnonymousPipeServerStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.AnonymousPipeServerStream">
      <topicdata name="AnonymousPipeServerStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.AnonymousPipeServerStream" />
      <apidata name="AnonymousPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <elements>
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
        <element api="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
        <element api="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="serverSafePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
        <parameter name="clientSafePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle">
      <topicdata group="api" />
      <apidata name="ClientSafePipeHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientSafePipeHandle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle">
      <topicdata group="api" />
      <apidata name="DisposeLocalCopyOfClientHandle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString">
      <topicdata group="api" />
      <apidata name="GetClientHandleAsString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.ReadMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata set="true" />
      <setter name="set_ReadMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Pipes.PipeStream.TransmissionMode">
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_TransmissionMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata group="api" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Finalize" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata name="NamedPipeClientStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Finalize" />
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeClientStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.NamedPipeClientStream">
      <topicdata name="NamedPipeClientStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.NamedPipeClientStream" />
      <apidata name="NamedPipeClientStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.Connect">
      <topicdata name="Connect" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Connect" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <topicdata name="ConnectAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ConnectAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)" />
        <element api="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isConnected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeAccessRights,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="desiredAccessRights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.#ctor(System.String,System.String,System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeOptions,System.Security.Principal.TokenImpersonationLevel,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeClientStream.#ctor" />
      <parameters>
        <parameter name="serverName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="impersonationLevel">
          <type api="T:System.Security.Principal.TokenImpersonationLevel" ref="false" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.Connect">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.Connect(System.Int32)">
      <topicdata group="api" />
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.Connect" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync">
      <topicdata group="api" />
      <apidata name="ConnectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32)">
      <topicdata group="api" />
      <apidata name="ConnectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ConnectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.ConnectAsync(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ConnectAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeClientStream.ConnectAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeClientStream.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.NamedPipeClientStream.NumberOfServerInstances">
      <topicdata group="api" />
      <apidata name="NumberOfServerInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NumberOfServerInstances">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata group="api" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Pipes.PipeStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor">
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
        </element>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Finalize" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
          <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.Finalize" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
          <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
          <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.NamedPipeServerStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" />
      </containers>
    </api>
    <api id="Fields.T:System.IO.Pipes.NamedPipeServerStream">
      <topicdata name="NamedPipeServerStream" group="list" subgroup="Fields" typeTopicId="T:System.IO.Pipes.NamedPipeServerStream" />
      <apidata name="NamedPipeServerStream" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <topicdata name="WaitForConnectionAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="WaitForConnectionAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
        <element api="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isConnected">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="safePipeHandle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.NamedPipeServerStream.#ctor" />
      <parameters>
        <parameter name="pipeName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="maxNumberOfServerInstances">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="options">
          <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
        </parameter>
        <parameter name="inBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
        <parameter name="inheritability">
          <type api="T:System.IO.HandleInheritability" ref="false" />
        </parameter>
        <parameter name="additionalAccessRights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.Disconnect">
      <topicdata group="api" />
      <apidata name="Disconnect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.Finalize">
      <topicdata group="api" />
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName">
      <topicdata group="api" />
      <apidata name="GetImpersonationUserName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">
      <topicdata group="api" />
      <apidata name="MaxAllowedServerInstances" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>-1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)">
      <topicdata group="api" />
      <apidata name="RunAsClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="impersonationWorker">
          <type api="T:System.IO.Pipes.PipeStreamImpersonationWorker" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection">
      <topicdata group="api" />
      <apidata name="WaitForConnection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync">
      <topicdata group="api" />
      <apidata name="WaitForConnectionAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitForConnectionAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadData" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteData" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes" />
        <element api="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Delete" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadPermissions" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" />
        <element api="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Synchronize" />
        <element api="F:System.IO.Pipes.PipeAccessRights.FullControl" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Read" />
        <element api="F:System.IO.Pipes.PipeAccessRights.Write" />
        <element api="F:System.IO.Pipes.PipeAccessRights.ReadWrite" />
        <element api="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity">
      <topicdata group="api" notopic="" />
      <apidata name="AccessSystemSecurity" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>16777216</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ChangePermissions">
      <topicdata group="api" notopic="" />
      <apidata name="ChangePermissions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.CreateNewInstance">
      <topicdata group="api" notopic="" />
      <apidata name="CreateNewInstance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.FullControl">
      <topicdata group="api" notopic="" />
      <apidata name="FullControl" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>2032031</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Read">
      <topicdata group="api" notopic="" />
      <apidata name="Read" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131209</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="ReadAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadData">
      <topicdata group="api" notopic="" />
      <apidata name="ReadData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadExtendedAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="ReadExtendedAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadPermissions">
      <topicdata group="api" notopic="" />
      <apidata name="ReadPermissions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.ReadWrite">
      <topicdata group="api" notopic="" />
      <apidata name="ReadWrite" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>131483</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Synchronize">
      <topicdata group="api" notopic="" />
      <apidata name="Synchronize" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>1048576</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.TakeOwnership">
      <topicdata group="api" notopic="" />
      <apidata name="TakeOwnership" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.Write">
      <topicdata group="api" notopic="" />
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>274</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="WriteAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>256</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteData">
      <topicdata group="api" notopic="" />
      <apidata name="WriteData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeAccessRights.WriteExtendedAttributes">
      <topicdata group="api" notopic="" />
      <apidata name="WriteExtendedAttributes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeAccessRule">
      <topicdata group="api" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.PipeAccessRule.#ctor">
          <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
          <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeAccessRule">
      <topicdata name="PipeAccessRule" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeAccessRule" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeAccessRule">
      <topicdata name="PipeAccessRule" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeAccessRule" />
      <apidata name="PipeAccessRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AccessRule.AccessControlType" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeAccessRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
        <element api="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAccessRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeAccessRule.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PipeAccessRights" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeAuditRule">
      <topicdata group="api" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
          <type api="T:System.Security.AccessControl.AuthorizationRule" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.PipeAuditRule.#ctor">
          <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
          <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeAuditRule">
      <topicdata name="PipeAuditRule" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeAuditRule" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeAuditRule">
      <topicdata name="PipeAuditRule" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeAuditRule" />
      <apidata name="PipeAuditRule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights" />
        <element api="P:System.Security.AccessControl.AuditRule.AuditFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IdentityReference" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.InheritanceFlags" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.IsInherited" />
        <element api="P:System.Security.AccessControl.AuthorizationRule.PropagationFlags" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeAuditRule.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
        <element api="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeAuditRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeAuditRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.IO.Pipes.PipeAuditRule.#ctor" />
      <parameters>
        <parameter name="identity">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rights">
          <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeAuditRule.PipeAccessRights">
      <topicdata group="api" />
      <apidata name="PipeAccessRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PipeAccessRights" />
      <returns>
        <type api="T:System.IO.Pipes.PipeAccessRights" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeDirection">
      <topicdata group="api" />
      <apidata name="PipeDirection" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.IO.Pipes.PipeDirection.In" />
        <element api="F:System.IO.Pipes.PipeDirection.Out" />
        <element api="F:System.IO.Pipes.PipeDirection.InOut" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.In">
      <topicdata group="api" notopic="" />
      <apidata name="In" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.InOut">
      <topicdata group="api" notopic="" />
      <apidata name="InOut" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeDirection.Out">
      <topicdata group="api" notopic="" />
      <apidata name="Out" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeOptions">
      <topicdata group="api" />
      <apidata name="PipeOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.IO.Pipes.PipeOptions.None" />
        <element api="F:System.IO.Pipes.PipeOptions.WriteThrough" />
        <element api="F:System.IO.Pipes.PipeOptions.Asynchronous" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.Asynchronous">
      <topicdata group="api" notopic="" />
      <apidata name="Asynchronous" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>1073741824</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeOptions.WriteThrough">
      <topicdata group="api" notopic="" />
      <apidata name="WriteThrough" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </returns>
      <value>-2147483648</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeOptions" ref="false" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeSecurity">
      <topicdata group="api" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Security.AccessControl.NativeObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.CommonObjectSecurity" ref="true" />
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.IO.Pipes.PipeSecurity.#ctor" />
        <element api="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.Persist">
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeSecurity">
      <topicdata name="PipeSecurity" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.Persist">
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
          <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
          <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
          <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
          <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.ReadUnlock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)" />
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorBinaryForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeSecurity.SetSecurityDescriptorSddlForm">
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)" />
          <element api="M:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)" />
        </element>
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteLock" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.WriteUnlock" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeSecurity">
      <topicdata name="PipeSecurity" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeSecurity" />
      <apidata name="PipeSecurity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.IO.Pipes.PipeSecurity.#ctor" />
      <elements>
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRightType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AccessRuleType" />
        <element api="P:System.IO.Pipes.PipeSecurity.AuditRuleType" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AccessRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.AuditRulesModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.GroupModified" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsContainer" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.IsDS" />
        <element api="P:System.Security.AccessControl.ObjectSecurity.OwnerModified" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule">
      <topicdata name="AddAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule">
      <topicdata name="AddAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.Persist">
      <topicdata name="Persist" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Persist" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)" />
        <element api="M:System.IO.Pipes.PipeSecurity.Persist(System.String)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
        <element api="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule">
      <topicdata name="RemoveAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific">
      <topicdata name="RemoveAccessRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule">
      <topicdata name="RemoveAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll">
      <topicdata name="RemoveAuditRuleAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAuditRuleAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific">
      <topicdata name="RemoveAuditRuleSpecific" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule">
      <topicdata name="ResetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule">
      <topicdata name="SetAccessRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule">
      <topicdata name="SetAuditRule" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)" />
        <element api="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AccessRightType">
      <topicdata group="api" />
      <apidata name="AccessRightType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRightType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRightType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
      <topicdata group="api" />
      <apidata name="AccessRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="type">
          <type api="T:System.Security.AccessControl.AccessControlType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AccessRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AccessRuleType">
      <topicdata group="api" />
      <apidata name="AccessRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AccessRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AccessRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="AddAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.AddAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="AddAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.AddAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
      <topicdata group="api" />
      <apidata name="AuditRuleFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="identityReference">
          <type api="T:System.Security.Principal.IdentityReference" ref="true" />
        </parameter>
        <parameter name="accessMask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isInherited">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="inheritanceFlags">
          <type api="T:System.Security.AccessControl.InheritanceFlags" ref="false" />
        </parameter>
        <parameter name="propagationFlags">
          <type api="T:System.Security.AccessControl.PropagationFlags" ref="false" />
        </parameter>
        <parameter name="flags">
          <type api="T:System.Security.AccessControl.AuditFlags" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.AccessControl.AuditRule" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeSecurity.AuditRuleType">
      <topicdata group="api" />
      <apidata name="AuditRuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.AccessControl.ObjectSecurity.AuditRuleType">
          <type api="T:System.Security.AccessControl.ObjectSecurity" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_AuditRuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IO.Pipes.PipeSecurity.Persist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:System.Runtime.InteropServices.SafeHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.Persist(System.String)">
      <topicdata group="api" />
      <apidata name="Persist" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IO.Pipes.PipeSecurity.Persist" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="RemoveAccessRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="RemoveAuditRuleSpecific" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="ResetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.ResetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)">
      <topicdata group="api" />
      <apidata name="SetAccessRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.SetAccessRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAccessRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)">
      <topicdata group="api" />
      <apidata name="SetAuditRule" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.IO.Pipes.PipeSecurity.SetAuditRule" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rule">
          <type api="T:System.IO.Pipes.PipeAuditRule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeStream">
      <topicdata group="api" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.IO.Pipes.AnonymousPipeServerStream" ref="true" />
          <type api="T:System.IO.Pipes.AnonymousPipeClientStream" ref="true" />
          <type api="T:System.IO.Pipes.NamedPipeServerStream" ref="true" />
          <type api="T:System.IO.Pipes.NamedPipeClientStream" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="Overload:System.IO.Pipes.PipeStream.#ctor">
          <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
          <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="Overload:System.IO.Pipes.PipeStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.PipeStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.PipeStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.IO.Pipes.PipeStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.PipeStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="MayLeakOnAbort">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="Methods.T:System.IO.Pipes.PipeStream">
      <topicdata name="PipeStream" group="list" subgroup="Methods" typeTopicId="T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckReadOperations" />
        <element api="M:System.IO.Pipes.PipeStream.CheckWriteOperations" />
        <element api="Overload:System.IO.Pipes.PipeStream.Dispose">
          <element api="M:System.IO.Stream.Dispose" />
          <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)" />
        <element api="M:System.IO.Pipes.PipeStream.Flush" />
        <element api="M:System.IO.Pipes.PipeStream.GetAccessControl" />
        <element api="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)" />
        <element api="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.ReadByte" />
        <element api="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)" />
        <element api="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)" />
        <element api="M:System.IO.Pipes.PipeStream.WaitForPipeDrain" />
        <element api="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)" />
        <element api="M:System.IO.Stream.Close" />
        <element api="Overload:System.IO.Pipes.PipeStream.CopyTo">
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeStream.CopyToAsync">
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)" />
          <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle" />
        <element api="Overload:System.IO.Pipes.PipeStream.FlushAsync">
          <element api="M:System.IO.Stream.FlushAsync" />
          <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant" />
        <element api="Overload:System.IO.Pipes.PipeStream.ReadAsync">
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.IO.Pipes.PipeStream.WriteAsync">
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
          <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)" />
        <element api="M:System.MarshalByRefObject.GetLifetimeService" />
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService" />
        <element api="Overload:System.IO.Pipes.PipeStream.MemberwiseClone">
          <element api="M:System.Object.MemberwiseClone" />
          <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" />
      </containers>
    </api>
    <api id="Properties.T:System.IO.Pipes.PipeStream">
      <topicdata name="PipeStream" group="list" subgroup="Properties" typeTopicId="T:System.IO.Pipes.PipeStream" />
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.IO.Pipes.PipeStream.CanRead" />
        <element api="P:System.IO.Pipes.PipeStream.CanSeek" />
        <element api="P:System.IO.Pipes.PipeStream.CanWrite" />
        <element api="P:System.IO.Pipes.PipeStream.InBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.IsAsync" />
        <element api="P:System.IO.Pipes.PipeStream.IsConnected" />
        <element api="P:System.IO.Pipes.PipeStream.IsHandleExposed" />
        <element api="P:System.IO.Pipes.PipeStream.IsMessageComplete" />
        <element api="P:System.IO.Pipes.PipeStream.Length" />
        <element api="P:System.IO.Pipes.PipeStream.OutBufferSize" />
        <element api="P:System.IO.Pipes.PipeStream.Position" />
        <element api="P:System.IO.Pipes.PipeStream.ReadMode" />
        <element api="P:System.IO.Pipes.PipeStream.SafePipeHandle" />
        <element api="P:System.IO.Pipes.PipeStream.TransmissionMode" />
        <element api="P:System.IO.Stream.CanTimeout" />
        <element api="P:System.IO.Stream.ReadTimeout" />
        <element api="P:System.IO.Stream.WriteTimeout" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeStream.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)" />
        <element api="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="Overload:System.IO.Pipes.PipeStream.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.IO.Stream.Dispose" />
        <element api="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Pipes.PipeStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.IO.Pipes.PipeStream.#ctor" />
      <parameters>
        <parameter name="direction">
          <type api="T:System.IO.Pipes.PipeDirection" ref="false" />
        </parameter>
        <parameter name="transmissionMode">
          <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
        </parameter>
        <parameter name="outBufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanRead">
      <topicdata group="api" />
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanSeek">
      <topicdata group="api" />
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.CanWrite">
      <topicdata group="api" />
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckPipePropertyOperations">
      <topicdata group="api" />
      <apidata name="CheckPipePropertyOperations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckReadOperations">
      <topicdata group="api" />
      <apidata name="CheckReadOperations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.CheckWriteOperations">
      <topicdata group="api" />
      <apidata name="CheckWriteOperations" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.IO.Pipes.PipeStream.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.GetAccessControl">
      <topicdata group="api" />
      <apidata name="GetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.InBufferSize">
      <topicdata group="api" />
      <apidata name="InBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_InBufferSize">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="InitializeHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handle">
          <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
        </parameter>
        <parameter name="isExposed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isAsync">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsAsync">
      <topicdata group="api" />
      <apidata name="IsAsync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsAsync" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsConnected">
      <topicdata group="api" />
      <apidata name="IsConnected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_IsConnected" />
      <setter name="set_IsConnected" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsHandleExposed">
      <topicdata group="api" />
      <apidata name="IsHandleExposed" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsHandleExposed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.IsMessageComplete">
      <topicdata group="api" />
      <apidata name="IsMessageComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMessageComplete">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.OutBufferSize">
      <topicdata group="api" />
      <apidata name="OutBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_OutBufferSize">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.Position">
      <topicdata group="api" />
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer" in="true" out="true">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.ReadByte">
      <topicdata group="api" />
      <apidata name="ReadByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.ReadByte">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.ReadMode">
      <topicdata group="api" />
      <apidata name="ReadMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ReadMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </setter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.SafePipeHandle">
      <topicdata group="api" />
      <apidata name="SafePipeHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SafePipeHandle">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:Microsoft.Win32.SafeHandles.SafePipeHandle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <topicdata group="api" />
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)">
      <topicdata group="api" />
      <apidata name="SetAccessControl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pipeSecurity">
          <type api="T:System.IO.Pipes.PipeSecurity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.SetLength(System.Int64)">
      <topicdata group="api" />
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:System.IO.Pipes.PipeStream.TransmissionMode">
      <topicdata group="api" />
      <apidata name="TransmissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_TransmissionMode">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.WaitForPipeDrain">
      <topicdata group="api" />
      <apidata name="WaitForPipeDrain" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:System.IO.Pipes.PipeStream.WriteByte(System.Byte)">
      <topicdata group="api" />
      <apidata name="WriteByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.WriteByte(System.Byte)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeStream" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:System.IO.Pipes.PipeStreamImpersonationWorker">
      <topicdata group="api" />
      <apidata name="PipeStreamImpersonationWorker" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
    </api>
    <api id="T:System.IO.Pipes.PipeTransmissionMode">
      <topicdata group="api" />
      <apidata name="PipeTransmissionMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.IO.Pipes.PipeTransmissionMode.Byte" />
        <element api="F:System.IO.Pipes.PipeTransmissionMode.Message" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeTransmissionMode.Byte">
      <topicdata group="api" notopic="" />
      <apidata name="Byte" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </containers>
    </api>
    <api id="F:System.IO.Pipes.PipeTransmissionMode.Message">
      <topicdata group="api" notopic="" />
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.8.3761.0" />
        </library>
        <namespace api="N:System.IO.Pipes" />
        <type api="T:System.IO.Pipes.PipeTransmissionMode" ref="false" />
      </containers>
    </api>
  </apis>
</reflection>